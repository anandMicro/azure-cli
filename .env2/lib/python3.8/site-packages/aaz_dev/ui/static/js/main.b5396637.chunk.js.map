{"version":3,"sources":["App.tsx","theme.tsx","withRoot.tsx","components/AppAppBar.tsx","components/PageLayout.tsx","views/home/HomePage.tsx","views/workspace/WorkspacePage.tsx","views/workspace/WorkspaceSelector.tsx","views/workspace/WorkspaceInstruction.tsx","components/EditorPageLayout.tsx","views/workspace/WSEditorSwaggerPicker.tsx","views/workspace/WSEditorToolBar.tsx","views/workspace/WSEditorCommandTree.tsx","views/workspace/WSEditorTheme.tsx","views/workspace/WSEditorCommandGroupContent.tsx","views/workspace/argument/WSECArgumentSimilarPicker.tsx","views/workspace/WSEditorCommandArgumentsContent.tsx","views/workspace/WSEditorCommandContent.tsx","views/workspace/WSEditor.tsx","views/commands/CommandsPage.tsx","views/cli/CLIPage.tsx","views/cli/CLIModuleSelector.tsx","views/cli/CLIInstruction.tsx","views/documentation/DocumentsPage.tsx","views/documentation/DocumentsTree.tsx","views/documentation/DocumentsDisplay.tsx","views/cli/CLIModGeneratorToolBar.tsx","views/cli/CLIModGeneratorProfileCommandTree.tsx","views/cli/CLIModGeneratorProfileTabs.tsx","views/cli/CLIModuleGenerator.tsx","index.tsx"],"names":["App","React","rawTheme","createTheme","palette","primary","light","main","dark","secondary","info","warning","error","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","button","textTransform","fontHeader","color","text","fontWeight","theme","background","default","common","white","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","withRoot","Component","props","ThemeProvider","CssBaseline","AppAppBar","AppBar","position","Toolbar","sx","justifyContent","height","Box","flex","display","alignItems","Link","variant","underline","href","this","pageName","p","ml","PageContainer","styled","Container","left","right","top","bottom","flexDirection","Background","backgroundSize","backgroundRepeat","zIndex","PageLayout","children","MiddlePadding","StepperHeaderTypography","Typography","StepContentTypography","activeStep","setActiveStep","handleStep","step","flexGrow","flexShrink","gutterBottom","width","mr","Stepper","nonLinear","orientation","Step","StepButton","onClick","StepContent","target","align","WorkspacePage","filter","createFilterOptions","defaultPlane","WorkspaceSelector","loadWorkspaces","axios","get","then","res","options","data","map","option","name","lastModified","Date","updated","url","plane","folder","setState","catch","err","console","handleDialogSubmit","event","currentTarget","checkValidity","workspaceName","state","createDialogValue","post","workspace","value","setTimeout","onValueUpdated","handleDialogClose","response","openDialog","window","location","Autocomplete","id","autoHighlight","onChange","newValue","inputValue","filterOptions","params","filtered","findIndex","e","push","title","getOptionLabel","renderOption","labelName","component","selectOnFocus","clearOnBlur","renderInput","TextField","label","inputProps","autoComplete","Dialog","open","onClose","onSubmit","DialogTitle","DialogContent","autoFocus","margin","required","type","DialogActions","Button","WorkspaceInstruction","EditorPageLayout","MiddlePadding2","UpdateOptions","WSEditorSwaggerPicker","handleClose","handleSubmit","addSwagger","loadSwaggerModules","a","v","preState","moduleOptions","moduleOptionsCommonPrefix","preModuleName","message","invalidText","loadResourceProviders","moduleUrl","preferredRP","selectedResourceProvider","length","resourceProviderOptions","resourceProviderOptionsCommonPrefix","onResourceProviderUpdate","loadWorkspaceResources","existingResources","Set","Array","isArray","forEach","resource","add","loadResources","resourceProviderUrl","undefined","loading","versionResourceIdMap","versionOptions","resourceMap","resourceIdList","aazVersions","versions","version","sort","b","localeCompare","reverse","selectVersion","filterBody","resources","aazResource","onVersionUpdate","selectedResources","selectedVersion","selectedModule","updateOption","selectedResourceInheritanceAAZVersionMap","resourceId","aaz_version","operations","find","opName","toLowerCase","update_by","requestBody","module","slice","replace","onModuleSelectorUpdate","moduleValueUrl","resourceOptions","r","has","preferredAAZVersion","onUpdateOptionUpdate","onResourceItemClick","delete","inheritanceAAZVersion","onSelectedAllClick","size","clear","onResourceInheritanceAAZVersionUpdate","aazVersion","updateOptions","filterText","modNames","join","rpUrl","rpName","IconButton","edge","alignContent","marginRight","ListSubheader","commonPrefix","onValueUpdate","disabled","List","subheader","mt","mb","Paper","square","ListItemButton","maxWidth","dense","ListItemIcon","Checkbox","checked","indeterminate","tabIndex","disableRipple","ListItemText","primaryTypographyProps","InputBase","trim","indexOf","labelId","selected","inheritanceOptions","selectedInheritance","ListItem","disablePadding","FormControl","m","minWidth","InputLabel","Select","MenuItem","inheritanceOption","FormHelperText","Backdrop","drawer","Alert","severity","CircularProgress","SwaggerItemSelector","ArgEditTypography","WSEditorToolBar","onHomePage","onGenerate","onDelete","onModify","startIcon","Tooltip","HeaderTypography","WSEditorCommandTree","onNodeSelected","nodeIds","onSelected","onNodeToggle","onToggle","commandTreeNodes","onAdd","onReload","expanded","renderNode","node","nodeName","names","TreeItem","nodeId","stopPropagation","preventDefault","leaves","leaf","leafName","renderLeaf","nodes","subNode","TreeView","defaultCollapseIcon","defaultExpandIcon","overflowY","CardTitleTypography","NameTypography","ShortHelpTypography","fontStyle","ShortHelpPlaceHolderTypography","LongHelpTypography","StableTypography","PreviewTypography","ExperimentalTypography","SmallPreviewTypography","SmallExperimentalTypography","SubtitleTypography","WSEditorCommandGroupContent","onCommandGroupDialogDisplay","displayCommandGroupDialog","onCommandGroupDeleteDialogDisplay","displayCommandGroupDeleteDialog","handleCommandGroupDialogClose","newCommandGroup","onUpdateCommandGroup","handleCommandGroupDeleteDialogClose","deleted","workspaceUrl","commandGroup","shortHelp","help","short","longHelp","lines","stage","Card","elevation","CardContent","line","idx","CardActions","disableElevation","canDelete","CommandGroupDeleteDialog","updating","setUpdating","disableEscapeKeyDown","dividers","LinearProgress","nodeUrl","CommandGroupDialog","handleModify","split","n","piece","test","l","patch","cmdGroup","DecodeResponseCommandGroup","JSON","stringify","details","shrink","font","RadioGroup","row","FormControlLabel","control","Radio","fullWidth","helperText","multiline","decodeResponseArgSimilarCommand","responseCommand","commandName","command","args","total","selectedCount","argVar","arg","var","indexes","isSelected","decodeResponseArgSimilarGroup","responseGroup","groupName","group","commandGroups","groups","subGroup","commands","gatherNodeIds","BuildArgSimilarTree","tree","root","aaz","selectedArgIds","expandedIds","updateSelectionStateForArgSimilarTree","updateSelectionStateForArgSimilarGroup","selectedIds","newSelectedIds","newGroup","newSubGroup","subSelectedIds","newCommand","idParts","newId","updateSelectionStateForArgSimilarCommand","WSECArgumentSimilarPicker","onCheckItem","itemId","select","startsWith","onTreeUpdated","renderCommand","paddingLeft","isUpdated","updatedIds","renderArg","renderGroup","ArgumentNavigation","useState","argIdxStack","setArgIdxStack","getArgProps","selectedArgBase","clsArgDefine","clsArgDefineMap","clsName","clsArgProps","flattenArgVar","item","itemProps","getSelectedArg","stack","selectedArg","i","useEffect","commandUrl","pop","handleSelectSubArg","subArgVar","subArg","argIdx","displayKey","argType","handleChangeArgIdStack","end","Fragment","ArgNavBar","onChangeArgIdStack","ArgumentReviewer","depth","onEdit","onUnwrap","buildArgumentReviewer","ArgumentPropsReviewer","onFlatten","onAddSubcommand","onSelectSubArg","argProps","canFlatten","buildArgumentPropsReviewer","NavBarItemTypography","NavBarItemHightLightedTypography","ButtonBase","index","spliceArgOptionsString","optionsString","singularOptions","singularOptionString","ArgNameTypography","ArgTypeTypography","ArgRequiredTypography","ArgChoicesTypography","choices","setChoices","newChoices","enum","items","enumItem","getUnwrapKeywords","argOptionsString","buildArgOptionsString","toString","getDefaultValueToString","ArgumentDialog","setStage","setInvalidText","setOptions","setSingularOptions","setGroup","hide","setHide","setShortHelp","setLongHelp","argSimilarTree","setArgSimilarTree","argSimilarTreeExpandedIds","setArgSimilarTreeExpandedIds","argSimilarTreeArgIdsUpdated","setArgSimilarTreeArgIdsUpdated","hasDefault","setHasDefault","defaultValue","setDefaultValue","defaultValueInJson","setDefaultValueInJson","verifyModification","sName","sHelp","lHelp","gName","sNames","argDefault","convertArgDefaultText","argumentUrl","decodeArg","handleModifySimilar","argId","log","Switch","hiddenLabel","hidden","newTree","similarUrl","FlattenDialog","subArgOptions","setSubArgOptions","subArgs","verifyFlatten","argOptions","subArgsOptions","handleFlatten","flattenUrl","handleFlattenSimilar","UnwrapClsDialog","handleUnwrap","PropArgTypeTypography","PropRequiredTypography","PropHiddenTypography","ArgGroupTypography","PropArgOptionTypography","PropHiddenArgOptionTypography","PropArgShortSummaryTypography","groupArgs","buildArg","decodeArgEnum","decodeArgEnumItem","decodeArgBlank","decodeArgDefault","decodeArgBase","argBase","nullable","clsDefineMap","blank","resSubArg","subArgParse","additionalProps","itemArgBaseParse","argBaseType","anyType","cls","Error","refCommands","decodeArgHelp","idPart","defaultText","Number","isNaN","parseInt","parseFloat","parse","WSEditorCommandArgumentsContent","displayArgumentDialog","setDisplayArgumentDialog","editArg","setEditArg","setEditArgIdxStack","displayFlattenDialog","setDisplayFlattenDialog","displayUnwrapClsDialog","setDisplayUnwrapClsDialog","handleArgumentDialogClose","onReloadArgs","handleFlattenDialogClose","flattened","handleUnwrapClsDialogClose","unwrapped","argStackNames","endsWith","pluralize","singular","onAddSubCommand","commandPrefix","ExampleCommandHeaderTypography","ExampleCommandBodyTypography","ExampleEditTypography","ExampleAccordionSummary","expandIcon","transform","WSEditorCommandContent","loadCommand","previewCommand","commandNames","leafUrl","DecodeResponseCommand","onCommandDialogDisplay","displayCommandDialog","onCommandDeleteDialogDisplay","displayCommandDeleteDialog","handleCommandDialogClose","onUpdateCommand","handleCommandDeleteDialogClose","onExampleDialogDisplay","displayExampleDialog","exampleIdx","handleExampleDialogClose","onAddSubcommandDialogDisplay","displayAddSubcommandDialog","subcommandArgVar","subcommandSubArgOptions","subcommandDefaultGroupNames","handleAddSubcommandDisplayClose","prevProps","reloadTimestamp","buildExampleView","example","Accordion","onDoubleClick","AccordionDetails","paddingTop","exampleCommand","cmdIdx","buildCommandCard","examples","buildExampleCard","CommandDeleteDialog","AddSubcommandDialog","defaultGroupNames","relatedCommands","setRelatedCommands","getUrls","urls","btoa","subresource","promisesAll","Promise","all","responses","cmd","cmdNames","cmdName","CommandDialog","confirmation","ExampleCommandTypography","ExampleDialog","onUpdateExamples","handleDelete","exampleCommands","cmdLine","newExample","handleAdd","onModifyExampleCommand","onRemoveExampleCommand","onAddExampleCommand","isAdd","Input","startAdornment","InputAdornment","commandGroupName","setCommandGroupName","refArgsOptions","setRefArgsOptions","verifyAddSubresource","handleAddSubresource","FormLabel","argGroups","argGroup","resArg","argDecode","DecodeArgs","swaggerResourcePickerTransition","ref","Slide","direction","WSEditor","loadWorkspace","preSelectedId","now","commandMap","commandGroupMap","buildCommand","command_1","buildCommandGroup","commandGroup_1","subLeave","name_1","a_1","b_1","commandTree","key","cmdGroups","a_2","b_2","parts","parts_1","id_1","newExpanded","groupId","expandedId","expandedIdParts","showSwaggerResourcePicker","showSwaggerReloadDialog","handleSwaggerReloadDialogClose","reloaded","handleSwaggerResourcePickerClose","handleBackToHomepage","handleGenerate","showExportDialog","handleGenerationClose","exported","showDeleteDialog","handleDeleteClose","showModifyDialog","handleModifyClose","newWSName","target_url","reload","handleCommandTreeSelect","handleCommandGroupUpdate","handleCommandUpdate","handleCommandTreeToggle","expandId","Drawer","boxSizing","fullScreen","TransitionComponent","WSEditorDeleteDialog","WSEditorExportDialog","confirmName","setConfirmName","WSEditorSwaggerReloadDialog","loadResourceOptions","handleReload","op","WSRenameDialog","nName","WSEditorWrapper","useParams","CommandsPage","CLIPage","CLIModuleSelector","loadModules","repo","moduleName","SpacePadding","CLIInstruction","DocumentsPage","DocumentsTree","onNodeSelect","DecodeResponseDocumentTreeNode","file","pages","DocumentsDisplay","setSelected","documentTree","setDocumentTree","markDownContent","setMarkDownContent","setExpanded","handleTreeSelect","status","content","loadDocument","docId","loadDocumentIndex","dt","iterNode","appBar","pt","pb","remarkPlugins","remarkGfm","components","PComponent","H1Component","H2Component","H3Component","ul","listStyleType","li","code","match","exec","className","inline","paddingRight","style","prismStyle","language","PreTag","img","alt","src","table","TableContainer","Table","thead","TableHead","tr","TableRow","border","th","TableCell","td","marginTop","DocumentsDisplayWrapper","CLIModGeneratorToolBar","CommandGroupTypography","CommandTypography","SelectionTypography","RegisteredTypography","UnregisteredTypography","decodeProfileCTCommandGroup","Object","keys","decodeProfileCTCommandVersion","modified","decodeProfileCTCommand","totalCommands","reduce","previousValue","selectedCommands","BuildProfileCommandTree","profileName","getDefaultExpandedOfCommandGroup","flatMap","updateCommand","commandId","registered","registerCommand","updateCommandGroup","pre","updateProfileCommandTree","updateCommandGroupByModView","view","updateCommandByModView","commandGroupNames","waitCommand","UpdateProfileCommandTreeByModView","ExportModViewCommandGroup","ExportModViewCommand","ExportModViewProfile","CLIModGeneratorProfileCommandTree","onSelectCommandGroup","commandGroupId","profileCommandTree","onSelectCommand","onSelectCommandVersion","onSelectCommandRegistered","defaultExpanded","ids","renderCommandGroup","marginLeft","marginBottom","disableSelection","CLIModGeneratorProfileTabs","profiles","Tabs","borderRight","borderColor","profile","Tab","CLIModuleGenerator","loadModule","commandTrees","repoName","modView","selectedProfileIdx","selectedCommandTree","showGenerateDialog","generated","onProfileChange","selectedIdx","onSelectedProfileTreeUpdate","GenerateDialog","profileCommandTrees","put","CLIModuleGeneratorWrapper","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b5396637.chunk.js","sourcesContent":["import { Outlet} from \"react-router-dom\";\nimport * as React from 'react';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Outlet />\n    );\n  }\n}\n\nexport default App;","import { createTheme } from \"@mui/material\";\nimport { red, green, grey } from \"@mui/material/colors\";\n\nconst rawTheme = createTheme({\n    palette: {\n        primary: {\n            light: '#69696a',\n            main: '#28282a',\n            dark: '#1e1e1f',\n        },\n        secondary: {\n            light: '#fff5f8',\n            main: '#ff3366',\n            dark: '#e62958',\n        },\n        info: {\n            light: '#cccfff',\n            main: '#5d64cf',\n            dark: '#464c99',\n        },\n        warning: {\n            main: '#ffc071',\n            dark: '#ffb25e',\n        },\n        error: {\n            light: red[50],\n            main: red[500],\n            dark: red[700],\n        },\n        success: {\n            light: green[50],\n            main: green[500],\n            dark: green[700],\n        },\n    },\n    typography: {\n        fontFamily: \"'Work Sans', sans-serif\",\n        fontSize: 14,\n        fontWeightLight: 300, // Work Sans\n        fontWeightRegular: 400, // Work Sans\n        fontWeightMedium: 700, // Roboto Condensed\n        button: {\n            textTransform: \"none\"\n        }\n    },\n});\n\nconst fontHeader = {\n    color: rawTheme.palette.text.primary,\n    fontWeight: rawTheme.typography.fontWeightMedium,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n};\n\nconst theme = {\n    ...rawTheme,\n    palette: {\n        ...rawTheme.palette,\n        background: {\n            ...rawTheme.palette.background,\n            default: rawTheme.palette.common.white,\n            placeholder: grey[200],\n        },\n    },\n    typography: {\n        ...rawTheme.typography,\n        fontHeader,\n        h1: {\n            ...rawTheme.typography.h1,\n            ...fontHeader,\n            letterSpacing: 0,\n            fontSize: 60,\n        },\n        h2: {\n            ...rawTheme.typography.h2,\n            ...fontHeader,\n            fontSize: 48,\n        },\n        h3: {\n            ...rawTheme.typography.h3,\n            ...fontHeader,\n            fontSize: 42,\n        },\n        h4: {\n            ...rawTheme.typography.h4,\n            ...fontHeader,\n            fontSize: 36,\n        },\n        h5: {\n            ...rawTheme.typography.h5,\n            fontSize: 20,\n            fontWeight: rawTheme.typography.fontWeightLight,\n        },\n        h6: {\n            ...rawTheme.typography.h6,\n            ...fontHeader,\n            fontSize: 18,\n            fontWeight: rawTheme.typography.fontWeightRegular,\n        },\n        subtitle1: {\n            ...rawTheme.typography.subtitle1,\n            fontSize: 18,\n        },\n        body1: {\n            ...rawTheme.typography.body1,\n            fontWeight: rawTheme.typography.fontWeightRegular,\n            fontSize: 16,\n        },\n        body2: {\n            ...rawTheme.typography.body2,\n            fontSize: 14,\n        },\n    }\n}\n\nexport default theme;\n","import * as React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from './theme';\n\nexport default function withRoot<P>(Component: React.ComponentType<P>) {\n  function WithRoot(props: P) {\n    return (\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </ThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport { AppBar, Toolbar } from '@mui/material';\nimport theme from '../theme';\n\n\n\ntype AppAppBarProps = {\n    pageName: string | null,\n};\n\n\nclass AppAppBar extends React.Component<AppAppBarProps> {\n\n    render() {\n\n        return (\n            <div>\n                <AppBar position='fixed'>\n                    <Toolbar sx={{ justifyContent: \"space-between\", height: 64 }}>\n                        <Box sx={{ flex: 1, display: 'flex', justifyContent: \"flex-start\", alignItems: \"center\"}} >\n                        <Link\n                            variant=\"h6\"\n                            underline=\"none\"\n                            color=\"inherit\"\n                            \n                            href=\"/?#/HomePage\"\n                            fontWeight={\n                                this.props.pageName === \"HomePage\" ? \n                                theme.typography.fontWeightMedium : \n                                theme.typography.fontWeightLight\n                            }\n                        >\n                            {'Home'}\n                        </Link>\n                        <Box sx={{ p: 4}}/>\n                        <Link\n                            variant=\"h6\"\n                            underline=\"none\"\n                            color=\"inherit\"\n                            href=\"/?#/Workspace\"\n                            fontWeight={\n                                this.props.pageName === \"Workspace\" ? \n                                theme.typography.fontWeightMedium : \n                                theme.typography.fontWeightLight\n                            }\n                        >\n                            {'Workspace'}\n                        </Link>\n                        {/* <Box sx={{ p: 4}}/>\n                        <Link\n                            variant=\"h6\"\n                            underline=\"none\"\n                            color=\"inherit\"\n                            href=\"/?#/Commands\"\n                            fontWeight={\n                                this.props.pageName === \"Commands\" ? \n                                theme.typography.fontWeightMedium : \n                                theme.typography.fontWeightLight\n                            }\n                        >\n                            {'Commands'}\n                        </Link> */}\n                        <Box sx={{ p: 4}}/>\n                        <Link\n                            variant=\"h6\"\n                            underline=\"none\"\n                            color=\"inherit\"\n                            href=\"/?#/CLI\"\n                            fontWeight={\n                                this.props.pageName === \"CLI\" ? \n                                theme.typography.fontWeightMedium : \n                                theme.typography.fontWeightLight\n                            }\n                        >\n                            {'CLI'}\n                        </Link>\n                        </Box>\n                        \n                        <Box sx={{ flex: 1, display: 'flex', justifyContent: 'flex-end' }}>\n                            <Link\n                                color=\"inherit\"\n                                variant=\"h6\"\n                                underline=\"none\"\n                                href=\"/?#/Documents\"\n                                fontWeight={\n                                    this.props.pageName === \"Documents\" ?\n                                    theme.typography.fontWeightMedium : \n                                    theme.typography.fontWeightLight\n                                }\n                                sx={{\n                                    fontSize: 16,\n                                    color: 'common.white',\n                                    ml: 3,\n                                }}\n                            >\n                                {'Docs'}\n                            </Link>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport { AppAppBar };","import { Container, styled } from '@mui/material';\nimport { Box } from '@mui/system';\nimport * as React from 'react';\n\nconst PageContainer = styled(Container)(({theme}) => ({\n    color: theme.palette.common.white,\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 64,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n    flexDirection: 'row',\n    justifyContent: 'center',\n}));\n\n\nconst Background = styled(Box)({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    zIndex: -2,\n});\n\n\nexport default function PageLayout(\n    props: React.HTMLAttributes<HTMLDivElement>\n) {\n    const { children } = props;\n\n    return (\n        <React.Fragment >\n            <PageContainer>\n                {children}\n            </PageContainer>\n            <Background/>\n        </React.Fragment>\n    )\n}\n\n","import * as React from 'react';\nimport { Typography, Box, Link, Stepper, Step, StepButton, StepContent, TypographyProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport withRoot from '../../withRoot';\nimport { AppAppBar } from '../../components/AppAppBar';\nimport PageLayout from '../../components/PageLayout';\n\n\nconst MiddlePadding = styled(Box)(({ theme }) => ({\n    height: '6vh'\n}));\n\n\nconst StepperHeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 24,\n    fontWeight: 600,\n}))\n\nconst StepContentTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}))\n\n\nfunction HomePage() {\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleStep = (step: number) => () => {\n        setActiveStep(step);\n    }\n\n\n    return (\n        <React.Fragment>\n            <AppAppBar pageName={'HomePage'} />\n            <PageLayout>\n                <Box sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                }}>\n                    <Box sx={{ flexGrow: 3 }} />\n                    <Box sx={{\n                        flexGrow: 3,\n                        flexShrink: 0,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        flexDirection: 'column'\n                    }}>\n                        <Typography variant='h2' gutterBottom>\n                            Welcome to\n                        </Typography>\n                        <Typography variant='h2' gutterBottom>\n                            AAZ Development Tool\n                        </Typography>\n                        <MiddlePadding />\n\n                        <Box sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"flex-start\",\n                            justifyContent: \"center\"\n                        }}>\n                            <Box sx={{\n                                width: 350,\n                                display: \"flex\",\n                                flexDirection: \"row-reverse\",\n                                mr: 3\n                            }}>\n\n                                <StepperHeaderTypography gutterBottom>\n                                    Getting Started\n                                </StepperHeaderTypography>\n                            </Box>\n\n                            <Box sx={{ width: 450, ml: 3 }}>\n                                <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n                                    <Step>\n                                        <StepButton color=\"inherit\" onClick={handleStep(0)}>\n                                            {\"Introduce\"}\n                                        </StepButton>\n                                        <StepContent>\n                                            <StepContentTypography>\n                                                {\"AAZDev is a tool that helps Azure CLI developers generate Atomic CLI commands from REST API Specifications.\"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                {\"Go to \"}\n                                                <Link\n                                                    href=\"/?#/Documents\"\n                                                    // align=\"center\"\n                                                    underline=\"always\"\n                                                    target=\"_blank\"\n                                                >Introduction</Link>\n                                                {\" for more details.\"}\n                                            </StepContentTypography>\n                                        </StepContent>\n                                    </Step>\n                                    <Step>\n                                        <StepButton color=\"inherit\" onClick={handleStep(1)}>\n                                            {\"Prepare Swagger\"}\n                                        </StepButton>\n                                        <StepContent>\n                                            <StepContentTypography>\n                                                {\"The definition of API in swagger is required before using AAZDev tool.\"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                {\"Please make sure the API specs has been defined in \"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                <Link\n                                                    href=\"https://github.com/Azure/azure-rest-api-specs\"\n                                                    // align=\"center\"\n                                                    underline=\"always\"\n                                                    target=\"_blank\"\n                                                >azure-rest-api-specs</Link>\n                                                {\" repo or \"}\n                                                <Link\n                                                    href=\"https://github.com/Azure/azure-rest-api-specs-pr\"\n                                                    // align=\"center\"\n                                                    underline=\"always\"\n                                                    target=\"_blank\"\n                                                >azure-rest-api-specs-pr</Link>\n                                                {\" repo.\"}\n                                            </StepContentTypography>\n                                        </StepContent>\n                                    </Step>\n                                    <Step>\n                                        <StepButton color=\"inherit\" onClick={handleStep(2)}>\n                                            {\"Build Command Models\"}\n                                        </StepButton>\n                                        <StepContent>\n                                            <StepContentTypography>\n                                                {\"Model editors can help you build command models.\"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                {\"To build command models from swagger,\"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                {\"please use \"}\n                                                <Link\n                                                    href=\"/?#/Workspace\"\n                                                    align=\"center\"\n                                                    underline=\"always\"\n                                                >Workspace</Link>\n                                                {\" editor.\"}\n                                            </StepContentTypography>\n                                        </StepContent>\n                                    </Step>\n                                    <Step>\n                                        <StepButton color=\"inherit\" onClick={handleStep(3)}>\n                                            {\"Generate CLI Code\"}\n                                        </StepButton>\n                                        <StepContent>\n                                            <StepContentTypography>\n                                                {\"To convert command models to CLI code,\"}\n                                            </StepContentTypography>\n                                            <StepContentTypography>\n                                                {\"please use \"}\n                                                <Link\n                                                    href=\"/?#/CLI\"\n                                                    align=\"center\"\n                                                    underline=\"always\"\n                                                >CLI</Link>\n                                                {\" generators.\"}\n                                            </StepContentTypography>\n                                        </StepContent>\n                                    </Step>\n                                </Stepper>\n                            </Box>\n                        </Box>\n                    </Box>\n                    <Box sx={{ flexGrow: 5 }} />\n                </Box>\n            </PageLayout>\n        </React.Fragment>\n    )\n}\n\nexport default withRoot(HomePage);\n","import * as React from 'react';\nimport withRoot from '../../withRoot';\nimport { Outlet } from 'react-router';\n\nclass WorkspacePage extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <Outlet />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRoot(WorkspacePage);\n","import { Autocomplete, createFilterOptions, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { Url } from 'url';\n\n\ninterface Workspace {\n    name: string,\n    plane: string | null,\n    lastModified: Date | null,\n    url: Url | null,\n    folder: string | null,\n}\n\ninterface WorkspaceSelectorProps {\n    name: string,\n}\n\ninterface WorkspaceSelectorState {\n    options: any[],\n    value: Workspace | null,\n    openDialog: boolean,\n    createDialogValue: Workspace\n    // dialogValidated: boolean\n}\n\ninterface InputType {\n    inputValue: string,\n    title: string,\n}\n\nconst filter = createFilterOptions<Workspace | InputType>();\n\nconst defaultPlane = \"mgmt-plane\"\n\nclass WorkspaceSelector extends React.Component<WorkspaceSelectorProps, WorkspaceSelectorState> {\n\n    constructor(props: WorkspaceSelectorProps) {\n        super(props);\n        this.state = {\n            options: [],\n            value: null,\n            openDialog: false,\n            createDialogValue: {\n                name: \"\",\n                plane: null,\n                lastModified: null,\n                url: null,\n                folder: null,\n            },\n            // dialogValidated: false\n        }\n    }\n\n    componentDidMount() {\n        this.loadWorkspaces();\n    }\n\n    loadWorkspaces = () => {\n        axios.get(\"/AAZ/Editor/Workspaces\")\n            .then((res) => {\n                let options = res.data.map((option: any) => {\n                    return {\n                        name: option.name,\n                        lastModified: new Date(option.updated * 1000),\n                        url: option.url,\n                        plane: option.plane,\n                        folder: option.folder\n                    }\n                });\n                this.setState({\n                    options: options\n                })\n            })\n            .catch((err) => console.error(err));\n    }\n\n    handleDialogSubmit = (event: any) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            const workspaceName = this.state.createDialogValue.name\n            const plane = this.state.createDialogValue.plane\n            axios.post('/AAZ/Editor/Workspaces', {\n                name: workspaceName,\n                plane: plane,\n            })\n                .then((res) => {\n                    let workspace = res.data;\n                    let value = {\n                        name: workspace.name,\n                        lastModified: new Date(workspace.updated * 1000),\n                        url: workspace.url,\n                        plane: workspace.plane,\n                        folder: workspace.folder\n                    }\n                    setTimeout(() => {\n                        this.onValueUpdated(value);\n                    })\n                    this.handleDialogClose();\n                })\n                .catch(error => {\n                    console.error(error.response);\n                })\n        }\n    }\n\n    handleDialogClose = () => {\n        this.setState({\n            createDialogValue: {\n                name: \"\",\n                plane: null,\n                lastModified: null,\n                url: null,\n                folder: null,\n            },\n            openDialog: false,\n            // dialogValidated: false,\n        })\n    }\n\n    onValueUpdated = (value: any) => {\n        this.setState({\n            value: value\n        });\n        if (value.url) {\n            window.location.href = `/?#/workspace/${value.name}`\n        }\n    }\n\n    render() {\n        const { options, value, openDialog, createDialogValue } = this.state\n        const { name } = this.props\n        return (\n            <React.Fragment>\n                <Autocomplete\n                    id=\"workspace-select\"\n                    value={value}\n                    sx={{ width: 280 }}\n                    options={options}\n                    autoHighlight\n                    onChange={(event, newValue: any) => {\n                        if (typeof newValue === 'string') {\n                            // timeout to avoid instant validation of the dialog's form.\n                            setTimeout(() => {\n                                this.setState({\n                                    openDialog: true,\n                                    createDialogValue: {\n                                        name: newValue,\n                                        plane: defaultPlane,\n                                        lastModified: null,\n                                        url: null,\n                                        folder: null,\n                                    }\n                                })\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            this.setState({\n                                openDialog: true,\n                                createDialogValue: {\n                                    name: newValue.inputValue,\n                                    plane: defaultPlane,\n                                    lastModified: null,\n                                    url: null,\n                                    folder: null,\n                                }\n                            })\n                        } else {\n                            this.onValueUpdated(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params: any) => {\n                        const filtered = filter(options, params);\n                        if (params.inputValue !== '' && -1 === options.findIndex((e) => e.name === params.inputValue)) {\n                            filtered.push({\n                                inputValue: params.inputValue,\n                                title: `Create \"${params.inputValue}\"`,\n                            });\n                        }\n                        return filtered;\n                    }}\n                    getOptionLabel={(option) => {\n                        if (typeof option === \"string\") {\n                            return option;\n                        }\n                        if (option.title) {\n                            return option.title;\n                        }\n                        return option.name;\n                    }}\n                    renderOption={(props, option) => {\n                        let labelName = (option && option.title) ? option.title : option.name;\n                        return (\n                            <Box component='li'\n                                {...props}\n                            >\n                                {labelName}\n                            </Box>\n                        )\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label={name}\n                            inputProps={{\n                                ...params.inputProps,\n                                autoComplete: 'new-password', // disable autocomplete and autofill\n                            }}\n                        />\n                    )}\n                />\n                <Dialog open={openDialog} onClose={this.handleDialogClose}>\n                    <Box component='form' onSubmit={this.handleDialogSubmit}>\n                        <DialogTitle>\n                            Create a new workspace\n                        </DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"normal\"\n                                id=\"name\"\n                                required\n                                value={createDialogValue.name}\n                                onChange={(event: any) => {\n                                    this.setState({\n                                        createDialogValue: {\n                                            ...createDialogValue,\n                                            name: event.target.value,\n                                        }\n                                    })\n                                }}\n                                label=\"Name\"\n                                type=\"text\"\n                                variant='standard'\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleDialogClose}>Cancel</Button>\n                            <Button type=\"submit\" color=\"success\">Create</Button>\n                        </DialogActions>\n                    </Box>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default WorkspaceSelector\n","import * as React from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport WorkspaceSelector from './WorkspaceSelector';\nimport { AppAppBar } from '../../components/AppAppBar';\nimport PageLayout from '../../components/PageLayout';\n\n\nconst MiddlePadding = styled(Box)(({ theme }) => ({\n    height: '6vh'\n}));\n\nclass WorkspaceInstruction extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AppAppBar pageName={'Workspace'} />\n                <PageLayout>\n                    <Box sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                    }}>\n                        <Box sx={{ flexGrow: 3 }} />\n                        <Box sx={{\n                            flexGrow: 3,\n                            flexShrink: 0,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column'\n                        }}>\n                            <Typography variant='h3' gutterBottom>\n                                Please select a Workspace\n                            </Typography>\n                            <MiddlePadding />\n                            <WorkspaceSelector name='Open or create a workspace' />\n                        </Box>\n                        <Box sx={{ flexGrow: 5 }} />\n                    </Box>\n                </PageLayout>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default WorkspaceInstruction;\n","import { styled } from '@mui/material';\nimport { Box } from '@mui/system';\nimport * as React from 'react';\n\nconst PageContainer = styled(Box)(({theme}) => ({\n    color: theme.palette.common.white,\n    position: 'absolute',\n    left: '6vh',\n    right: '6vh',\n    top: 64,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n}));\n\n\nconst Background = styled(Box)({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    zIndex: -2,\n});\n\n\nexport default function EditorPageLayout(\n    props: React.HTMLAttributes<HTMLDivElement>\n) {\n    const { children } = props;\n\n    return (\n        <React.Fragment >\n            <PageContainer>\n                {children}\n            </PageContainer>\n            <Background/>\n        </React.Fragment>\n    )\n}\n\n","import * as React from 'react';\nimport { Typography, Box, AppBar, Toolbar, IconButton, Button, Autocomplete, TextField, Backdrop, CircularProgress, List, ListSubheader, ListItem, ListItemButton, ListItemIcon, Checkbox, ListItemText, FormControlLabel, Alert, Card, CardContent, AlertTitle, Paper, InputBase, Select, MenuItem, FormControl, InputLabel, FormHelperText } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from 'axios';\nimport EditorPageLayout from '../../components/EditorPageLayout';\nimport { styled } from '@mui/material/styles';\n// import SortIcon from '@mui/icons-material/Sort';\n\n\ninterface WSEditorSwaggerPickerProps {\n    workspaceName: string,\n    plane: string,\n    onClose: (updated: boolean) => void\n}\n\ninterface WSEditorSwaggerPickerState {\n    loading: boolean\n\n    plane: string\n\n    // preModuleName: string | null\n    // preResourceProvider: string | null\n    // preVersion: string | null\n\n    moduleOptions: string[],\n    resourceProviderOptions: string[],\n    versionOptions: string[],\n\n    versionResourceIdMap: VersionResourceIdMap,\n    resourceMap: ResourceMap,\n    resourceOptions: Resource[],\n\n    existingResources: Set<string>,\n    selectedResources: Set<string>,\n    selectedResourceInheritanceAAZVersionMap: ResourceInheritanceAAZVersionMap,\n    preferredAAZVersion: string | null,\n\n    moduleOptionsCommonPrefix: string,\n    resourceProviderOptionsCommonPrefix: string,\n\n    selectedModule: string | null,\n    selectedResourceProvider: string | null,\n    selectedVersion: string | null,\n\n    updateOptions: string[],\n    updateOption: string,\n    invalidText?: string,\n    filterText: string,\n}\n\ntype ResourceVersionOperations = {\n    [Named: string]: string\n}\n\ntype ResourceVersion = {\n    version: string\n    operations: ResourceVersionOperations\n    file: string\n    id: string\n    path: string\n}\n\ntype Resource = {\n    id: string\n    versions: ResourceVersion[]\n    aazVersions: string[] | null\n}\n\ntype AAZResource = {\n    id: string\n    versions: string[] | null\n}\n\ntype VersionResourceIdMap = {\n    [version: string]: Resource[]\n}\n\ntype ResourceInheritanceAAZVersionMap = {\n    [id: string]: string | null\n}\n\ntype ResourceMap = {\n    [id: string]: Resource\n}\n\nconst MiddlePadding = styled(Box)(({ theme }) => ({\n    height: '2vh'\n}));\n\nconst MiddlePadding2 = styled(Box)(({ theme }) => ({\n    height: '8vh'\n}));\n\nconst UpdateOptions = [\"Generic(Get&Put) First\", \"Patch First\", \"No update command\"];\n\nclass WSEditorSwaggerPicker extends React.Component<WSEditorSwaggerPickerProps, WSEditorSwaggerPickerState> {\n\n    constructor(props: WSEditorSwaggerPickerProps) {\n        super(props);\n        this.state = {\n            loading: false,\n            invalidText: undefined,\n            // preModuleName: null,\n            // preResourceProvider: null,\n            // preVersion: null,\n            existingResources: new Set(),\n\n            plane: this.props.plane,\n            moduleOptionsCommonPrefix: '',\n            resourceProviderOptionsCommonPrefix: '',\n            moduleOptions: [],\n            versionOptions: [],\n            resourceProviderOptions: [],\n            selectedResources: new Set(),\n            selectedResourceInheritanceAAZVersionMap: {},\n            preferredAAZVersion: null,\n            resourceOptions: [],\n            versionResourceIdMap: {},\n            resourceMap: {},\n            selectedModule: null,\n            selectedResourceProvider: null,\n            selectedVersion: null,\n            updateOptions: UpdateOptions,\n            updateOption: UpdateOptions[0],\n            filterText: \"\",\n        }\n    }\n\n    componentDidMount() {    \n        this.loadWorkspaceResources().then(async () => {\n            await this.loadSwaggerModules(this.props.plane);\n            try {\n                let res = await axios.get(`/AAZ/Editor/Workspaces/${this.props.workspaceName}/SwaggerDefault`);\n                // default module name\n                if (res.data.modNames === null || res.data.modNames.length == 0) {\n                    return;\n                }\n                let moduleValueUrl = `/Swagger/Specs/${this.props.plane}/` + res.data.modNames.join('/');\n                if (this.state.moduleOptions.findIndex(v => v === moduleValueUrl) == -1 ) {\n                    return\n                }\n                let rpUrl = null;\n                if (res.data.rpName !== null && res.data.rpName.length > 0) {\n                    rpUrl = `${moduleValueUrl}/ResourceProviders/${res.data.rpName}`\n                }\n                this.setState({\n                    selectedModule: moduleValueUrl\n                });\n                await this.loadResourceProviders(moduleValueUrl, rpUrl);\n            } catch (err: any) {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    this.setState({\n                        invalidText: `ResponseError: ${data.message!}`,\n                    })\n                }\n            }\n        })\n    }\n\n    handleClose = () => {\n        this.props.onClose(false);\n    }\n\n    handleSubmit = () => {\n        this.addSwagger()\n    }\n\n    loadSwaggerModules = async (plane: string) => {\n        try {\n            let res = await axios.get(`/Swagger/Specs/${plane}`);\n            const options: string[] = res.data.map((v: any) => (v.url));\n            this.setState(preState => {\n                return {\n                    ...preState,\n                    moduleOptions: options,\n                    moduleOptionsCommonPrefix: `/Swagger/Specs/${plane}/`,\n                    preModuleName: null,\n                }\n            });\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}`,\n                })\n            }\n        }\n    }\n\n    loadResourceProviders = async (moduleUrl: string | null, preferredRP: string | null) => {\n        if (moduleUrl != null) {\n            try {\n                let res = await axios.get(`${moduleUrl}/ResourceProviders`);\n                const options: string[] = res.data.map((v: any) => (v.url));\n                let selectedResourceProvider = options.length === 1 ? options[0] : null;\n                if (preferredRP !== null && options.findIndex(v => v === preferredRP) >= 0) {\n                    selectedResourceProvider = preferredRP\n                }\n                this.setState({\n                    resourceProviderOptions: options,\n                    resourceProviderOptionsCommonPrefix: `${moduleUrl}/ResourceProviders/`\n                });\n                await this.onResourceProviderUpdate(selectedResourceProvider);\n            } catch (err: any) {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    this.setState({\n                        invalidText: `ResponseError: ${data.message!}`,\n                    })\n                }\n            }\n        } else {\n            this.setState({\n                resourceProviderOptions: [],\n            })\n            this.onResourceProviderUpdate(null);\n        }\n    }\n\n    loadWorkspaceResources = async () => {\n        try {\n            let res = await axios.get(`/AAZ/Editor/Workspaces/${this.props.workspaceName}/CommandTree/Nodes/aaz/Resources`);\n            const existingResources = new Set<string>();\n            if (res.data && Array.isArray(res.data) && res.data.length > 0) {\n                res.data.forEach(resource => {\n                    existingResources.add(resource.id);\n                });\n            }\n            this.setState({\n                existingResources: existingResources,\n            })\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}`,\n                })\n            }\n        }\n    }\n\n    loadResources = async (resourceProviderUrl: string | null) => {\n        if (resourceProviderUrl != null) {\n            this.setState({\n                invalidText: undefined,\n                loading: true,\n            })\n            try {\n                let res = await axios.get(`${resourceProviderUrl}/Resources`);\n                // const resourceIdVersionMap: ResourceIdVersionMap = {}\n                const versionResourceIdMap: VersionResourceIdMap = {}\n                const versionOptions: string[] = []\n                // const aazVersionOptions: string[] = []\n                const resourceMap: ResourceMap = {}\n                const resourceIdList: string[] = []\n                res.data.forEach((resource: Resource) => {\n                    // resource.versions.sort((a, b) =>  a.version.localeCompare(b.version));\n                    resourceIdList.push(resource.id);\n                    resourceMap[resource.id] = resource;\n                    resourceMap[resource.id].aazVersions = null;\n\n                    const resourceVersions = resource.versions.map((v) => v.version)\n                    // resourceIdVersionMap[resource.id] = versions;\n                    resourceVersions.forEach((v) => {\n                        if (!(v in versionResourceIdMap)) {\n                            versionResourceIdMap[v] = [];\n                            versionOptions.push(v);\n                        }\n                        versionResourceIdMap[v].push(resource);\n                    })\n                })\n                versionOptions.sort((a, b) => a.localeCompare(b)).reverse()\n                let selectVersion = null;\n                if (versionOptions.length > 0) {\n                    selectVersion = versionOptions[0];\n                }\n\n                const filterBody = {\n                    resources: resourceIdList\n                };\n\n                res = await axios.post(`/AAZ/Specs/Resources/${this.props.plane}/Filter`, filterBody);\n                res.data.resources.forEach((aazResource: AAZResource) => {\n                    if (aazResource.versions) {\n                        resourceMap[aazResource.id].aazVersions = aazResource.versions;\n                    }\n\n                })\n                this.setState({\n                    loading: false,\n                    versionResourceIdMap: versionResourceIdMap,\n                    resourceMap: resourceMap,\n                    versionOptions: versionOptions,\n                })\n                this.onVersionUpdate(selectVersion);\n            } catch (err: any) {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    this.setState({\n                        invalidText: `ResponseError: ${data.message!}`,\n                    })\n                }\n            }\n        } else {\n            this.setState({\n                versionOptions: [],\n            })\n            this.onVersionUpdate(null)\n        }\n    }\n\n    addSwagger = () => {\n        const { selectedResources, selectedVersion, selectedModule, moduleOptionsCommonPrefix, updateOption, resourceMap, selectedResourceInheritanceAAZVersionMap } = this.state;\n        const resources: { id: string, options: { update_by?: string, aaz_version: string | null } }[] = [];\n        selectedResources.forEach((resourceId) => {\n            const res: any = {\n                id: resourceId,\n                options: {\n                    aaz_version: selectedResourceInheritanceAAZVersionMap[resourceId],\n                },\n            }\n            if (updateOption === UpdateOptions[1]) {\n                // patch first\n                const resource = resourceMap[resourceId];\n                const operations = resource.versions.find(v => v.version === selectedVersion)?.operations;\n                if (operations) {\n                    for (const opName in operations) {\n                        if (operations[opName].toLowerCase() === \"patch\") {\n                            res.options.update_by = \"PatchOnly\"\n                            break\n                        }\n                    }\n                }\n            } else if (updateOption === UpdateOptions[2]) {\n                // No update command generation\n                res.options.update_by = \"None\"\n            }\n            resources.push(res)\n        });\n\n        const requestBody = {\n            module: selectedModule!.slice().replace(moduleOptionsCommonPrefix, ''),\n            version: selectedVersion,\n            resources: resources,\n        }\n\n        this.setState({\n            invalidText: undefined,\n            loading: true\n        });\n\n        axios.post(`/AAZ/Editor/Workspaces/${this.props.workspaceName}/CommandTree/Nodes/aaz/AddSwagger`, requestBody)\n            .then(res => {\n                this.setState({\n                    loading: false\n                });\n                this.props.onClose(true);\n            })\n            .catch((err) => {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    this.setState({\n                        invalidText: `ResponseError: ${data.message!}`,\n                    })\n                }\n            });\n    }\n\n    onModuleSelectorUpdate = async (moduleValueUrl: string | null) => {\n        if (this.state.selectedModule !== moduleValueUrl) {\n            this.setState({\n                selectedModule: moduleValueUrl\n            });\n            await this.loadResourceProviders(moduleValueUrl, null);\n        } else {\n            this.setState({\n                selectedModule: moduleValueUrl\n            });\n        }\n       \n    }\n\n    onResourceProviderUpdate = async (resourceProviderUrl: string | null) => {\n        if (this.state.selectedResourceProvider !== resourceProviderUrl) {\n            this.setState({\n                selectedResourceProvider: resourceProviderUrl\n            })\n            await  this.loadResources(resourceProviderUrl);\n        } else {\n            this.setState({\n                selectedResourceProvider: resourceProviderUrl\n            })\n        }\n    }\n\n    onVersionUpdate = (version: string | null) => {\n        this.setState(preState => {\n            let selectedResources = preState.selectedResources;\n            let resourceOptions: Resource[] = [];\n            let selectedResourceInheritanceAAZVersionMap = preState.selectedResourceInheritanceAAZVersionMap;\n            if (version != null) {\n                selectedResources = new Set();\n                selectedResourceInheritanceAAZVersionMap = {};\n                resourceOptions = [...preState.versionResourceIdMap[version]]\n                    .sort((a, b) => a.id.localeCompare(b.id))\n                    .filter(r => !preState.existingResources.has(r.id));\n                resourceOptions.forEach((r) => {\n                    if (preState.selectedResources.has(r.id)) {\n                        selectedResources.add(r.id);\n                        if (r.aazVersions && r.aazVersions.findIndex(v => v === version) >= 0) {\n                            selectedResourceInheritanceAAZVersionMap[r.id] = version;\n                        } else {\n                            selectedResourceInheritanceAAZVersionMap[r.id] = preState.selectedResourceInheritanceAAZVersionMap[r.id];\n                        }\n                    }\n                })\n            }\n            return {\n                ...preState,\n                resourceOptions: resourceOptions,\n                selectedVersion: version,\n                preferredAAZVersion: version,\n                selectedResources: selectedResources,\n                selectedResourceInheritanceAAZVersionMap: selectedResourceInheritanceAAZVersionMap,\n            }\n        })\n    }\n\n    onUpdateOptionUpdate = (updateOption: string | null) => {\n\n        this.setState({\n            updateOption: updateOption ?? UpdateOptions[0]\n        })\n    }\n\n    onResourceItemClick = (resourceId: string) => {\n        return () => {\n            this.setState(preState => {\n                const selectedResources = new Set(preState.selectedResources);\n                let selectedResourceInheritanceAAZVersionMap = { ...preState.selectedResourceInheritanceAAZVersionMap };\n                if (selectedResources.has(resourceId)) {\n                    selectedResources.delete(resourceId);\n                    delete selectedResourceInheritanceAAZVersionMap[resourceId];\n                } else if (!preState.existingResources.has(resourceId)) {\n                    selectedResources.add(resourceId);\n                    const aazVersions = preState.resourceMap[resourceId].aazVersions;\n                    let inheritanceAAZVersion = null;\n                    if (aazVersions) {\n                        if (aazVersions.findIndex(v => v === preState.preferredAAZVersion) >= 0) {\n                            inheritanceAAZVersion = preState.preferredAAZVersion;\n                        } else {\n                            inheritanceAAZVersion = aazVersions[0];\n                        }\n                    }\n                    selectedResourceInheritanceAAZVersionMap[resourceId] = inheritanceAAZVersion;\n                }\n\n                return {\n                    ...preState,\n                    selectedResources: selectedResources,\n                    selectedResourceInheritanceAAZVersionMap: selectedResourceInheritanceAAZVersionMap,\n                }\n            })\n        }\n    }\n\n    onSelectedAllClick = () => {\n        this.setState(preState => {\n            const selectedResources = new Set(preState.selectedResources);\n            let selectedResourceInheritanceAAZVersionMap = { ...preState.selectedResourceInheritanceAAZVersionMap };\n            if (selectedResources.size === preState.resourceOptions.length) {\n                selectedResources.clear()\n                selectedResourceInheritanceAAZVersionMap = {}\n            } else {\n                preState.resourceOptions.forEach((r) => {\n                    selectedResources.add(r.id)\n                    const aazVersions = preState.resourceMap[r.id].aazVersions;\n                    let inheritanceAAZVersion = null;\n                    if (aazVersions) {\n                        if (aazVersions.findIndex(v => v === preState.preferredAAZVersion) >= 0) {\n                            inheritanceAAZVersion = preState.preferredAAZVersion;\n                        } else {\n                            inheritanceAAZVersion = aazVersions[0];\n                        }\n                    }\n                    selectedResourceInheritanceAAZVersionMap[r.id] = inheritanceAAZVersion;\n                })\n            }\n            return {\n                ...preState,\n                selectedResources: selectedResources,\n                selectedResourceInheritanceAAZVersionMap: selectedResourceInheritanceAAZVersionMap,\n            }\n        })\n    }\n\n    onResourceInheritanceAAZVersionUpdate = (resourceId: string, aazVersion: string | null) => {\n        this.setState(preState => {\n            let selectedResourceInheritanceAAZVersionMap = { ...preState.selectedResourceInheritanceAAZVersionMap };\n            selectedResourceInheritanceAAZVersionMap[resourceId] = aazVersion;\n            let preferredAAZVersion = preState.preferredAAZVersion;\n            if (aazVersion !== null) {\n                preferredAAZVersion = aazVersion;\n            }\n\n            return {\n                ...preState,\n                selectedResourceInheritanceAAZVersionMap: selectedResourceInheritanceAAZVersionMap,\n                preferredAAZVersion: preferredAAZVersion,\n            }\n        })\n    }\n\n    render() {\n        const { selectedResources, existingResources, resourceOptions, resourceMap, selectedVersion, selectedModule, selectedResourceInheritanceAAZVersionMap, filterText } = this.state;\n        return (\n            <React.Fragment>\n                <AppBar sx={{ position: \"fixed\" }}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography sx={{ ml: 2, flex: 1, flexDirection: \"row\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }} variant='h5' component='div'>\n                            Add Swagger Resources\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <EditorPageLayout\n                >\n                    <Box sx={{\n                        flexShrink: 0,\n                        width: 250,\n                        flexDirection: 'column',\n                        display: 'flex',\n                        alignItems: 'stretch',\n                        justifyContent: 'flex-start',\n                        marginRight: '3vh'\n                    }}>\n                        <ListSubheader> Swagger Filters</ListSubheader>\n                        <MiddlePadding />\n                        <SwaggerItemSelector\n                            name='Swagger Module'\n                            commonPrefix={this.state.moduleOptionsCommonPrefix}\n                            options={this.state.moduleOptions}\n                            value={this.state.selectedModule}\n                            onValueUpdate={this.onModuleSelectorUpdate} />\n                        <MiddlePadding />\n                        <SwaggerItemSelector\n                            name='Resource Provider'\n                            commonPrefix={this.state.resourceProviderOptionsCommonPrefix}\n                            options={this.state.resourceProviderOptions}\n                            value={this.state.selectedResourceProvider}\n                            onValueUpdate={this.onResourceProviderUpdate}\n                        />\n                        <MiddlePadding />\n                        <SwaggerItemSelector\n                            name='API Version'\n                            commonPrefix=''\n                            options={this.state.versionOptions}\n                            value={this.state.selectedVersion}\n                            onValueUpdate={this.onVersionUpdate}\n                        />\n                        <MiddlePadding2 />\n                        <SwaggerItemSelector\n                            name='Update Command Mode'\n                            commonPrefix=''\n                            options={this.state.updateOptions}\n                            value={this.state.updateOption}\n                            onValueUpdate={this.onUpdateOptionUpdate}\n                        />\n                        <MiddlePadding2 />\n\n                        <Button\n                            variant=\"contained\"\n                            onClick={this.handleSubmit}\n                            disabled={selectedModule === null || selectedVersion === null || selectedResources.size < 1}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                    <List\n                        sx={{ flexGrow: 1 }}\n                        subheader={<ListSubheader>\n                            <Box sx={{\n                                mt: 1,\n                                mb: 1,\n                                flexDirection: 'column',\n                                display: 'flex',\n                                alignItems: 'stretch',\n                                justifyContent: 'flex-start',\n                            }} color='inherit'>\n                                <Typography component='h6'>Resource Url</Typography>\n\n                                <Paper sx={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    mt: 1,\n                                }} variant=\"outlined\" square>\n\n                                    <ListItemButton sx={{ maxWidth: 180 }} dense onClick={this.onSelectedAllClick} disabled={resourceOptions.length === 0}>\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={selectedResources.size > 0 && selectedResources.size === resourceOptions.length}\n                                                indeterminate={selectedResources.size > 0 && selectedResources.size < resourceOptions.length}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': 'SelectAll' }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id=\"SelectAll\"\n                                            primary={`All (${resourceOptions.length})`}\n                                            primaryTypographyProps={{\n                                                variant: \"h6\",\n                                            }}\n                                        />\n                                    </ListItemButton>\n                                    <InputBase\n                                        sx={{ flex: 1 }}\n                                        placeholder=\"Filter by keywords\"\n                                        inputProps={{ 'aria-label': 'Filter by keywords' }}\n                                        value={filterText}\n                                        onChange={(event: any) => {\n                                            this.setState({\n                                                filterText: event.target.value,\n                                                })\n                                        }}\n                                    />\n                                </Paper>\n                            </Box>\n                        </ListSubheader>}\n                    >\n\n                        {resourceOptions.length > 0 && <Paper sx={{ ml: 2, mr: 2 }} variant=\"outlined\" square>\n                            {resourceOptions.filter((option) => {\n                                if (filterText.trim().length > 0) {\n                                    return option.id.indexOf(filterText.trim()) > -1;\n                                }else{\n                                    return true;\n                                }\n                            }).map((option) => {\n                                const labelId = `resource-${option.id}`;\n                                const selected = selectedResources.has(option.id);\n                                const inheritanceOptions = resourceMap[option.id]?.aazVersions;\n                                let selectedInheritance = null;\n                                if (selectedResourceInheritanceAAZVersionMap !== null) {\n                                    selectedInheritance = selectedResourceInheritanceAAZVersionMap[option.id];\n                                }\n                                return <ListItem\n                                    key={option.id}\n                                    sx={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center',\n                                    }}\n                                    disablePadding\n                                >\n                                    <ListItemButton dense onClick={this.onResourceItemClick(option.id)}>\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={selected || existingResources.has(option.id)}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId}\n                                            primary={option.id}\n                                            primaryTypographyProps={{\n                                                variant: \"h6\",\n                                            }}\n                                        />\n                                    </ListItemButton>\n                                    {selected && <FormControl sx={{ m: 1, minWidth: 120 }}>\n                                        <InputLabel id={`${labelId}-inheritance-select-label`}>Inheritance</InputLabel>\n                                        <Select\n                                            id={`${labelId}-inheritance-select`}\n                                            value={selectedInheritance === null ? \"_NULL_\" : selectedInheritance}\n                                            onChange={(event) => {\n                                                this.onResourceInheritanceAAZVersionUpdate(option.id, event.target.value === \"_NULL_\" ? null : event.target.value);\n                                            }}\n                                            size=\"small\"\n                                        >\n                                            <MenuItem value=\"_NULL_\" key={`${labelId}-inheritance-select-null`}>\n                                                None\n                                            </MenuItem>\n                                            {inheritanceOptions && inheritanceOptions.map((inheritanceOption) => {\n                                                return (<MenuItem value={inheritanceOption} key={`${labelId}-inheritance-select-${inheritanceOption}`}>\n                                                    {inheritanceOption}\n                                                </MenuItem>);\n                                            })}\n                                        </Select>\n                                        <FormHelperText>Inherit modification from exported command models in aaz</FormHelperText>\n                                    </FormControl>}\n                                </ListItem>\n                            })}\n                        </Paper>}\n                    </List>\n                </EditorPageLayout>\n                <Backdrop\n                    sx={{ color: '#fff', zIndex: (theme: any) => theme.zIndex.drawer + 1 }}\n                    open={this.state.loading}\n                >\n                    {this.state.invalidText !== undefined &&\n                        <Alert sx={{\n                            maxWidth: \"80%\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"stretch\",\n                            justifyContent: \"flex-start\",\n                        }}\n                            variant=\"filled\"\n                            severity='error'\n                            onClose={() => {\n                                this.setState({\n                                    invalidText: undefined,\n                                    loading: false,\n                                })\n                            }}\n                        >\n                            {this.state.invalidText}\n                        </Alert>\n                    }\n                    {this.state.invalidText === undefined && <CircularProgress color='inherit' />}\n                </Backdrop>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\ninterface SwaggerItemsSelectorProps {\n    commonPrefix: string,\n    options: string[],\n    name: string,\n    value: string | null,\n    onValueUpdate: (value: string | null) => void\n}\n\n\nclass SwaggerItemSelector extends React.Component<SwaggerItemsSelectorProps> {\n\n    constructor(props: SwaggerItemsSelectorProps) {\n        super(props);\n        this.state = {\n            value: this.props.options.length === 1 ? this.props.options[0] : null,\n        }\n    }\n\n    render() {\n        // const { value } = this.state;\n        const { name, options, commonPrefix, value } = this.props;\n        return (\n            <Autocomplete\n                id={name}\n                value={value}\n                options={options}\n                onChange={(event, newValue: any) => {\n                    this.props.onValueUpdate(newValue);\n                }}\n                getOptionLabel={(option) => {\n                    return option.replace(commonPrefix, '');\n                }}\n                renderOption={(props, option) => {\n                    return (\n                        <Box component='li'\n                            {...props}\n                        >\n                            {option.replace(commonPrefix, '')}\n                        </Box>\n                    )\n                }}\n                selectOnFocus\n                clearOnBlur\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        size='small'\n                        // variant='filled'\n                        label={name}\n                        required\n                    />\n                )}\n            />\n        )\n    }\n}\n\n\n// class WSEditorResourceListHeader extends React.Com\n\n\nexport default WSEditorSwaggerPicker;\n","import { AppBar, Button, IconButton, styled, Toolbar, Typography, Tooltip, TypographyProps } from '@mui/material';\nimport { Box } from '@mui/system';\nimport HomeIcon from '@mui/icons-material/Home';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { grey } from '@mui/material/colors'\n\nimport * as React from 'react';\n\n\nconst ArgEditTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: \"#ffffff\",\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}));\n\ninterface WSEditorToolBarProps {\n    workspaceName: string\n    onHomePage: () => void\n    onGenerate: () => void\n    onDelete: () => void\n    onModify: () => void\n}\n\nclass WSEditorToolBar extends React.Component<WSEditorToolBarProps> {\n\n    render() {\n        const { workspaceName, onHomePage, onGenerate, onDelete, onModify } = this.props;\n        return (\n            <React.Fragment>\n                <AppBar sx={{\n                    position: \"fixed\",\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}>\n                    <Toolbar sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: \"flex-start\",\n                        height: 64,\n                    }}>\n                        <IconButton\n                            color='inherit'\n                            onClick={onHomePage}\n                            aria-label='home'\n                            sx={{ mr: 2, flexShrink: 0 }}\n                        >\n                            <HomeIcon sx={{ mr: 2 }} />\n                            <Typography\n                                variant='h6'\n                                component='div'\n                                color='inherit'\n                                sx={{ mr: 2 }}\n                            >\n                                WORKSPACE\n                            </Typography>\n                        </IconButton>\n\n                        <Typography\n                            variant='h5'\n                            component='div'\n                            color='inherit'\n\n                        >\n                            {workspaceName}\n                        </Typography>\n                        <Button sx={{ flexShrink: 0, ml: 3 }}\n                            startIcon={<EditIcon sx={{ color: grey[100] }} fontSize='small' />}\n                            onClick={onModify}\n                        >\n                            <ArgEditTypography>EDIT</ArgEditTypography>\n                        </Button>\n                        <Button sx={{ flexShrink: 0, ml: 1 }}\n                            startIcon={<DeleteIcon sx={{ color: grey[100] }} fontSize='small' />}\n                            onClick={onDelete}\n                        >\n                            <ArgEditTypography>DELETE</ArgEditTypography>\n                        </Button>\n\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Box sx={{ flexShrink: 0 }} >\n                            <Tooltip title='Export Command Models'>\n                                <Button\n                                    variant=\"outlined\"\n                                    color='inherit'\n                                    onClick={onGenerate}\n                                >\n                                    Export\n                                </Button>\n                            </Tooltip>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nexport default WSEditorToolBar;\n","import * as React from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { Box, IconButton, Tooltip, Typography, TypographyProps } from '@mui/material';\nimport { styled } from '@mui/system';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\ninterface CommandTreeLeaf {\n    id: string\n    names: string[]\n}\n\ninterface CommandTreeNode {\n    id: string\n    names: string[]\n    nodes?: CommandTreeNode[]\n    leaves?: CommandTreeLeaf[]\n    canDelete: boolean\n}\n\n\ninterface WSEditorCommandTreeProps {\n    commandTreeNodes: CommandTreeNode[]\n    selected: string\n    expanded: string[]\n    onSelected: (nodeId: string) => void\n    onToggle: (nodeIds: string[]) => void\n    onAdd: () => void\n    onReload: () => void\n}\n\n\nconst HeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 16,\n    fontWeight: 600,\n}))\n\n\nclass WSEditorCommandTree extends React.Component<WSEditorCommandTreeProps> {\n\n    onNodeSelected = (event: React.SyntheticEvent, nodeIds: string[] | string) => {\n        if (typeof nodeIds === 'string') {\n            this.props.onSelected(nodeIds);\n        }\n    }\n\n    onNodeToggle = (event: React.SyntheticEvent, nodeIds: string[]) => {\n        this.props.onToggle(nodeIds);\n    }\n\n    render() {\n        const { commandTreeNodes, selected, onAdd, onReload, expanded } = this.props;\n\n        const renderLeaf = (leaf: CommandTreeLeaf) => {\n            const leafName = leaf.names[leaf.names.length - 1];\n            return (\n                <TreeItem key={leaf.id} nodeId={leaf.id} color='inherit' label={leafName}\n                    onClick={(event) => {\n                        if (selected !== leaf.id) {\n                            this.onNodeSelected(event, leaf.id);\n                        }\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }}\n                />\n            )\n        }\n\n        const renderNode = (node: CommandTreeNode) => {\n            const nodeName = node.names[node.names.length - 1];\n            return (\n                <TreeItem key={node.id} nodeId={node.id} color='inherit' label={nodeName}\n                    onClick={(event) => {\n                        if (selected !== node.id || expanded.indexOf(node.id) === -1) {\n                            this.onNodeSelected(event, node.id);\n                            this.onNodeToggle(event, [...expanded, node.id]);\n                        } else {\n                            this.onNodeToggle(event, expanded.filter(v => v !== node.id));\n                        }\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }}\n                >\n                    {Array.isArray(node.leaves) ? node.leaves.map((leaf) => renderLeaf(leaf)) : null}\n                    {Array.isArray(node.nodes) ? node.nodes.map((subNode) => renderNode(subNode)) : null}\n                </TreeItem>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Box sx={{\n                    mt: 2, ml: 4, mr: 2,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                }}>\n                    <HeaderTypography>Command Tree</HeaderTypography>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Tooltip title='Reload Swagger Change'>\n                        <IconButton\n                            color='info'\n                            onClick={onReload}\n                            aria-label='reload'\n                        >\n                            <RefreshIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title='Add from Swagger'>\n                        <IconButton\n                            color='info'\n                            onClick={onAdd}\n                            aria-label='add'\n                        >\n                            <AddIcon />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n                <TreeView\n                    defaultCollapseIcon={<ExpandMoreIcon />}\n                    defaultExpandIcon={<ChevronRightIcon />}\n                    selected={selected}\n                    expanded={expanded}\n                    sx={{\n                        flexGrow: 1,\n                        overflowY: 'auto',\n                        mt: 1,\n                        ml: 3,\n                        mr: 3,\n                    }}\n                >\n                    {commandTreeNodes.map((node) => renderNode(node))}\n                </TreeView>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default WSEditorCommandTree;\n\nexport type { CommandTreeNode, CommandTreeLeaf };\n","import { Typography, TypographyProps } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst CardTitleTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 18,\n    fontWeight: 400,\n}))\n\nconst NameTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 32,\n    fontWeight: 700,\n}))\n\nconst ShortHelpTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 18,\n    fontWeight: 400,\n    fontStyle: \"italic\"\n}))\n\nconst ShortHelpPlaceHolderTypography = styled(ShortHelpTypography)<TypographyProps>(({ theme }) => ({\n    color: '#5d64cf',\n}))\n\nconst LongHelpTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 16,\n    fontWeight: 400,\n}))\n\nconst StableTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#67b349',\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 20,\n    fontWeight: 200,\n}))\n\nconst PreviewTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\n    color: '#d1b102',\n}))\n\nconst ExperimentalTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\n    color: '#e05376',\n}))\n\nconst SmallStableTypography = styled(StableTypography)<TypographyProps>(({ theme }) => ({\n    fontSize: 12,\n}))\n\nconst SmallPreviewTypography = styled(PreviewTypography)<TypographyProps>(({ theme }) => ({\n    fontSize: 12,\n}))\n\nconst SmallExperimentalTypography = styled(ExperimentalTypography)<TypographyProps>(({ theme }) => ({\n    fontSize: 12,\n}))\n\nconst SubtitleTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nexport {CardTitleTypography, NameTypography,\n     ShortHelpTypography, ShortHelpPlaceHolderTypography,\n      LongHelpTypography, StableTypography,\n       PreviewTypography, ExperimentalTypography,\n        SubtitleTypography, SmallStableTypography, SmallPreviewTypography, SmallExperimentalTypography};\n","import { Alert, Box, Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, InputLabel, LinearProgress, Radio, RadioGroup, TextField, Typography } from '@mui/material';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { ResponseCommands } from './WSEditorCommandContent';\nimport { NameTypography, ShortHelpTypography, ShortHelpPlaceHolderTypography, LongHelpTypography, StableTypography, PreviewTypography, ExperimentalTypography } from './WSEditorTheme';\n\ninterface CommandGroup {\n    id: string\n    names: string[]\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\n    help?: {\n        short: string\n        lines?: string[]\n    }\n    canDelete: boolean\n}\n\ninterface ResponseCommandGroup {\n    names: string[]\n    stage?: \"Stable\" | \"Preview\" | \"Experimental\"\n    help?: {\n        short: string\n        lines?: string[]\n    }\n    commands?: ResponseCommands\n    commandGroups?: ResponseCommandGroups\n}\n\n\ninterface ResponseCommandGroups {\n    [name: string]: ResponseCommandGroup\n}\n\n\nconst commandPrefix = 'az '\n\ninterface WSEditorCommandGroupContentProps {\n    workspaceUrl: string\n    commandGroup: CommandGroup\n    reloadTimestamp: number\n    onUpdateCommandGroup: (commandGroup: CommandGroup | null) => void\n}\n\ninterface WSEditorCommandGroupContentState {\n    displayCommandGroupDialog: boolean\n    displayCommandGroupDeleteDialog: boolean\n}\n\nclass WSEditorCommandGroupContent extends React.Component<WSEditorCommandGroupContentProps, WSEditorCommandGroupContentState> {\n\n    constructor(props: WSEditorCommandGroupContentProps) {\n        super(props);\n        this.state = {\n            displayCommandGroupDialog: false,\n            displayCommandGroupDeleteDialog: false,\n        }\n    }\n\n    onCommandGroupDialogDisplay = () => {\n        this.setState({\n            displayCommandGroupDialog: true,\n        })\n    }\n\n    onCommandGroupDeleteDialogDisplay = () => {\n        this.setState({\n            displayCommandGroupDeleteDialog: true,\n        })\n    }\n\n    handleCommandGroupDialogClose = (newCommandGroup?: CommandGroup) => {\n        this.setState({\n            displayCommandGroupDialog: false,\n        })\n        if (newCommandGroup) {\n            this.props.onUpdateCommandGroup(newCommandGroup!);\n        }\n    }\n\n    handleCommandGroupDeleteDialogClose = (deleted: boolean) => {\n        this.setState({\n            displayCommandGroupDeleteDialog: false,\n        })\n        if (deleted) {\n            this.props.onUpdateCommandGroup(null);\n        }\n    }\n\n    render() {\n        const { workspaceUrl, commandGroup } = this.props;\n        const name = commandPrefix + this.props.commandGroup.names.join(' ');\n        const shortHelp = this.props.commandGroup.help?.short;\n        const longHelp = this.props.commandGroup.help?.lines?.join('\\n');\n        const lines: string[] = this.props.commandGroup.help?.lines ?? [];\n        const stage = this.props.commandGroup.stage;\n        const { displayCommandGroupDialog, displayCommandGroupDeleteDialog } = this.state;\n        return (\n            <React.Fragment>\n                <Box sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'stretch',\n                }}>\n                    <Card\n                        // variant='outlined'\n                        elevation={3}\n                        sx={{\n                            flexGrow: 1, display: 'flex', flexDirection: 'column',\n                            p: 2\n                        }}>\n                        <CardContent sx={{\n                            flex: '1 0 auto',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'stretch',\n                        }}>\n                            <Box sx={{\n                                mb: 2,\n                                display: 'flex',\n                                flexDirection: 'row',\n                                alignItems: \"center\"\n                            }}>\n                                <Typography\n                                    variant='h6'\n                                    sx={{ flexShrink: 0 }}\n                                >\n                                    [ GROUP ]\n                                </Typography>\n                                <Box sx={{ flexGrow: 1 }} />\n                                {stage === \"Stable\" && <StableTypography\n                                    sx={{ flexShrink: 0 }}\n                                >\n                                    {stage}\n                                </StableTypography>}\n                                {stage === \"Preview\" && <PreviewTypography\n                                    sx={{ flexShrink: 0 }}\n                                >\n                                    {stage}\n                                </PreviewTypography>}\n                                {stage === \"Experimental\" && <ExperimentalTypography\n                                    sx={{ flexShrink: 0 }}\n                                >\n                                    {stage}\n                                </ExperimentalTypography>}\n                            </Box>\n\n                            <NameTypography sx={{ mt: 1 }}>\n                                {name}\n                            </NameTypography>\n                            {shortHelp && <ShortHelpTypography sx={{ ml: 6, mt: 2 }}> {shortHelp} </ShortHelpTypography>}\n                            {!shortHelp && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add command group short summary!</ShortHelpPlaceHolderTypography>}\n                            {longHelp && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\n                                {lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\n                            </Box>}\n                        </CardContent>\n                        <CardActions sx={{\n                            display: \"flex\",\n                            flexDirection: \"row-reverse\",\n                            alignContent: \"center\",\n                            justifyContent: \"flex-start\"\n                        }}>\n                            <Box sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                alignContent: \"center\",\n                                justifyContent: \"flex-start\"\n                            }}>\n                                <Button\n                                    variant='contained' size=\"small\" color='info' disableElevation\n                                    onClick={this.onCommandGroupDialogDisplay}\n                                >\n                                    <Typography variant='body2'>\n                                        Edit\n                                    </Typography>\n                                </Button>\n                                <Button\n                                    variant='outlined' size=\"small\" color='info'\n                                    onClick={this.onCommandGroupDeleteDialogDisplay}\n                                    disabled={!this.props.commandGroup.canDelete}\n                                    sx={{ ml: 2 }}\n                                >\n                                    <Typography variant='body2'>\n                                        Delete\n                                    </Typography>\n                                </Button>\n                            </Box>\n\n                        </CardActions>\n                    </Card>\n                </Box>\n                {displayCommandGroupDialog && <CommandGroupDialog open={displayCommandGroupDialog} workspaceUrl={workspaceUrl} commandGroup={commandGroup} onClose={this.handleCommandGroupDialogClose} />}\n                {displayCommandGroupDeleteDialog && <CommandGroupDeleteDialog open={displayCommandGroupDeleteDialog} workspaceUrl={workspaceUrl} commandGroup={commandGroup} onClose={this.handleCommandGroupDeleteDialogClose} />}\n            </React.Fragment>\n        )\n    }\n}\n\nfunction CommandGroupDeleteDialog(props: {\n    workspaceUrl: string,\n    open: boolean\n    commandGroup: CommandGroup\n    onClose: (deleted: boolean) => void\n}) {\n\n    const [updating, setUpdating] = React.useState<boolean>(false);\n\n    const handleClose = () => {\n        props.onClose(false);\n    }\n    const handleDelete = () => {\n        const nodeUrl = `${props.workspaceUrl}/CommandTree/Nodes/aaz/` + props.commandGroup.names.join('/');\n        setUpdating(true);\n\n        axios.delete(nodeUrl)\n            .then(res => {\n                setUpdating(false);\n                props.onClose(true);\n            }).catch(err => {\n                setUpdating(false);\n                console.error(err.response.data)\n            })\n    }\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n        >\n            <DialogTitle>Delete Command Group</DialogTitle>\n            <DialogContent dividers={true}>\n                <Typography variant=\"body2\">{`${commandPrefix}${props.commandGroup.names.join(\" \")}`}</Typography>\n            </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && <React.Fragment>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleDelete}>Delete</Button>\n                </React.Fragment>}\n            </DialogActions>\n        </Dialog>\n\n    )\n\n}\n\ninterface CommandGroupDialogProps {\n    workspaceUrl: string,\n    open: boolean\n    commandGroup: CommandGroup\n    onClose: (newCommandGroup?: CommandGroup) => void\n}\n\ninterface CommandGroupDialogState {\n    name: string,\n    stage: string,\n    shortHelp: string,\n    longHelp: string,\n    invalidText?: string,\n    updating: boolean\n}\n\nclass CommandGroupDialog extends React.Component<CommandGroupDialogProps, CommandGroupDialogState> {\n\n    constructor(props: CommandGroupDialogProps) {\n        super(props);\n        this.state = {\n            name: this.props.commandGroup.names.join(' '),\n            shortHelp: this.props.commandGroup.help?.short ?? \"\",\n            longHelp: this.props.commandGroup.help?.lines?.join('\\n') ?? \"\",\n            stage: this.props.commandGroup.stage,\n            updating: false\n        }\n    }\n\n    handleModify = (event: any) => {\n        let { name, stage, shortHelp, longHelp } = this.state\n        let { workspaceUrl, commandGroup } = this.props\n\n        name = name.trim();\n        shortHelp = shortHelp.trim();\n        longHelp = longHelp.trim();\n\n        const names = name.split(' ').filter((n) => n.length > 0);\n\n        this.setState({\n            invalidText: undefined\n        })\n\n        if (names.length < 1) {\n            this.setState({\n                invalidText: `Field 'Name' is required.`\n            })\n            return\n        }\n\n        for (const idx in names) {\n            const piece = names[idx];\n            if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                this.setState({\n                    invalidText: `Invalid Name part: '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `\n                })\n                return\n            }\n        }\n\n        if (shortHelp.length < 1) {\n            this.setState({\n                invalidText: `Field 'Short Summary' is required.`\n            })\n        }\n\n        let lines: string[] | null = null;\n        if (longHelp.length > 1) {\n            lines = longHelp.split('\\n').filter(l => l.length > 0);\n        }\n\n        this.setState({\n            updating: true,\n        })\n\n        const nodeUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + commandGroup.names.join('/');\n\n        axios.patch(nodeUrl, {\n            help: {\n                short: shortHelp,\n                lines: lines,\n            },\n            stage: stage,\n        }).then(res => {\n            const name = names.join(' ');\n            if (name === commandGroup.names.join(' ')) {\n                const cmdGroup = DecodeResponseCommandGroup(res.data);\n                this.setState({\n                    updating: false,\n                })\n                this.props.onClose(cmdGroup);\n            } else {\n                // Rename command Group\n                axios.post(`${nodeUrl}/Rename`, {\n                    name: name\n                }).then(res => {\n                    const cmdGroup = DecodeResponseCommandGroup(res.data);\n                    this.setState({\n                        updating: false,\n                    })\n                    this.props.onClose(cmdGroup);\n                })\n            }\n        }).catch(err => {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`,\n                })\n            }\n            this.setState({\n                updating: false,\n            })\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            invalidText: undefined\n        });\n        this.props.onClose();\n    }\n\n    render() {\n        const { name, shortHelp, longHelp, invalidText, updating, stage } = this.state\n        return (\n            <Dialog\n                disableEscapeKeyDown\n                open={this.props.open}\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n            >\n                <DialogTitle>Command Group</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n\n                    <InputLabel required shrink sx={{ font: \"inherit\" }}>Stage</InputLabel>\n                    <RadioGroup\n                        row\n                        value={stage}\n                        name=\"stage\"\n                        onChange={(event: any) => {\n                            this.setState({\n                                stage: event.target.value,\n                            })\n                        }}\n                    >\n                        <FormControlLabel value=\"Stable\" control={<Radio />} label=\"Stable\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Preview\" control={<Radio />} label=\"Preview\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Experimental\" control={<Radio />} label=\"Experimental\" sx={{ ml: 4 }} />\n                    </RadioGroup>\n\n                    <TextField\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={name}\n                        onChange={(event: any) => {\n                            this.setState({\n                                name: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        id=\"shortSummary\"\n                        label=\"Short Summary\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={shortHelp}\n                        onChange={(event: any) => {\n                            this.setState({\n                                shortHelp: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        id=\"longSummary\"\n                        label=\"Long Summary\"\n                        helperText=\"Please add long summer in lines.\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        variant='standard'\n                        value={longHelp}\n                        onChange={(event: any) => {\n                            this.setState({\n                                longHelp: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    {updating &&\n                        <Box sx={{ width: '100%' }}>\n                            <LinearProgress color='info' />\n                        </Box>\n                    }\n                    {!updating && <React.Fragment>\n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        <Button onClick={this.handleModify}>Save</Button>\n                    </React.Fragment>}\n                </DialogActions>\n            </Dialog>\n        )\n    }\n\n}\n\nconst DecodeResponseCommandGroup = (commandGroup: ResponseCommandGroup): CommandGroup => {\n    return {\n        id: 'group:' + commandGroup.names.join('/'),\n        names: commandGroup.names,\n        help: commandGroup.help,\n        stage: commandGroup.stage ?? \"Stable\",\n        canDelete: true,\n    }\n}\n\nexport default WSEditorCommandGroupContent;\n\nexport { DecodeResponseCommandGroup };\nexport type { CommandGroup, ResponseCommandGroup, ResponseCommandGroups };\n\n","import TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { Checkbox, FormControlLabel } from '@mui/material';\n\ninterface ArgSimilarArg {\n    id: string,\n    var: string,\n    display: string,\n    indexes: string[],\n    isSelected: boolean,\n}\n\ninterface ArgSimilarCommand {\n    id: string,\n    name: string,\n    args: ArgSimilarArg[],\n    total: number,\n    selectedCount: number,\n}\n\ninterface ArgSimilarGroup {\n    id: string,\n    name: string,\n    groups?: ArgSimilarGroup[],\n    commands?: ArgSimilarCommand[],\n    total: number,\n    selectedCount: number,\n}\n\ninterface ArgSimilarTree {\n    root: ArgSimilarGroup,\n    selectedArgIds: string[],\n}\n\ninterface ResponseArgSimilarCommand {\n    id: string,\n    args: {\n        [argVar: string]: string[],\n    }\n}\n\ninterface ResponseArgSimilarGroup {\n    id: string,\n    commandGroups?: {\n        [name: string]: ResponseArgSimilarGroup\n    },\n    commands?: {\n        [name: string]: ResponseArgSimilarCommand\n    }\n}\n\n\nfunction decodeResponseArgSimilarCommand(responseCommand: ResponseArgSimilarCommand, commandName: string): ArgSimilarCommand {\n    let command: ArgSimilarCommand = {\n        id: responseCommand.id,\n        name: commandName,\n        args: [],\n        total: 0,\n        selectedCount: 0,\n    }\n    for (const argVar in responseCommand.args) {\n        const arg: ArgSimilarArg = {\n            id: `${command.id}/Arguments/${argVar}`,\n            var: argVar,\n            indexes: responseCommand.args[argVar],\n            display: \"\",\n            isSelected: false,\n        }\n        if (arg.indexes.length > 1) {\n            arg.display = `[${arg.var}] ${arg.indexes.map(idx => {\n                if (idx[1] === '.' || idx[1] === '[' || idx[1] === '{') {\n                    return `-${idx}`;\n                } else {\n                    return `--${idx}`;\n                }\n            }).join(' ')}`;\n        } else if (arg.indexes.length === 1) {\n            let idx = arg.indexes[0];\n            if (idx[1] === '.' || idx[1] === '[' || idx[1] === '{') {\n                arg.display = `-${idx}`;\n            } else {\n                arg.display = `--${idx}`;\n            }\n        }\n        command.args.push(arg);\n    }\n    command.total = command.args.length;\n    return command;\n}\n\nfunction decodeResponseArgSimilarGroup(responseGroup: ResponseArgSimilarGroup, groupName: string): ArgSimilarGroup {\n    let group: ArgSimilarGroup = {\n        id: responseGroup.id,\n        name: groupName,\n        total: 0,\n        selectedCount: 0,\n    }\n\n    if (typeof responseGroup.commandGroups === 'object' && responseGroup.commandGroups !== null) {\n        group.groups = [];\n        for (const name in responseGroup.commandGroups) {\n            const subGroup = decodeResponseArgSimilarGroup(responseGroup.commandGroups[name], name);\n            group.groups.push(subGroup);\n            group.total += subGroup.total;\n        }\n    }\n\n    if (typeof responseGroup.commands === 'object' && responseGroup.commands !== null) {\n        group.commands = [];\n        for (const name in responseGroup.commands) {\n            const command = decodeResponseArgSimilarCommand(responseGroup.commands[name], name);\n            group.commands.push(command);\n            group.total += command.total;\n        }\n    }\n    if (group.commands === undefined && group.groups !== undefined && group.groups.length === 1) {\n        group = group.groups[0]\n        group.name = `${groupName} ${group.name}`\n    }\n    return group;\n}\n\nfunction gatherNodeIds(group: ArgSimilarGroup): string[] {\n    let nodeIds: string[] = [group.id];\n    if (group.commands !== undefined) {\n        group.commands.forEach(command => {\n            nodeIds.push(command.id);\n        })\n    }\n    if (group.groups !== undefined) {\n        group.groups.forEach(subGroup => {\n            nodeIds = [...nodeIds, ...gatherNodeIds(subGroup)]\n        })\n    }\n    return nodeIds;\n}\n\n\nfunction BuildArgSimilarTree(response: any): {tree: ArgSimilarTree, expandedIds: string[]} {\n    const tree = {\n        root: decodeResponseArgSimilarGroup(response.data.aaz, 'az'),\n        selectedArgIds: [],\n    };\n    const expandedIds = gatherNodeIds(tree.root);\n    const newTree = updateSelectionStateForArgSimilarTree(tree, new Set<string>([tree.root.id]));\n    return {\n        tree: newTree,\n        expandedIds:  expandedIds,\n    };\n}\n\nfunction updateSelectionStateForArgSimilarCommand(command: ArgSimilarCommand, selectedIds: Set<string>): {command: ArgSimilarCommand, selectedArgIds: string[]} {\n    let newSelectedIds: string[] = [];\n    let newCommand = {\n        ...command,\n        args: command.args.map(arg => {\n            let isSelected = selectedIds.has(arg.id);\n            if (!isSelected) {\n                const idParts = arg.id.split('/');\n                for (let idx = 1; idx < idParts.length; idx += 1) {\n                    let newId = idParts.slice(0, idx+1).join('/');\n                    if (selectedIds.has(newId)) {\n                        isSelected = true;\n                        break;\n                    }\n                }\n            }\n            if (isSelected === true) {\n                newSelectedIds.push(arg.id);\n            }\n\n            let newArg: ArgSimilarArg = {\n                ...arg,\n                indexes: [...arg.indexes],\n                isSelected: isSelected,\n            }\n            return newArg\n        }),\n    }\n\n    newCommand.selectedCount = newSelectedIds.length\n    \n    return {\n        command: newCommand,\n        selectedArgIds: newSelectedIds,\n    };\n}\n\nfunction updateSelectionStateForArgSimilarGroup(group: ArgSimilarGroup, selectedIds: Set<string>): {group: ArgSimilarGroup, selectedArgIds: string[]} {\n    let newSelectedIds: string[] = [];\n    let newGroup = {\n        ...group,\n        groups: group.groups?.map(subGroup => {\n            const {group: newSubGroup, selectedArgIds: subSelectedIds} = updateSelectionStateForArgSimilarGroup(subGroup, selectedIds);\n            newSelectedIds = [...newSelectedIds, ...subSelectedIds];\n            return newSubGroup;\n        }),\n        commands: group.commands?.map(command => {\n            const {command: newCommand, selectedArgIds: subSelectedIds} = updateSelectionStateForArgSimilarCommand(command, selectedIds);\n            newSelectedIds = [...newSelectedIds, ...subSelectedIds];\n            return newCommand;\n        }),\n        \n    }\n\n    newGroup.selectedCount = newSelectedIds.length;\n\n    return {\n        group: newGroup,\n        selectedArgIds: newSelectedIds,\n    };\n}\n\nfunction updateSelectionStateForArgSimilarTree(tree: ArgSimilarTree, selectedIds: Set<string>): ArgSimilarTree {\n    const {group, selectedArgIds} = updateSelectionStateForArgSimilarGroup(tree.root, selectedIds);\n    return {\n        root: group,\n        selectedArgIds: selectedArgIds,\n    }\n}\n\nfunction WSECArgumentSimilarPicker(props: {\n    tree: ArgSimilarTree,\n    expandedIds: string[],\n    updatedIds: string[],\n    onTreeUpdated: (tree: ArgSimilarTree) => void,\n    onToggle: (nodeIds: string[]) => void\n}) {\n\n    const onCheckItem = (itemId: string, select: boolean) => {\n        let selectedIds: Set<string>;\n        if (select) {\n            selectedIds = new Set(props.tree.selectedArgIds).add(itemId);\n        } else {\n            selectedIds = new Set(props.tree.selectedArgIds.filter(id => id !== itemId && !id.startsWith(`${itemId}/`)));\n        }\n        props.onTreeUpdated(updateSelectionStateForArgSimilarTree(props.tree, selectedIds));\n    }\n\n    const onNodeToggle = (event: React.SyntheticEvent, nodeIds: string[]) => {\n        props.onToggle(nodeIds);\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    const renderArg = (arg: ArgSimilarArg) => {\n        const isUpdated = props.updatedIds.indexOf(arg.id) !== -1\n        return (\n            <TreeItem key={arg.id} nodeId={arg.id} color='inherit'\n                label={\n                    <FormControlLabel\n                        control={<Checkbox\n                            size=\"small\"\n                            checked={arg.isSelected}\n                            onClick={(event) => {\n                                onCheckItem(arg.id, !arg.isSelected)\n                                event.stopPropagation();\n                                event.preventDefault();\n                            }}\n                            disabled={isUpdated}\n                        />}\n                        label={arg.display}\n                        sx={{\n                            paddingLeft: 1\n                        }}\n                    />\n                }\n            />\n        )\n    }\n\n    const renderCommand = (command: ArgSimilarCommand) => {\n        return (\n            <TreeItem key={command.id} nodeId={command.id} color='inherit'\n                label={\n                    <FormControlLabel\n                        control={<Checkbox size=\"small\"\n                            checked={command.selectedCount > 0 && command.selectedCount === command.total}\n                            indeterminate={command.selectedCount > 0 && command.selectedCount < command.total}\n                            onClick={(event) => {\n                                onCheckItem(command.id, !(command.selectedCount > 0 && command.selectedCount === command.total))\n                                event.stopPropagation();\n                                event.preventDefault();\n                            }}\n                        />}\n                        label={command.name}\n                        sx={{\n                            paddingLeft: 1\n                        }}\n                    />\n                }\n            >\n                {Array.isArray(command.args) ? command.args.map((arg) => renderArg(arg)) : null}\n            </TreeItem>\n        )\n    }\n\n    const renderGroup = (group: ArgSimilarGroup) => {\n        return (\n            <TreeItem key={group.id} nodeId={group.id} color='inherit'\n                label={\n                    <FormControlLabel\n                        control={<Checkbox size=\"small\"\n                            checked={group.selectedCount > 0 && group.selectedCount === group.total}\n                            indeterminate={group.selectedCount > 0 && group.selectedCount < group.total}\n                            onClick={(event) => {\n                                onCheckItem(group.id, !(group.selectedCount > 0 && group.selectedCount === group.total))\n                                event.stopPropagation();\n                                event.preventDefault();\n                            }}\n                        />}\n                        label={group.name}\n                        sx={{\n                            paddingLeft: 1\n                        }}\n                    />\n                }\n            >\n                {Array.isArray(group.commands) ? group.commands.map((command) => renderCommand(command)) : null}\n                {Array.isArray(group.groups) ? group.groups.map((subGroup) => renderGroup(subGroup)) : null}\n            </TreeItem>\n        )\n    }\n\n    return (<>\n        <TreeView\n            sx={{\n                flexGrow: 1,\n                overflowY: 'auto',\n            }}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            onNodeToggle={onNodeToggle}\n            selected={[]}\n            expanded={props.expandedIds}\n        >\n            {renderGroup(props.tree.root)}\n        </TreeView>\n    </>)\n}\n\nexport default WSECArgumentSimilarPicker;\nexport { BuildArgSimilarTree };\nexport type { ArgSimilarTree, ArgSimilarGroup, ArgSimilarCommand, ArgSimilarArg }","import { Alert, Box, Button, ButtonBase, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, InputLabel, LinearProgress, Radio, RadioGroup, Switch, TextField, Typography, TypographyProps } from '@mui/material';\nimport { styled } from '@mui/system';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { CardTitleTypography, ExperimentalTypography, LongHelpTypography, PreviewTypography, ShortHelpPlaceHolderTypography, ShortHelpTypography, SmallExperimentalTypography, SmallPreviewTypography, StableTypography, SubtitleTypography } from './WSEditorTheme';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ImportExportIcon from '@mui/icons-material/ImportExport';\nimport CallSplitSharpIcon from '@mui/icons-material/CallSplitSharp';\nimport AddIcon from '@mui/icons-material/Add';\nimport WSECArgumentSimilarPicker, { ArgSimilarTree, BuildArgSimilarTree } from './argument/WSECArgumentSimilarPicker';\nimport pluralize from 'pluralize';\n\n\nfunction WSEditorCommandArgumentsContent(props: {\n    commandUrl: string,\n    args: CMDArg[],\n    clsArgDefineMap: ClsArgDefinitionMap,\n    onReloadArgs: () => Promise<void>,\n    onAddSubCommand: (argVar: string, subArgOptions: { var: string, options: string }[], argStackNames: string[]) => void,\n}) {\n\n    const [displayArgumentDialog, setDisplayArgumentDialog] = useState<boolean>(false);\n    const [editArg, setEditArg] = useState<CMDArg | undefined>(undefined);\n    const [editArgIdxStack, setEditArgIdxStack] = useState<ArgIdx[] | undefined>(undefined);\n    const [displayFlattenDialog, setDisplayFlattenDialog] = useState<boolean>(false);\n    const [displayUnwrapClsDialog, setDisplayUnwrapClsDialog] = useState<boolean>(false);\n\n    const handleArgumentDialogClose = async (updated: boolean) => {\n        if (updated) {\n            props.onReloadArgs();\n        }\n        setDisplayArgumentDialog(false);\n        setEditArg(undefined);\n        setEditArgIdxStack(undefined);\n    }\n\n    const handleEditArgument = (arg: CMDArg, argIdxStack: ArgIdx[]) => {\n        setEditArg(arg)\n        setEditArgIdxStack(argIdxStack)\n        setDisplayArgumentDialog(true)\n    }\n\n    const handleFlattenDialogClose = async (flattened: boolean) => {\n        if (flattened) {\n            props.onReloadArgs()\n        }\n        setDisplayFlattenDialog(false);\n        setEditArg(undefined);\n        setEditArgIdxStack(undefined);\n    }\n\n    const handleArgumentFlatten = (arg: CMDArg, argIdxStack: ArgIdx[]) => {\n        setEditArg(arg)\n        setEditArgIdxStack(argIdxStack)\n        setDisplayFlattenDialog(true)\n    }\n\n    const handleUnwrapClsDialogClose = async (unwrapped: boolean) => {        \n        if (unwrapped) {\n            props.onReloadArgs();\n        }\n        setDisplayUnwrapClsDialog(false);\n        setEditArg(undefined);\n        setEditArgIdxStack(undefined);\n    }\n\n    const handleUnwrapClsArgument = (arg: CMDArg, argIdxStack: ArgIdx[]) => {\n        setEditArg(arg)\n        setEditArgIdxStack(argIdxStack)\n        setDisplayUnwrapClsDialog(true)\n    }\n\n    const handleAddSubcommand = (arg: CMDArg, argIdxStack: ArgIdx[]) => {\n        const argVar = arg.var;\n        let argStackNames = argIdxStack.map(argIdx => {\n            let name = argIdx.displayKey;\n            while (name.startsWith('-')) {\n                name = name.slice(1)\n            }\n            if (name.endsWith('[]') || name.endsWith('{}')) {\n                name = name.slice(0, name.length-2)\n                name = pluralize.singular(name)\n            }\n            return name\n        });\n        let a: CMDArgBase | undefined = arg;\n        if (a.type.startsWith('@')) {\n            let clsName = (a as CMDClsArg).clsName;\n            a = props.clsArgDefineMap[clsName];\n        }\n        if (a.type.startsWith(\"dict<\")) {\n            a = (a as CMDDictArgBase).item;\n        } else if (a.type.startsWith(\"array<\")) {\n            a = (a as CMDArrayArgBase).item;\n        }\n        let subArgOptions: { var: string, options: string }[] = []\n        if (a !== undefined) {\n            let subArgs;\n            if (a.type.startsWith('@')) {\n                let clsName = (a as CMDClsArg).clsName;\n                subArgs = (props.clsArgDefineMap[clsName] as CMDObjectArgBase).args\n            } else {\n                subArgs = (a as CMDObjectArg).args\n            }\n            subArgOptions = subArgs.map(value => {\n                return {\n                    var: value.var,\n                    options: value.options.join(\" \"),\n                };\n            });\n        }\n\n        props.onAddSubCommand(argVar, subArgOptions, argStackNames);\n    }\n\n    return (\n        <React.Fragment>\n            <CardContent sx={{\n                flex: '1 0 auto',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch',\n            }}>\n                <Box sx={{\n                    mb: 2,\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: \"center\"\n                }}>\n                    <CardTitleTypography sx={{ flexShrink: 0 }}>\n                        [ ARGUMENT ]\n                    </CardTitleTypography>\n                </Box>\n                <ArgumentNavigation commandUrl={props.commandUrl} args={props.args} clsArgDefineMap={props.clsArgDefineMap} onEdit={handleEditArgument} onFlatten={handleArgumentFlatten} onUnwrap={handleUnwrapClsArgument} onAddSubcommand={handleAddSubcommand} />\n            </CardContent>\n\n            {displayArgumentDialog && <ArgumentDialog commandUrl={props.commandUrl} arg={editArg!} clsArgDefineMap={props.clsArgDefineMap} open={displayArgumentDialog} onClose={handleArgumentDialogClose} />}\n            {displayFlattenDialog && <FlattenDialog commandUrl={props.commandUrl} arg={editArg!} clsArgDefineMap={props.clsArgDefineMap} open={displayFlattenDialog} onClose={handleFlattenDialogClose} />}\n            {displayUnwrapClsDialog && <UnwrapClsDialog commandUrl={props.commandUrl} arg={editArg!} open={displayUnwrapClsDialog} onClose={handleUnwrapClsDialogClose} />}\n        </React.Fragment>\n    )\n}\n\n\ninterface ArgIdx {\n    var: string,\n    displayKey: string,\n}\n\nfunction ArgumentNavigation(props: {\n    commandUrl: string,\n    args: CMDArg[],\n    clsArgDefineMap: ClsArgDefinitionMap,\n    onEdit: (arg: CMDArg, argIdxStack: ArgIdx[]) => void,\n    onFlatten: (arg: CMDArg, argIdxStack: ArgIdx[]) => void,\n    onUnwrap: (arg: CMDArg, argIdxStack: ArgIdx[]) => void,\n    onAddSubcommand: (arg: CMDArg, argIdxStack: ArgIdx[]) => void,\n}) {\n    const [argIdxStack, setArgIdxStack] = useState<ArgIdx[]>([]);\n\n    const getArgProps = (selectedArgBase: CMDArgBase): { title: string, props: CMDArg[], flattenArgVar: string | undefined } | undefined => {\n        if (selectedArgBase.type.startsWith('@')) {\n            let clsArgDefine = props.clsArgDefineMap[(selectedArgBase as CMDClsArgBase).clsName];\n            let clsArgProps = getArgProps(clsArgDefine);\n            if (clsArgProps !== undefined && clsArgDefine.type === \"object\") {\n                clsArgProps!.flattenArgVar = (selectedArgBase as CMDClsArg).var\n            }\n            return clsArgProps;\n        }\n        if (selectedArgBase.type === \"object\") {\n            return {\n                title: \"Props\",\n                props: (selectedArgBase as CMDObjectArgBase).args,\n                flattenArgVar: (selectedArgBase as CMDObjectArg).var,\n            }\n        } else if (selectedArgBase.type.startsWith(\"dict<\")) {\n            let item = (selectedArgBase as CMDDictArgBase).item\n            const itemProps = item ? getArgProps(item) : undefined;\n            if (!itemProps) {\n                return undefined;\n            }\n            return {\n                title: \"Dict Element Props\",\n                props: itemProps.props,\n                flattenArgVar: undefined,\n            }\n        } else if (selectedArgBase.type.startsWith(\"array<\")) {\n            const itemProps = getArgProps((selectedArgBase as CMDArrayArgBase).item);\n            if (!itemProps) {\n                return undefined;\n            }\n            return {\n                title: \"Array Element Props\",\n                props: itemProps.props,\n                flattenArgVar: undefined,\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    const getSelectedArg = (stack: ArgIdx[]): CMDArg | undefined => {\n        if (stack.length === 0) {\n            return undefined;\n        } else {\n            let args: CMDArg[] = [...props.args]\n            let selectedArg: CMDArg | undefined = undefined;\n            for (const i in stack) {\n                const argVar = stack[i].var;\n                selectedArg = args.find(arg => arg.var === argVar)\n                if (!selectedArg) {\n                    break\n                }\n                args = getArgProps(selectedArg)?.props ?? [];\n            }\n            return selectedArg\n        }\n    }\n\n    useEffect(() => {\n        setArgIdxStack([]);\n    }, [props.commandUrl]);\n\n    useEffect(() => {\n        // update argument idx stack \n        const stack = [...argIdxStack];\n        while (stack.length > 0 && !getSelectedArg(stack)) {\n            stack.pop()\n        }\n        setArgIdxStack(stack);\n    }, [props.args, props.clsArgDefineMap])\n\n    const handleSelectSubArg = (subArgVar: string) => {\n        let subArg\n        if (argIdxStack.length > 0) {\n            const arg = getSelectedArg(argIdxStack);\n            if (!arg) {\n                return\n            }\n            subArg = getArgProps(arg)?.props.find(a => a.var === subArgVar)\n        } else {\n            subArg = props.args.find(a => a.var === subArgVar)\n        }\n\n        if (!subArg) {\n            return\n        }\n        const argIdx: ArgIdx = {\n            var: subArg.var,\n            displayKey: subArg.options[0],\n        }\n        if (argIdxStack.length === 0) {\n            if (argIdx.displayKey.length === 1) {\n                argIdx.displayKey = `-${argIdx.displayKey}`\n            } else {\n                argIdx.displayKey = `--${argIdx.displayKey}`\n            }\n        }\n\n        let argType = subArg.type;\n        if (argType.startsWith(\"@\")) {\n            argType = props.clsArgDefineMap[(subArg as CMDClsArg).clsName].type\n        }\n        if (argType.startsWith(\"dict<\")) {\n            argIdx.displayKey += \"{}\"\n        } else if (argType.startsWith(\"array<\")) {\n            argIdx.displayKey += \"[]\"\n        }\n\n        setArgIdxStack([...argIdxStack, argIdx]);\n    }\n\n    const handleChangeArgIdStack = (end: number) => {\n        setArgIdxStack(argIdxStack.slice(0, end));\n    }\n\n    const buildArgumentReviewer = () => {\n        const selectedArg = getSelectedArg(argIdxStack)\n        if (!selectedArg) {\n            return (<></>)\n        }\n\n        const stage = selectedArg.stage\n\n        return (\n            <React.Fragment>\n                <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\"\n                }}>\n                    <ArgNavBar argIdxStack={argIdxStack} onChangeArgIdStack={handleChangeArgIdStack} />\n                    {stage === \"Stable\" && <StableTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </StableTypography>}\n                    {stage === \"Preview\" && <PreviewTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </PreviewTypography>}\n                    {stage === \"Experimental\" && <ExperimentalTypography\n                        sx={{ flexShrink: 0 }}\n                    >\n                        {stage}\n                    </ExperimentalTypography>}\n                </Box>\n                <ArgumentReviewer\n                    arg={selectedArg}\n                    depth={argIdxStack.length}\n                    onEdit={() => { props.onEdit(selectedArg, argIdxStack) }}\n                    onUnwrap={() => { props.onUnwrap(selectedArg, argIdxStack) }}\n                />\n            </React.Fragment>\n        )\n    }\n\n    const buildArgumentPropsReviewer = () => {\n        if (argIdxStack.length === 0) {\n            if (props.args.length === 0) {\n                return (<></>)\n            }\n            return (<ArgumentPropsReviewer\n                title={\"Argument Groups\"}\n                args={props.args}\n                onFlatten={undefined}\n                onAddSubcommand={undefined}\n                depth={argIdxStack.length}\n                onSelectSubArg={handleSelectSubArg}\n            />)\n        } else {\n            const selectedArg = getSelectedArg(argIdxStack)\n            if (!selectedArg) {\n                return (<></>)\n            }\n            const argProps = getArgProps(selectedArg)\n            if (!argProps) {\n                return (<></>)\n            }\n            const canFlatten = argProps.flattenArgVar !== undefined\n            return (<ArgumentPropsReviewer\n                title={argProps.title}\n                args={argProps.props}\n                depth={argIdxStack.length}\n                selectedArg={selectedArg!}\n                onFlatten={canFlatten ? () => {\n                    props.onFlatten(selectedArg!, argIdxStack)\n                } : undefined}\n                onAddSubcommand={() => { props.onAddSubcommand(selectedArg!, argIdxStack) }}\n                onSelectSubArg={handleSelectSubArg}\n            />)\n        }\n    }\n\n    return (<React.Fragment>\n        {argIdxStack.length > 0 && <React.Fragment>\n            {buildArgumentReviewer()}\n        </React.Fragment>}\n        <React.Fragment>\n            {buildArgumentPropsReviewer()}\n        </React.Fragment>\n    </React.Fragment>)\n}\n\n\nconst NavBarItemTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}))\n\nconst NavBarItemHightLightedTypography = styled(NavBarItemTypography)<TypographyProps>(({ theme }) => ({\n    color: '#5d64cf',\n}))\n\nfunction ArgNavBar(props: {\n    argIdxStack: ArgIdx[],\n    onChangeArgIdStack: (end: number) => void,\n}) {\n\n    return (\n        <React.Fragment>\n            <Box\n                sx={{\n                    flexGrow: 1,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    mt: 1, mb: 0.5, mr: 2,\n                }}>\n                <ButtonBase key=\"Back\" onClick={() => {\n                    props.onChangeArgIdStack(0)\n                }}>\n                    <ArrowBackIosIcon sx={{ fontSize: 14 }} />\n                </ButtonBase>\n                {props.argIdxStack.slice(0, -1).map((argIdx, index) => (\n                    <ButtonBase\n                        key={`${index}`}\n                        onClick={() => {\n                            props.onChangeArgIdStack(index + 1)\n                        }}\n                    >\n                        <NavBarItemTypography sx={{ flexShrink: 0 }} >{index > 0 ? `.${argIdx.displayKey}` : argIdx.displayKey}</NavBarItemTypography>\n                    </ButtonBase>\n                ))}\n                <ButtonBase\n                    key={`${props.argIdxStack.length - 1}`}\n                    onClick={() => {\n                        props.onChangeArgIdStack(props.argIdxStack.length)\n                    }}\n                >\n                    <NavBarItemHightLightedTypography sx={{ flexShrink: 0 }} >{props.argIdxStack.length > 1 ? `.${props.argIdxStack[props.argIdxStack.length - 1].displayKey}` : props.argIdxStack[props.argIdxStack.length - 1].displayKey}</NavBarItemHightLightedTypography>\n                </ButtonBase>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nconst spliceArgOptionsString = (arg: CMDArg, depth: number) => {\n    let optionsString = arg.options.map((option) => {\n        if (depth === 0) {\n            if (option.length === 1) {\n                return '-' + option;\n            } else {\n                return '--' + option;\n            }\n        } else {\n            return '.' + option;\n        }\n    }).join(\" \");\n\n    if ((arg as CMDArrayArg).singularOptions) {\n        let singularOptionString = (arg as CMDArrayArg).singularOptions!.map((option) => {\n            if (depth === 0) {\n                if (option.length === 1) {\n                    return '-' + option;\n                } else {\n                    return '--' + option;\n                }\n            } else {\n                return '.' + option;\n            }\n        }).join(\" \");\n        optionsString += ` (${singularOptionString})`;\n    } else if ((arg as CMDClsArg).singularOptions) {\n        let singularOptionString = (arg as CMDArrayArg).singularOptions!.map((option) => {\n            if (depth === 0) {\n                if (option.length === 1) {\n                    return '-' + option;\n                } else {\n                    return '--' + option;\n                }\n            } else {\n                return '.' + option;\n            }\n        }).join(\" \");\n        optionsString += ` (${singularOptionString})`;\n    }\n\n    return optionsString;\n}\n\n\nconst ArgNameTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 26,\n    fontWeight: 700,\n}))\n\nconst ArgTypeTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nconst ArgRequiredTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#fad105',\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 200,\n}))\n\nconst ArgEditTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: \"#5d64cf\",\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}));\n\nconst ArgChoicesTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 14,\n    fontWeight: 700,\n}))\n\nfunction ArgumentReviewer(props: {\n    arg: CMDArg,\n    depth: number,\n    onEdit: () => void,\n    onUnwrap: () => void,\n}) {\n    const [choices, setChoices] = useState<string[]>([]);\n\n    const buildArgOptionsString = () => {\n        const argOptionsString = spliceArgOptionsString(props.arg, props.depth - 1);\n        return (<ArgNameTypography>{argOptionsString}</ArgNameTypography>)\n    }\n\n    useEffect(() => {\n        const newChoices: string[] = [];\n        if ((props.arg as CMDStringArg).enum) {\n            const items = (props.arg as CMDStringArg).enum!.items;\n            for (const idx in items) {\n                const enumItem = items[idx];\n                newChoices.push(enumItem.name);\n            }\n        } else if ((props.arg as CMDNumberArg).enum) {\n            const items = (props.arg as CMDNumberArg).enum!.items;\n            for (const idx in items) {\n                const enumItem = items[idx];\n                newChoices.push(enumItem.name);\n            }\n        }\n        setChoices(newChoices);\n    }, [props.arg]);\n\n    const getUnwrapKeywords = () => {\n        if (props.arg.type.startsWith(\"@\")) {\n            return \"Unwrap\"\n        } else if (props.arg.type.startsWith(\"array\")) {\n            if ((props.arg as CMDArrayArg).item?.type.startsWith(\"@\")) {\n                return \"Unwrap Element\"\n            }\n        } else if (props.arg.type.startsWith(\"dict\")) {\n            if ((props.arg as CMDDictArg).item?.type.startsWith(\"@\")) {\n                return \"Unwrap Element\"\n            }\n        }\n        return null;\n    }\n\n    const getDefaultValueToString = () => {\n        if (props.arg.type === \"object\" || props.arg.type.startsWith(\"dict<\") || props.arg.type.startsWith(\"array<\") || props.arg.type.startsWith(\"@\")) {\n            if (props.arg.default !== undefined && props.arg.default !== null) {\n                return JSON.stringify(props.arg.default.value);\n            }\n        } else {\n            if (props.arg.default !== undefined && props.arg.default !== null) {\n                return props.arg.default.value.toString();\n            }\n        }\n        return \"\"\n    }\n\n    return (<React.Fragment>\n        <Box\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"stretch\",\n                justifyContent: \"flex-start\",\n                mt: 1,\n                mb: 2\n            }}>\n            <Box sx={{\n                flexGrow: 1,\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n            }}>\n                {buildArgOptionsString()}\n                <Button sx={{ flexShrink: 0, ml: 3 }}\n                    startIcon={<EditIcon color=\"info\" fontSize='small' />}\n                    onClick={() => { props.onEdit() }}\n                >\n                    <ArgEditTypography>Edit</ArgEditTypography>\n                </Button>\n            </Box>\n\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"flex-start\",\n                alignItems: \"stretch\",\n                ml: 6,\n            }}>\n                <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\"\n                }}>\n                    <ArgTypeTypography>{`/${props.arg.type}/`}</ArgTypeTypography>\n                </Box>\n                {getUnwrapKeywords() !== null && <Button sx={{ flexShrink: 0, ml: 1 }}\n                    startIcon={<ImportExportIcon color=\"info\" fontSize='small' />}\n                    onClick={() => { props.onUnwrap() }}\n                >\n                    <ArgEditTypography>{getUnwrapKeywords()!}</ArgEditTypography>\n                </Button>}\n                <Box sx={{ flexGrow: 1 }} />\n                {props.arg.required && <ArgRequiredTypography>[Required]</ArgRequiredTypography>}\n            </Box>\n            {(props.arg.default !== undefined || choices.length > 0) && <Box\n                sx={{\n                    ml: 5,\n                    mt: 0.5,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                }}>\n                {choices.length > 0 && <ArgChoicesTypography sx={{ ml: 1 }}>\n                    {`Choices: ` + choices.join(', ')}\n                </ArgChoicesTypography>}\n                {props.arg.default !== undefined && <ArgChoicesTypography sx={{ ml: 1 }}>\n                    {`Default: ${getDefaultValueToString()}`}\n                </ArgChoicesTypography>\n                }\n            </Box>}\n            {props.arg.help?.short && <ShortHelpTypography sx={{ ml: 6, mt: 1.5 }}> {props.arg.help?.short} </ShortHelpTypography>}\n            {!(props.arg.help?.short) && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add argument short summary!</ShortHelpPlaceHolderTypography>}\n            {props.arg.help?.lines && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\n                {props.arg.help.lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\n            </Box>}\n        </Box>\n    </React.Fragment>)\n}\n\nfunction ArgumentDialog(props: {\n    commandUrl: string,\n    arg: CMDArg,\n    clsArgDefineMap: ClsArgDefinitionMap,\n    open: boolean,\n    onClose: (updated: boolean) => Promise<void>,\n}) {\n    const [updating, setUpdating] = useState<boolean>(false);\n    const [stage, setStage] = useState<string>(\"\");\n    const [invalidText, setInvalidText] = useState<string | undefined>(undefined);\n    const [options, setOptions] = useState<string>(\"\");\n    const [singularOptions, setSingularOptions] = useState<string | undefined>(undefined);\n    const [group, setGroup] = useState<string>(\"\")\n    const [hide, setHide] = useState<boolean>(false);\n    const [shortHelp, setShortHelp] = useState<string>(\"\");\n    const [longHelp, setLongHelp] = useState<string>(\"\");\n    const [argSimilarTree, setArgSimilarTree] = useState<ArgSimilarTree | undefined>(undefined);\n    const [argSimilarTreeExpandedIds, setArgSimilarTreeExpandedIds] = useState<string[]>([]);\n    const [argSimilarTreeArgIdsUpdated, setArgSimilarTreeArgIdsUpdated] = useState<string[]>([]);\n    const [hasDefault, setHasDefault] = useState<boolean | undefined>(false);\n    const [defaultValue, setDefaultValue] = useState<any | undefined>(undefined);\n    const [defaultValueInJson, setDefaultValueInJson] = useState<boolean>(false);\n\n    const handleClose = () => {\n        setInvalidText(undefined);\n        props.onClose(false);\n    }\n\n    const verifyModification = () => {\n        setInvalidText(undefined);\n        let name = options.trim();\n        let sName = singularOptions?.trim() ?? undefined;\n        let sHelp = shortHelp.trim();\n        let lHelp = longHelp.trim();\n        let gName = group.trim();\n\n        const names = name.split(' ').filter(n => n.length > 0);\n        const sNames = sName?.split(' ').filter(n => n.length > 0) ?? undefined;\n\n        if (names.length < 1) {\n            setInvalidText(`Argument 'Option names' is required.`)\n            return undefined\n        }\n\n        for (const idx in names) {\n            const piece = names[idx];\n            if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                setInvalidText(`Invalid 'Option name': '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `)\n                return undefined\n            }\n        }\n\n        if (sNames) {\n            for (const idx in sNames) {\n                const piece = sNames[idx];\n                if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                    setInvalidText(`Invalid 'Singular option name': '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `)\n                    return undefined\n                }\n            }\n        }\n\n        if (sHelp.length < 1) {\n            setInvalidText(`Field 'Short Summary' is required.`)\n            return undefined\n        }\n\n        let lines: string[] | null = null;\n        if (lHelp.length > 1) {\n            lines = lHelp.split('\\n').filter(l => l.length > 0);\n        }\n\n        let argDefault = undefined;\n        if (hasDefault === false) {\n            if (props.arg.default !== undefined) {\n                argDefault = null;\n            }\n        } else if (hasDefault === true) {\n            if (defaultValue === undefined) {\n                setInvalidText(`Field 'Default Value' is undefined.`)\n                return undefined;\n            } else {\n                try {\n                    let argType = props.arg.type;\n                    if (argType.startsWith(\"@\")) {\n                        argType = props.clsArgDefineMap[(props.arg as CMDClsArg).clsName].type\n                    }\n                    argDefault = {\n                        value: convertArgDefaultText(defaultValue!, argType),\n                    }\n                } catch (err: any) {\n                    setInvalidText(`Field 'Default Value' is invalid: ${err.message}.`)\n                    return undefined;\n                }\n                if (props.arg.default !== undefined && props.arg.default.value === argDefault.value) {\n                    argDefault = undefined;\n                }\n            }\n        }\n\n        return {\n            options: names,\n            singularOptions: sNames,\n            stage: stage,\n            group: gName,\n            hide: hide,\n            help: {\n                short: sHelp,\n                lines: lines\n            },\n            default: argDefault,\n        }\n    }\n\n    const handleModify = async (event: any) => {\n        const data = verifyModification();\n        if (data === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n\n        const argumentUrl = `${props.commandUrl}/Arguments/${props.arg.var}`\n\n        try {\n            let res = await axios.patch(argumentUrl, {\n                ...data,\n            });\n            let newArg = decodeArg(res.data).arg;\n            setUpdating(false);\n            await props.onClose(true);\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(\n                    `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                );\n            }\n            setUpdating(false);\n        }\n    }\n\n    const handleDisplaySimilar = () => {\n        if (verifyModification() === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n\n        const similarUrl = `${props.commandUrl}/Arguments/${props.arg.var}/FindSimilar`\n        axios.post(similarUrl).then(res => {\n            setUpdating(false);\n            const { tree, expandedIds } = BuildArgSimilarTree(res);\n            setArgSimilarTree(tree);\n            setArgSimilarTreeExpandedIds(expandedIds);\n            setArgSimilarTreeArgIdsUpdated([]);\n        }).catch(err => {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(\n                    `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                );\n            }\n            setUpdating(false);\n        });\n    }\n\n    const handleDisableSimilar = () => {\n        setArgSimilarTree(undefined);\n        setArgSimilarTreeExpandedIds([]);\n    }\n\n    const onSimilarTreeUpdated = (newTree: ArgSimilarTree) => {\n        setArgSimilarTree(newTree);\n    }\n\n    const onSimilarTreeExpandedIdsUpdated = (expandedIds: string[]) => {\n        setArgSimilarTreeExpandedIds(expandedIds);\n    }\n\n    const handleModifySimilar = async () => {\n        const data = verifyModification();\n        if (data === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n        let invalidText = \"\";\n        const updatedIds: string[] = [...argSimilarTreeArgIdsUpdated]\n        for (const idx in argSimilarTree!.selectedArgIds) {\n            const argId = argSimilarTree!.selectedArgIds[idx];\n            if (updatedIds.indexOf(argId) === -1) {\n                try {\n                    await axios.patch(argId, {\n                        ...data\n                    })\n                    updatedIds.push(argId);\n                    setArgSimilarTreeArgIdsUpdated([...updatedIds]);\n                } catch (err: any) {\n                    console.error(err.response);\n                    if (err.response?.data?.message) {\n                        const data = err.response!.data!;\n                        invalidText += `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    }\n                }\n            }\n        }\n\n        if (invalidText.length > 0) {\n            setInvalidText(invalidText);\n            setUpdating(false);\n        } else {\n            setUpdating(false);\n            await props.onClose(true);\n        }\n    }\n\n    useEffect(() => {\n        let { arg, clsArgDefineMap } = props;\n\n        setOptions(arg.options.join(\" \"));\n\n        if (arg.type.startsWith(\"array\")) {\n            setSingularOptions((arg as CMDArrayArg).singularOptions?.join(\" \") ?? \"\")\n        } else if (arg.type.startsWith('@') && clsArgDefineMap[(arg as CMDClsArg).clsName].type.startsWith(\"array\")) {\n            setSingularOptions((arg as CMDClsArg).singularOptions?.join(\" \") ?? \"\")\n        } else {\n            setSingularOptions(undefined);\n        }\n        setStage(props.arg.stage);\n        setGroup(props.arg.group);\n        setHide(props.arg.hide);\n        setShortHelp(props.arg.help?.short ?? \"\");\n        setLongHelp(props.arg.help?.lines?.join(\"\\n\") ?? \"\");\n        setUpdating(false);\n        setArgSimilarTree(undefined);\n        setArgSimilarTreeExpandedIds([]);\n\n        if (arg.type === \"object\" || arg.type.startsWith(\"dict<\") || arg.type.startsWith(\"array<\") || arg.type.startsWith(\"@\")) {\n            setDefaultValueInJson(true);\n            console.log(props.arg.default)\n            if (props.arg.default !== undefined && props.arg.default !== null) {\n                setHasDefault(true);\n                setDefaultValue(JSON.stringify(props.arg.default.value));\n            } else {\n                setHasDefault(false);\n                setDefaultValue(undefined);\n            }\n        } else {\n            setDefaultValueInJson(false);\n            if (props.arg.default !== undefined && props.arg.default !== null) {\n                setHasDefault(true);\n                setDefaultValue(props.arg.default.value.toString());\n            } else {\n                setHasDefault(false);\n                setDefaultValue(undefined);\n            }\n        }\n    }, [props.arg]);\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n            sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n        >\n            {!argSimilarTree && <>\n                <DialogTitle>Modify Argument</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <TextField\n                        id=\"options\"\n                        label=\"Option names\"\n                        helperText=\"You can input multiple names separated by a space character\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={options}\n                        onChange={(event: any) => {\n                            setOptions(event.target.value)\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    {singularOptions !== undefined && <TextField\n                        id=\"singularOptions\"\n                        label=\"Singular option names\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={singularOptions}\n                        onChange={(event: any) => {\n                            setSingularOptions(event.target.value)\n                        }}\n                        margin=\"normal\"\n                    />}\n                    <TextField\n                        id=\"group\"\n                        label=\"Argument Group\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={group}\n                        onChange={(event: any) => {\n                            setGroup(event.target.value)\n                        }}\n                        margin=\"normal\"\n                    />\n                    <InputLabel required shrink sx={{ font: \"inherit\" }}>Stage</InputLabel>\n                    <RadioGroup\n                        row\n                        value={stage}\n                        name=\"stage\"\n                        onChange={(event: any) => {\n                            setStage(event.target.value);\n                        }}\n                    >\n                        <FormControlLabel value=\"Stable\" control={<Radio />} label=\"Stable\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Preview\" control={<Radio />} label=\"Preview\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Experimental\" control={<Radio />} label=\"Experimental\" sx={{ ml: 4 }} />\n                    </RadioGroup>\n                    {!props.arg.required && <>\n                        <InputLabel shrink sx={{ font: \"inherit\" }}>Hide Argument</InputLabel>\n                        <Switch sx={{ ml: 4 }}\n                            checked={hide}\n                            onChange={(event: any) => {\n                                setHide(!hide);\n                            }}\n                        />\n                    </>}\n                    {hasDefault !== undefined && <>\n                        <InputLabel shrink sx={{ font: \"inherit\" }}>Default Value</InputLabel>\n                        <Box sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"flex-start\",\n                            ml: 4,\n                        }}>\n                            <Switch\n                                checked={hasDefault}\n                                onChange={(event: any) => {\n                                    setHasDefault(!hasDefault);\n                                    setDefaultValue(undefined);\n                                }}\n                            />\n                            <TextField\n                                id=\"defaultValue\"\n                                label=\"default Value\"\n                                hiddenLabel\n                                type=\"text\"\n                                hidden={!hasDefault}\n                                fullWidth\n                                size=\"small\"\n                                value={defaultValue !== undefined ? defaultValue : \"\"}\n                                onChange={(event: any) => {\n                                    setDefaultValue(event.target.value);\n                                }}\n                                placeholder={defaultValueInJson ? \"Default Value in json format\" : \"Default Value\"}\n                                margin=\"normal\"\n                                aria-controls=''\n                                required\n                            />\n                        </Box>\n                    </>}\n\n                    <TextField\n                        id=\"shortSummary\"\n                        label=\"Short Summary\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={shortHelp}\n                        onChange={(event: any) => {\n                            setShortHelp(event.target.value);\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        id=\"longSummary\"\n                        label=\"Long Summary\"\n                        helperText=\"Please add long summer in lines.\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        variant='standard'\n                        value={longHelp}\n                        onChange={(event: any) => {\n                            setLongHelp(event.target.value);\n                        }}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n            </>}\n\n            {argSimilarTree && <>\n                <DialogTitle>Modify Similar Arguments</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <WSECArgumentSimilarPicker tree={argSimilarTree} expandedIds={argSimilarTreeExpandedIds} updatedIds={argSimilarTreeArgIdsUpdated} onTreeUpdated={onSimilarTreeUpdated} onToggle={onSimilarTreeExpandedIdsUpdated} />\n                </DialogContent>\n            </>}\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && !argSimilarTree && <>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    {/* cls argument should flatten similar. Customer should unwrap cls argument before to modify it*/}\n                    {!props.arg.var.startsWith(\"@\") && <Button onClick={handleModify}>Update</Button>}\n                    {/* TODO: support unwrap and update */}\n                    <Button onClick={handleDisplaySimilar}>Update Similar</Button>\n                </>}\n                {!updating && argSimilarTree && <>\n                    <Button onClick={handleDisableSimilar}>Back</Button>\n                    <Button onClick={handleModifySimilar} disabled={argSimilarTree.selectedArgIds.length === 0}>Update</Button>\n                </>}\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nfunction FlattenDialog(props: {\n    commandUrl: string,\n    arg: CMDArg,\n    clsArgDefineMap: ClsArgDefinitionMap,\n    open: boolean,\n    onClose: (flattened: boolean) => Promise<void>,\n}) {\n    const [updating, setUpdating] = useState<boolean>(false);\n    const [invalidText, setInvalidText] = useState<string | undefined>(undefined);\n    const [subArgOptions, setSubArgOptions] = useState<{ var: string, options: string }[]>([]);\n    const [argSimilarTree, setArgSimilarTree] = useState<ArgSimilarTree | undefined>(undefined);\n    const [argSimilarTreeExpandedIds, setArgSimilarTreeExpandedIds] = useState<string[]>([]);\n    const [argSimilarTreeArgIdsUpdated, setArgSimilarTreeArgIdsUpdated] = useState<string[]>([]);\n\n    useEffect(() => {\n        let { arg, clsArgDefineMap } = props;\n        let subArgs;\n        if (arg.type.startsWith('@')) {\n            let clsName = (arg as CMDClsArg).clsName;\n            subArgs = (clsArgDefineMap[clsName] as CMDObjectArgBase).args\n        } else {\n            subArgs = (arg as CMDObjectArg).args\n        }\n        const subArgOptions = subArgs.map(value => {\n            return {\n                var: value.var,\n                options: value.options.join(\" \"),\n            };\n        });\n\n        setSubArgOptions(subArgOptions);\n        setArgSimilarTree(undefined);\n        setArgSimilarTreeExpandedIds([]);\n    }, [props.arg]);\n\n    const handleClose = () => {\n        setInvalidText(undefined);\n        props.onClose(false);\n    }\n\n    const verifyFlatten = () => {\n        setInvalidText(undefined);\n        const argOptions: { [argVar: string]: string[] } = {};\n        let invalidText: string | undefined = undefined;\n\n        subArgOptions.forEach((arg, idx) => {\n            const names = arg.options.split(' ').filter(n => n.length > 0);\n            if (names.length < 1) {\n                invalidText = `Prop ${idx + 1} option name is required.`\n                return undefined\n            }\n\n            for (const idx in names) {\n                const piece = names[idx];\n                if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                    invalidText = `Invalid 'Prop ${idx + 1} option name': '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `\n                    return undefined\n                }\n            }\n            argOptions[arg.var] = names;\n        });\n        if (invalidText !== undefined) {\n            setInvalidText(invalidText);\n            return undefined\n        }\n\n        return {\n            subArgsOptions: argOptions,\n        }\n    }\n\n    const handleFlatten = async () => {\n        const data = verifyFlatten();\n        if (data === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n\n        const flattenUrl = `${props.commandUrl}/Arguments/${props.arg.var}/Flatten`\n\n        try {\n            await axios.post(flattenUrl, {\n                ...data\n            });\n            setUpdating(false);\n            await props.onClose(true);\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(\n                    `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                );\n            }\n            setUpdating(false);\n        }\n    }\n\n    const handleDisplaySimilar = () => {\n        if (verifyFlatten() === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n\n        const similarUrl = `${props.commandUrl}/Arguments/${props.arg.var}/FindSimilar`\n        axios.post(similarUrl).then(res => {\n            setUpdating(false);\n            const { tree, expandedIds } = BuildArgSimilarTree(res);\n            setArgSimilarTree(tree);\n            setArgSimilarTreeExpandedIds(expandedIds);\n            setArgSimilarTreeArgIdsUpdated([]);\n        }).catch(err => {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(\n                    `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                );\n            }\n            setUpdating(false);\n        });\n    }\n\n    const handleDisableSimilar = () => {\n        setArgSimilarTree(undefined);\n        setArgSimilarTreeExpandedIds([]);\n    }\n\n    const onSimilarTreeUpdated = (newTree: ArgSimilarTree) => {\n        setArgSimilarTree(newTree);\n    }\n\n    const onSimilarTreeExpandedIdsUpdated = (expandedIds: string[]) => {\n        setArgSimilarTreeExpandedIds(expandedIds);\n    }\n\n    const handleFlattenSimilar = async () => {\n        const data = verifyFlatten();\n        if (data === undefined) {\n            return;\n        }\n        setUpdating(true);\n        let invalidText = \"\";\n        const updatedIds: string[] = [...argSimilarTreeArgIdsUpdated]\n        for (const idx in argSimilarTree!.selectedArgIds) {\n            const argId = argSimilarTree!.selectedArgIds[idx];\n            if (updatedIds.indexOf(argId) === -1) {\n                const flattenUrl = `${argId}/Flatten`\n                try {\n                    await axios.post(flattenUrl, {\n                        ...data\n                    })\n                    updatedIds.push(argId);\n                    setArgSimilarTreeArgIdsUpdated([...updatedIds]);\n                } catch (err: any) {\n                    console.error(err.response);\n                    if (err.response?.data?.message) {\n                        const data = err.response!.data!;\n                        invalidText += `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    }\n                }\n            }\n        }\n\n        if (invalidText.length > 0) {\n            setInvalidText(invalidText);\n            setUpdating(false);\n        } else {\n            setUpdating(false);\n            await props.onClose(true);\n        }\n    }\n\n    const buildSubArgText = (arg: { var: string, options: string }, idx: number) => {\n        return (<TextField\n            id={`subArg-${arg.var}`}\n            key={arg.var}\n            label={`Prop ${idx + 1}`}\n            helperText={idx === 0 ? \"You can input multiple names separated by a space character\" : undefined}\n            type=\"text\"\n            fullWidth\n            variant='standard'\n            value={arg.options}\n            onChange={(event: any) => {\n                const options = subArgOptions.map(value => {\n                    if (value.var === arg.var) {\n                        return {\n                            ...value,\n                            options: event.target.value,\n                        }\n                    } else {\n                        return value\n                    }\n                });\n                setSubArgOptions(options)\n            }}\n            margin=\"normal\"\n            required\n        />)\n    }\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n            sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n        >\n            {!argSimilarTree && <>\n                <DialogTitle>Flatten Props</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    {subArgOptions.map(buildSubArgText)}\n                </DialogContent>\n            </>}\n\n            {argSimilarTree && <>\n                <DialogTitle>Flatten Similar Argument Props</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <WSECArgumentSimilarPicker tree={argSimilarTree} expandedIds={argSimilarTreeExpandedIds} updatedIds={argSimilarTreeArgIdsUpdated} onTreeUpdated={onSimilarTreeUpdated} onToggle={onSimilarTreeExpandedIdsUpdated} />\n                </DialogContent>\n            </>}\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && !argSimilarTree && <>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    {!props.arg.type.startsWith('@') && <Button onClick={handleFlatten}>Flatten</Button>}\n                    {props.arg.type.startsWith('@') && <Button onClick={handleFlatten}>Unwrap & Flatten</Button>}\n                    <Button onClick={handleDisplaySimilar}>Flatten Similar</Button>\n                </>}\n                {!updating && argSimilarTree && <>\n                    <Button onClick={handleDisableSimilar}>Back</Button>\n                    <Button onClick={handleFlattenSimilar} disabled={argSimilarTree.selectedArgIds.length === 0}>Update</Button>\n                </>}\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nfunction UnwrapClsDialog(props: {\n    commandUrl: string,\n    arg: CMDArg,\n    open: boolean,\n    onClose: (unwrapped: boolean) => Promise<void>,\n}) {\n    const [updating, setUpdating] = useState<boolean>(false);\n    const [invalidText, setInvalidText] = useState<string | undefined>(undefined);\n\n    const handleClose = () => {\n        setInvalidText(undefined);\n        props.onClose(false);\n    }\n\n    const handleUnwrap = async () => {\n        setUpdating(true);\n\n        let argVar = props.arg.var;\n        if (props.arg.type.startsWith(\"array\")) {\n            if ((props.arg as CMDArrayArg).item?.type.startsWith(\"@\")) {\n                argVar += \"[]\";\n            }\n        } else if (props.arg.type.startsWith(\"dict\")) {\n            if ((props.arg as CMDDictArg).item?.type.startsWith(\"@\")) {\n                argVar += \"{}\"\n            }\n        }\n\n        const flattenUrl = `${props.commandUrl}/Arguments/${argVar}/UnwrapClass`\n\n        try {\n            await axios.post(flattenUrl);\n            setUpdating(false);\n            await props.onClose(true);\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(\n                    `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                );\n            }\n            setUpdating(false);\n        }\n    }\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n            sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n        >\n            <DialogTitle>Unwrap Class Type </DialogTitle>\n            <DialogContent dividers={true}>\n                {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                <ArgTypeTypography>{props.arg.type}</ArgTypeTypography>\n            </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && <>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleUnwrap}>Unwrap Class</Button>\n                </>}\n            </DialogActions>\n        </Dialog>\n    )\n\n}\n\n\nconst PropArgTypeTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 10,\n    fontWeight: 400,\n}))\n\nconst PropRequiredTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#dba339',\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 10,\n    fontWeight: 400,\n}))\n\nconst PropHiddenTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#8888C3',\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 10,\n    fontWeight: 400,\n}))\n\nconst ArgGroupTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 18,\n    fontWeight: 200,\n}))\n\nconst PropArgOptionTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nconst PropHiddenArgOptionTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: '#8888C3',\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 700,\n}))\n\nconst PropArgShortSummaryTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 14,\n    fontStyle: \"italic\",\n    fontWeight: 400,\n}))\n\nfunction ArgumentPropsReviewer(props: {\n    title: string,\n    args: CMDArg[],\n    onFlatten?: () => void,\n    onAddSubcommand?: () => void,\n    selectedArg?: CMDArg,\n    depth: number,\n    onSelectSubArg: (subArgVar: string) => void,\n}) {\n    const groupArgs: { [name: string]: CMDArg[] } = {};\n    if (props.args !== undefined) {\n        props.args.forEach((arg) => {\n            const groupName: string = arg.group.length > 0 ? arg.group : \"\";\n            if (!(groupName in groupArgs)) {\n                groupArgs[groupName] = []\n            }\n            groupArgs[groupName].push(arg)\n        })\n    }\n\n    const groups: ArgGroup[] = []\n\n    for (const groupName in groupArgs) {\n        groupArgs[groupName].sort((a, b) => {\n            if (a.required && !b.required) {\n                return -1\n            } else if (!a.required && b.required) {\n                return 1\n            }\n            return a.options[0].localeCompare(b.options[0])\n        });\n        groups.push({\n            name: groupName,\n            args: groupArgs[groupName],\n        })\n    }\n    groups.sort((a, b) => a.name.localeCompare(b.name));\n\n    const checkCanAddSubcommand = () => {\n        if (props.selectedArg && props.args.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    const buildArg = (arg: CMDArg, idx: number) => {\n        const argOptionsString = spliceArgOptionsString(arg, props.depth);\n        return (<Box key={`group-arg-${idx}`}\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"stretch\",\n                justifyContent: \"flex-start\",\n                mb: 2\n            }}>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"flex-end\",\n                justifyContent: \"flex-start\",\n            }}>\n                <ButtonBase onClick={() => {\n                    props.onSelectSubArg(arg.var)\n                }}>\n                    {!arg.hide && <PropArgOptionTypography sx={{ flexShrink: 0 }}>{argOptionsString}</PropArgOptionTypography>}\n                    {arg.hide && <PropHiddenArgOptionTypography sx={{ flexShrink: 0 }}>{argOptionsString}</PropHiddenArgOptionTypography>}\n                </ButtonBase>\n                <Box sx={{ flexGrow: 1 }} />\n                {arg.stage === \"Preview\" && <SmallPreviewTypography\n                    sx={{ flexShrink: 0 }}\n                >\n                    {arg.stage}\n                </SmallPreviewTypography>}\n                {arg.stage === \"Experimental\" && <SmallExperimentalTypography\n                    sx={{ flexShrink: 0 }}\n                >\n                    {arg.stage}\n                </SmallExperimentalTypography>}\n            </Box>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\"\n            }}>\n                <Box sx={{\n                    width: 300,\n                    flexShrink: 0,\n                    flexDirection: \"row\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}>\n                    <PropArgTypeTypography sx={{\n                        flexShrink: 0,\n                    }}>{`/${arg.type}/`}</PropArgTypeTypography>\n                    <Box sx={{ flexGrow: 1 }} />\n                    {arg.required && <PropRequiredTypography>[Required]</PropRequiredTypography>}\n                    {arg.hide && <PropHiddenTypography>[Hidden]</PropHiddenTypography>}\n                </Box>\n                {arg.help && <Box sx={{\n                    ml: 4\n                }}>\n                    <PropArgShortSummaryTypography>{arg.help.short}</PropArgShortSummaryTypography>\n                </Box>}\n            </Box>\n\n        </Box>)\n    }\n\n    const buildArgGroup = (group: ArgGroup, idx: number) => {\n        return (\n            <Box\n                key={`group-${idx}`}\n                sx={{\n                    flexGrow: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"stretch\",\n                    justifyContent: \"flex-start\",\n                    ml: 2, mr: 2, mb: 1\n                }}\n            >\n                <Box sx={{ flexShrink: 0, ml: 2, p: 1 }} >\n                    <ArgGroupTypography id={`argGroup-${idx}-header`}>\n                        {group.name.length > 0 ? `${group.name} Group` : \"Default Group\"}\n                    </ArgGroupTypography>\n                </Box>\n                <Box sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'stretch',\n                    justifyContent: 'flex-start',\n                    ml: 3,\n                    mr: 3,\n                }}>\n                    {group.args.map(buildArg)}\n                </Box>\n            </Box>)\n    }\n\n    if (groups.length === 0) {\n        return (<></>)\n    }\n\n    return (<React.Fragment>\n        <Box sx={{\n            p: 2,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n        }}>\n            <SubtitleTypography>{props.title}</SubtitleTypography>\n            {props.onFlatten !== undefined && <Button sx={{ flexShrink: 0, ml: 3 }}\n                startIcon={<CallSplitSharpIcon color=\"info\" fontSize='small' />}\n                onClick={props.onFlatten}\n            >\n                <ArgEditTypography>Flatten</ArgEditTypography>\n            </Button>}\n\n            {/* {props.onUnflatten !== undefined && <Button sx={{ flexShrink: 0, ml: 3 }}\n                startIcon={<CallMergeSharpIcon color=\"info\" fontSize='small' />}\n                onClick={props.onUnflatten}\n            >\n                <ArgEditTypography>Unflatten</ArgEditTypography>\n            </Button>} */}\n\n            {props.onAddSubcommand !== undefined && checkCanAddSubcommand() && <Button sx={{ flexShrink: 0, ml: 3 }}\n                startIcon={<AddIcon color=\"info\" fontSize='small' />}\n                onClick={props.onAddSubcommand}\n            >\n                <ArgEditTypography>Subcommands</ArgEditTypography>\n            </Button>}\n\n        </Box>\n        {groups.map(buildArgGroup)}\n    </React.Fragment>)\n}\n\ninterface ArgGroup {\n    name: string,\n    args: CMDArg[],\n}\n\ntype CMDArgHelp = {\n    short: string\n    lines?: string[]\n    refCommands?: string[]\n}\n\ntype CMDArgDefault<T> = {\n    value: T | null\n}\n\ntype CMDArgBlank<T> = {\n    value: T | null\n}\n\ntype CMDArgEnumItem<T> = {\n    name: string\n    hide: boolean\n    value: T\n}\n\ntype CMDArgEnum<T> = {\n    items: CMDArgEnumItem<T>[]\n}\n\ninterface CMDArgBase {\n    type: string\n    nullable: boolean\n    blank?: CMDArgBlank<any>\n}\n\ninterface CMDArg extends CMDArgBase {\n    var: string\n    options: string[]\n\n    required: boolean\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\n    hide: boolean\n    group: string\n    help?: CMDArgHelp\n\n    default?: CMDArgDefault<any>\n    idPart?: string\n}\n\ninterface CMDArgBaseT<T> extends CMDArgBase {\n    blank?: CMDArgBlank<T>\n}\n\ninterface CMDArgT<T> extends CMDArg {\n    default?: CMDArgDefault<T>\n    blank?: CMDArgBlank<T>\n}\n\n// type: starts with \"@\"\ninterface CMDClsArgBase extends CMDArgBase {\n    clsName: string\n}\n\ninterface CMDClsArg extends CMDClsArgBase, CMDArg {\n    singularOptions?: string[]  // for list use only\n}\n\n// type: string\ninterface CMDStringArgBase extends CMDArgBaseT<string> {\n    enum?: CMDArgEnum<string>\n    // fmt?: CMDStringFormat\n}\n\ninterface CMDStringArg extends CMDStringArgBase, CMDArgT<string> { }\n\n// type: byte\ninterface CMDByteArgBase extends CMDStringArgBase { }\ninterface CMDByteArg extends CMDByteArgBase, CMDStringArg { }\n\n// type: binary\ninterface CMDBinaryArgBase extends CMDStringArgBase { }\ninterface CMDBinaryArg extends CMDBinaryArgBase, CMDStringArg { }\n\n// type: duration\ninterface CMDDurationArgBase extends CMDStringArgBase { }\ninterface CMDDurationArg extends CMDDurationArgBase, CMDStringArg { }\n\n// type: date  As defined by full-date - https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\ninterface CMDDateArgBase extends CMDStringArgBase { }\ninterface CMDDateArg extends CMDDateArgBase, CMDStringArg { }\n\n// type: dateTime  As defined by date-time - https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\ninterface CMDDateTimeArgBase extends CMDStringArgBase { }\ninterface CMDDateTimeArg extends CMDDateTimeArgBase, CMDStringArg { }\n\n// type: uuid \ninterface CMDUuidArgBase extends CMDStringArgBase { }\ninterface CMDUuidArg extends CMDUuidArgBase, CMDStringArg { }\n\n// type: password \ninterface CMDPasswordArgBase extends CMDStringArgBase { }\ninterface CMDPasswordArg extends CMDPasswordArgBase, CMDStringArg { }\n\n// type: SubscriptionId\ninterface CMDSubscriptionIdArgBase extends CMDStringArgBase { }\ninterface CMDSubscriptionIdArg extends CMDSubscriptionIdArgBase, CMDStringArg { }\n\n// type: ResourceGroupName \ninterface CMDResourceGroupNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceGroupNameArg extends CMDResourceGroupNameArgBase, CMDStringArg { }\n\n// type: ResourceId \ninterface CMDResourceIdNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceIdNameArg extends CMDResourceIdNameArgBase, CMDStringArg { }\n\n// type: ResourceLocation\ninterface CMDResourceLocationNameArgBase extends CMDStringArgBase { }\ninterface CMDResourceLocationNameArg extends CMDResourceLocationNameArgBase, CMDStringArg { }\n\n\ninterface CMDNumberArgBase extends CMDArgBaseT<number> {\n    enum?: CMDArgEnum<number>\n    // fmt?: CMDIntegerFormat\n}\ninterface CMDNumberArg extends CMDNumberArgBase, CMDArgT<number> { }\n\n// type: integer\ninterface CMDIntegerArgBase extends CMDNumberArgBase { }\ninterface CMDIntegerArg extends CMDIntegerArgBase, CMDNumberArg { }\n\n// type: integer32\ninterface CMDInteger32ArgBase extends CMDNumberArgBase { }\ninterface CMDInteger32Arg extends CMDInteger32ArgBase, CMDNumberArg { }\n\n// type: integer32\ninterface CMDInteger64ArgBase extends CMDNumberArgBase { }\ninterface CMDInteger64Arg extends CMDInteger64ArgBase, CMDNumberArg { }\n\n// type: float\ninterface CMDFloatArgBase extends CMDNumberArgBase { }\ninterface CMDFloatArg extends CMDFloatArgBase, CMDNumberArg { }\n\n// type: float32\ninterface CMDFloat32ArgBase extends CMDNumberArgBase { }\ninterface CMDFloat32Arg extends CMDFloat32ArgBase, CMDNumberArg { }\n\n// type: float64\ninterface CMDFloat64ArgBase extends CMDNumberArgBase { }\ninterface CMDFloat64Arg extends CMDFloat64ArgBase, CMDNumberArg { }\n\n// type: boolean\ninterface CMDBooleanArgBase extends CMDArgBaseT<boolean> { }\ninterface CMDBooleanArg extends CMDBooleanArgBase, CMDArgT<boolean> { }\n\n// type: object\ninterface CMDObjectArgBase extends CMDArgBase {\n    // fmt?: CMDObjectFormat\n    args: CMDArg[]\n}\n\ninterface CMDObjectArg extends CMDObjectArgBase, CMDArg { }\n// type: dict\ninterface CMDDictArgBase extends CMDArgBase {\n    item?: CMDArgBase\n    anyType: boolean\n}\ninterface CMDDictArg extends CMDDictArgBase, CMDArg { }\n\n// type: array\ninterface CMDArrayArgBase extends CMDArgBase {\n    // fmt?: CMDArrayFormat\n    item: CMDArgBase\n}\n\ninterface CMDArrayArg extends CMDArrayArgBase, CMDArg {\n    singularOptions?: string[]\n}\n\ntype ClsArgDefinitionMap = {\n    [clsName: string]: CMDArgBase\n}\n\nfunction decodeArgEnumItem<T>(response: any): CMDArgEnumItem<T> {\n    return {\n        name: response.name,\n        hide: response.hide ?? false,\n        value: response.value as T,\n    }\n}\n\nfunction decodeArgEnum<T>(response: any): CMDArgEnum<T> {\n    let argEnum: CMDArgEnum<T> = {\n        items: response.items.map((item: any) => decodeArgEnumItem<T>(item))\n    }\n    return argEnum;\n}\n\nfunction decodeArgBlank<T>(response: any | undefined): CMDArgBlank<T> | undefined {\n    if (response === undefined || response === null) {\n        return undefined;\n    }\n\n    return {\n        value: response.value as (T | null),\n    }\n}\n\nfunction decodeArgDefault<T>(response: any | undefined): CMDArgDefault<T> | undefined {\n    if (response === undefined || response === null) {\n        return undefined;\n    }\n\n    return {\n        value: response.value as (T | null),\n    }\n}\n\nfunction decodeArgBase(response: any): { argBase: CMDArgBase, clsDefineMap: ClsArgDefinitionMap } {\n    let argBase: any = {\n        type: response.type,\n        nullable: (response.nullable ?? false) as boolean,\n    }\n\n    let clsDefineMap: ClsArgDefinitionMap = {};\n\n    switch (response.type) {\n        case \"byte\":\n        case \"binary\":\n        case \"duration\":\n        case \"date\":\n        case \"dateTime\":\n        case \"uuid\":\n        case \"password\":\n        case \"SubscriptionId\":\n        case \"ResourceGroupName\":\n        case \"ResourceId\":\n        case \"ResourceLocation\":\n        case \"string\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<string>(response.enum),\n                }\n            }\n            if (response.blank) {\n                argBase = {\n                    ...argBase,\n                    blank: decodeArgBlank<string>(response.blank),\n                }\n            }\n            break\n        case \"integer32\":\n        case \"integer64\":\n        case \"integer\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<number>(response.enum),\n                }\n            }\n            if (response.blank) {\n                argBase = {\n                    ...argBase,\n                    blank: decodeArgBlank<number>(response.blank),\n                }\n            }\n            break\n        case \"float32\":\n        case \"float64\":\n        case \"float\":\n            if (response.enum) {\n                argBase = {\n                    ...argBase,\n                    enum: decodeArgEnum<number>(response.enum),\n                }\n            }\n            if (response.blank) {\n                argBase = {\n                    ...argBase,\n                    blank: decodeArgBlank<number>(response.blank),\n                }\n            }\n            break\n        case \"boolean\":\n            if (response.blank) {\n                argBase = {\n                    ...argBase,\n                    blank: decodeArgBlank<boolean>(response.blank),\n                }\n            }\n            break\n        case \"object\":\n            if (response.args && Array.isArray(response.args) && response.args.length > 0) {\n                const args: CMDArg[] = response.args.map((resSubArg: any) => {\n                    const subArgParse = decodeArg(resSubArg);\n                    clsDefineMap = {\n                        ...clsDefineMap,\n                        ...subArgParse.clsDefineMap,\n                    }\n                    return subArgParse.arg\n                })\n                argBase = {\n                    ...argBase,\n                    args: args,\n                }\n            } else if (response.additionalProps && response.additionalProps.item) {\n                // Convert additionalProps to dict argBaseType\n                const itemArgBaseParse = decodeArgBase(response.additionalProps.item);\n                clsDefineMap = {\n                    ...clsDefineMap,\n                    ...itemArgBaseParse.clsDefineMap,\n                }\n                const argBaseType = `dict<string, ${itemArgBaseParse.argBase.type}>`\n                argBase = {\n                    ...argBase,\n                    type: argBaseType,\n                    item: itemArgBaseParse.argBase,\n                    anyType: false\n                }\n            } else if (response.additionalProps && response.additionalProps.anyType) {\n                const argBaseType = `dict<string, Any>`\n                argBase = {\n                    ...argBase,\n                    type: argBaseType,\n                    anyType: true\n                }\n            }\n\n            if (response.cls) {\n                const clsName = response.cls;\n                clsDefineMap[clsName] = argBase;\n                argBase = {\n                    type: `@${response.cls}`,\n                    clsName: clsName\n                }\n            }\n            break\n        default:\n            if (response.type.startsWith(\"array<\")) {\n                if (response.item) {\n                    const itemArgBaseParse = decodeArgBase(response.item);\n                    clsDefineMap = {\n                        ...clsDefineMap,\n                        ...itemArgBaseParse.clsDefineMap,\n                    }\n                    const argBaseType = `array<${itemArgBaseParse.argBase.type}>`\n                    argBase = {\n                        ...argBase,\n                        type: argBaseType,\n                        item: itemArgBaseParse.argBase,\n                    }\n                } else {\n                    throw Error(\"Invalid array object. Item is not defined\");\n                }\n\n                if (response.cls) {\n                    const clsName = response.cls;\n                    clsDefineMap[clsName] = argBase;\n                    argBase = {\n                        type: `@${response.cls}`,\n                        clsName: clsName\n                    }\n                }\n            } else if (response.type.startsWith(\"@\")) {\n                argBase[\"clsName\"] = response.type.slice(1);\n            } else {\n                console.error(`Unknown type '${response.type}'`)\n                throw Error(`Unknown type '${response.type}'`)\n            }\n    }\n\n    return {\n        argBase: argBase,\n        clsDefineMap: clsDefineMap,\n    };\n}\n\nfunction decodeArgHelp(response: any): CMDArgHelp {\n    return {\n        short: response.short,\n        lines: response.lines,\n        refCommands: response.refCommands,\n    }\n}\n\nfunction decodeArg(response: any): { arg: CMDArg, clsDefineMap: ClsArgDefinitionMap } {\n    let { argBase, clsDefineMap } = decodeArgBase(response);\n    const options = (response.options as string[]).sort((a, b) => a.length - b.length).reverse();\n    const help = response.help ? decodeArgHelp(response.help) : undefined;\n    let arg: any = {\n        ...argBase,\n        var: response.var as string,\n        options: options,\n        required: (response.required ?? false) as boolean,\n        stage: (response.stage ?? \"Stable\") as (\"Stable\" | \"Preview\" | \"Experimental\"),\n        hide: (response.hide ?? false) as boolean,\n        group: (response.group ?? \"\") as string,\n        help: help,\n        idPart: response.idPart,\n    }\n\n    switch (argBase.type) {\n        case \"byte\":\n        case \"binary\":\n        case \"duration\":\n        case \"date\":\n        case \"dateTime\":\n        case \"uuid\":\n        case \"password\":\n        case \"SubscriptionId\":\n        case \"ResourceGroupName\":\n        case \"ResourceId\":\n        case \"ResourceLocation\":\n        case \"string\":\n            if (response.default) {\n                arg = {\n                    ...arg,\n                    default: decodeArgDefault<string>(response.default),\n                }\n            }\n            break\n        case \"integer32\":\n        case \"integer64\":\n        case \"integer\":\n            if (response.default) {\n                arg = {\n                    ...arg,\n                    default: decodeArgDefault<number>(response.default),\n                }\n            }\n            break\n        case \"float32\":\n        case \"float64\":\n        case \"float\":\n            if (response.default) {\n                arg = {\n                    ...arg,\n                    default: decodeArgDefault<number>(response.default),\n                }\n            }\n            break\n        case \"boolean\":\n            if (response.default) {\n                arg = {\n                    ...arg,\n                    default: decodeArgDefault<boolean>(response.default),\n                }\n            }\n            break\n        case \"object\":\n            if (response.default) {\n                arg = {\n                    ...arg,\n                    default: decodeArgDefault<object>(response.default),\n                }\n            }\n            break\n        default:\n            if (argBase.type.startsWith(\"dict<\")) {\n                // dict type\n                if (response.default) {\n                    arg = {\n                        ...arg,\n                        default: decodeArgDefault<object>(response.default),\n                    }\n                }\n            } else if (argBase.type.startsWith(\"array<\")) {\n                // array type\n                if (response.singularOptions) {\n                    arg = {\n                        ...arg,\n                        singularOptions: response.singularOptions as string[],\n                    }\n                }\n                if (response.default) {\n                    arg = {\n                        ...arg,\n                        default: decodeArgDefault<Array<any>>(response.default),\n                    }\n                }\n            } else if (argBase.type.startsWith(\"@\")) {\n                if (response.singularOptions) {\n                    arg = {\n                        ...arg,\n                        singularOptions: response.singularOptions as string[],\n                    }\n                }\n                if (response.default) {\n                    arg = {\n                        ...arg,\n                        default: decodeArgDefault<any>(response.default),\n                    }\n                }\n            } else {\n                console.error(`Unknown type '${argBase.type}'`)\n                throw Error(`Unknown type '${argBase.type}'`)\n            }\n    }\n\n    return {\n        arg: arg,\n        clsDefineMap: clsDefineMap,\n    }\n}\n\nfunction convertArgDefaultText(defaultText: string, argType: string): any {\n    switch (argType) {\n        case \"byte\":\n        case \"binary\":\n        case \"duration\":\n        case \"date\":\n        case \"dateTime\":\n        case \"uuid\":\n        case \"password\":\n        case \"SubscriptionId\":\n        case \"ResourceGroupName\":\n        case \"ResourceId\":\n        case \"ResourceLocation\":\n        case \"string\":\n            if (defaultText.trim().length === 0) {\n                throw Error(`Not supported empty value: '${defaultText}'`);\n            }\n            return defaultText.trim();\n        case \"integer32\":\n        case \"integer64\":\n        case \"integer\":\n            if (Number.isNaN(parseInt(defaultText.trim()))) {\n                throw Error(`Not supported default value for integer type: '${defaultText}'`)\n            }\n            return parseInt(defaultText.trim());\n        case \"float32\":\n        case \"float64\":\n        case \"float\":\n            if (Number.isNaN(parseFloat(defaultText.trim()))) {\n                throw Error(`Not supported default value for float type: '${defaultText}'`)\n            }\n            return parseFloat(defaultText.trim());\n        case \"boolean\":\n            switch (defaultText.trim().toLowerCase()) {\n                case 'true':\n                case 'yes':\n                    return true;\n                case 'false':\n                case 'no':\n                    return false;\n                default:\n                    throw Error(`Not supported default value for boolean type: '${defaultText}'`)\n            }\n        case \"object\":\n            const de = JSON.parse(defaultText.trim());\n            // TODO: verify object\n            return de\n        default:\n            if (argType.startsWith(\"array\")) {\n                const de = JSON.parse(defaultText.trim());\n                // TODO: verify array\n                return de\n            } else if (argType.startsWith(\"dict\")) {\n                const de = JSON.parse(defaultText.trim());\n                // TODO: verify dict\n                return de\n            }\n            throw Error(`Not supported type: ${argType}`)\n    }\n}\n\nconst DecodeArgs = (argGroups: any[]): { args: CMDArg[], clsArgDefineMap: ClsArgDefinitionMap} => {\n    let clsDefineMap: ClsArgDefinitionMap = {};\n    const args: CMDArg[] = [];\n    argGroups.forEach((argGroup: any) => {\n        args.push(...argGroup.args.map((resArg: any) => {\n            const argDecode = decodeArg(resArg);\n            clsDefineMap = {\n                ...clsDefineMap,\n                ...argDecode.clsDefineMap\n            }\n            return argDecode.arg;\n        }))\n    })\n    return {\n        args: args,\n        clsArgDefineMap: clsDefineMap,\n    }\n}\n\nexport default WSEditorCommandArgumentsContent;\nexport {DecodeArgs}\nexport type {CMDArg, ClsArgDefinitionMap};\n","import { Alert, Box, Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, Accordion, InputLabel, LinearProgress, Radio, RadioGroup, TextField, Typography, TypographyProps, AccordionDetails, IconButton, Input, InputAdornment, AccordionSummaryProps, FormGroup, FormLabel } from '@mui/material';\nimport { styled } from '@mui/system';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport { NameTypography, ShortHelpTypography, ShortHelpPlaceHolderTypography, LongHelpTypography, StableTypography, PreviewTypography, ExperimentalTypography, SubtitleTypography, CardTitleTypography } from './WSEditorTheme';\nimport DoDisturbOnRoundedIcon from '@mui/icons-material/DoDisturbOnRounded';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\nimport LabelIcon from '@mui/icons-material/Label';\nimport WSEditorCommandArgumentsContent, { ClsArgDefinitionMap, CMDArg, DecodeArgs } from './WSEditorCommandArgumentsContent';\nimport EditIcon from '@mui/icons-material/Edit';\n\ninterface Example {\n    name: string,\n    commands: string[],\n}\n\ninterface Resource {\n    id: string,\n    version: string,\n    subresource?: string,\n    swagger: string,\n}\n\ninterface Command {\n    id: string\n    names: string[]\n    help?: {\n        short: string\n        lines?: string[]\n    }\n    stage: \"Stable\" | \"Preview\" | \"Experimental\"\n    version: string\n    examples?: Example[]\n    resources: Resource[]\n\n    // additional property\n    confirmation?: string\n    args?: CMDArg[]\n    clsArgDefineMap?: ClsArgDefinitionMap\n}\n\ninterface ResponseCommand {\n    names: string[],\n    help?: {\n        short: string\n        lines?: string[]\n    }\n    stage?: \"Stable\" | \"Preview\" | \"Experimental\"\n    version: string,\n    examples?: Example[],\n    resources: Resource[],\n    confirmation?: string,\n    argGroups?: any[],\n}\n\ninterface ResponseCommands {\n    [name: string]: ResponseCommand\n}\n\ninterface WSEditorCommandContentProps {\n    workspaceUrl: string\n    previewCommand: Command\n    reloadTimestamp: number\n    onUpdateCommand: (command: Command | null) => void\n}\n\ninterface WSEditorCommandContentState {\n    command?: Command\n    displayCommandDialog: boolean\n    displayExampleDialog: boolean\n    displayCommandDeleteDialog: boolean\n    displayAddSubcommandDialog: boolean\n    subcommandDefaultGroupNames?: string[],\n    subcommandArgVar?: string,\n    subcommandSubArgOptions?: { var: string, options: string }[],\n    exampleIdx?: number\n    loading: boolean\n}\n\nconst commandPrefix = 'az '\n\nconst ExampleCommandHeaderTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}))\n\nconst ExampleCommandBodyTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}))\n\nconst ExampleEditTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: \"#5d64cf\",\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeight: 400,\n}));\n\nconst ExampleAccordionSummary = styled((props: AccordionSummaryProps) => (\n    <MuiAccordionSummary\n        expandIcon={<LabelIcon fontSize=\"small\" color=\"primary\" />}\n        {...props}\n    />\n))(({ theme }) => ({\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(0deg)',\n    },\n}));\n\n\nclass WSEditorCommandContent extends React.Component<WSEditorCommandContentProps, WSEditorCommandContentState> {\n\n    constructor(props: WSEditorCommandContentProps) {\n        super(props);\n        this.state = {\n            command: undefined,\n            displayCommandDialog: false,\n            displayExampleDialog: false,\n            displayCommandDeleteDialog: false,\n            displayAddSubcommandDialog: false,\n            loading: false,\n        }\n    }\n\n    loadCommand = async () => {\n        this.setState({ loading: true })\n        let { workspaceUrl, previewCommand } = this.props\n        let commandNames = previewCommand.names;\n        const leafUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + commandNames.slice(0, -1).join('/') + '/Leaves/' + commandNames[commandNames.length - 1];\n        \n        try {\n            let res = await axios.get(leafUrl);\n            let command = DecodeResponseCommand(res.data);\n            if (command.id === this.props.previewCommand.id) {\n                this.setState({\n                    loading: false,\n                    command: command\n                })\n            }\n        } catch (err: any) {\n            this.setState({ loading: false })\n            console.error(err)\n        }\n    }\n\n    componentDidMount() {\n        this.loadCommand();\n    }\n\n    componentDidUpdate(prevProps: WSEditorCommandContentProps) {\n        if (prevProps.workspaceUrl !== this.props.workspaceUrl || prevProps.previewCommand.id !== this.props.previewCommand.id || prevProps.reloadTimestamp !== this.props.reloadTimestamp) {\n            if (prevProps.previewCommand.id !== this.props.previewCommand.id) {\n                this.setState({ command: undefined })\n            }\n            this.loadCommand();\n        }\n    }\n\n    onCommandDialogDisplay = () => {\n        this.setState({\n            displayCommandDialog: true,\n        })\n    }\n\n    onCommandDeleteDialogDisplay = () => {\n        this.setState({\n            displayCommandDeleteDialog: true,\n        })\n    }\n\n    handleCommandDialogClose = (newCommand?: Command) => {\n        if (newCommand) {\n            this.props.onUpdateCommand(newCommand!);\n        }\n        this.setState({\n            displayCommandDialog: false,\n        })\n    }\n\n    handleCommandDeleteDialogClose = (deleted: boolean) => {\n        if (deleted) {\n            this.props.onUpdateCommand(null);\n        }\n        this.setState({\n            displayCommandDeleteDialog: false,\n        })\n    }\n\n    onExampleDialogDisplay = (idx?: number) => {\n        this.setState({\n            displayExampleDialog: true,\n            exampleIdx: idx,\n        })\n    }\n\n    handleExampleDialogClose = (newCommand?: Command) => {\n        if (newCommand) {\n            this.props.onUpdateCommand(newCommand!);\n        }\n        this.setState({\n            displayExampleDialog: false,\n        })\n    }\n\n    onAddSubcommandDialogDisplay = (argVar: string, subArgOptions: { var: string, options: string }[], argStackNames: string[]) => {\n        this.setState({\n            displayAddSubcommandDialog: true,\n            subcommandArgVar: argVar,\n            subcommandSubArgOptions: subArgOptions,\n            subcommandDefaultGroupNames: [...this.props.previewCommand.names.slice(0, -1), ...argStackNames],\n        })\n    }\n\n    handleAddSubcommandDisplayClose = (add: boolean) => {\n        if (add) {\n            this.props.onUpdateCommand(this.state.command!);\n        }\n        this.setState({\n            displayAddSubcommandDialog: false,\n            subcommandArgVar: undefined,\n            subcommandDefaultGroupNames: undefined\n        })\n    }\n\n    render() {\n        const { workspaceUrl, previewCommand } = this.props;\n        const commandNames = previewCommand.names;\n        const name = commandPrefix + commandNames.join(' ');\n        const commandUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + commandNames.slice(0, -1).join('/') + '/Leaves/' + commandNames[commandNames.length - 1];\n\n        const { command, displayCommandDialog, displayExampleDialog, displayCommandDeleteDialog, displayAddSubcommandDialog, exampleIdx, loading } = this.state;\n\n        const buildExampleView = (example: Example, idx: number) => {\n            const buildCommand = (exampleCommand: string, cmdIdx: number) => {\n                return (<Box key={`example-${idx}-command-${cmdIdx}`} sx={{\n                    display: \"flex\",\n                    flexDirection: 'row',\n                    alignItems: 'flex-start',\n                    justifyContent: 'flex-start',\n                }}>\n                    <Box component=\"span\" sx={{\n                        flexShrink: 0,\n                        display: \"flex\",\n                        flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-start',\n                    }}>\n                        <KeyboardDoubleArrowRightIcon fontSize=\"small\" />\n                        <ExampleCommandHeaderTypography sx={{ flexShrink: 0 }}>{commandPrefix}</ExampleCommandHeaderTypography>\n                    </Box>\n                    <Box component=\"span\" sx={{\n                        ml: 0.8,\n                    }}>\n                        <ExampleCommandBodyTypography>{exampleCommand}</ExampleCommandBodyTypography>\n                    </Box>\n                </Box>)\n            }\n            return (\n                <Accordion\n                    elevation={0}\n                    expanded\n                    key={`example-${idx}`}\n                    onDoubleClick={() => { this.onExampleDialogDisplay(idx) }}\n                >\n                    <ExampleAccordionSummary\n                        id={`example-${idx}-header`}\n                    >\n                        <Box sx={{\n                            ml: 1,\n                            flexGrow: 1,\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                        }}>\n                            <SubtitleTypography sx={{ flexShrink: 0 }} >{example.name}</SubtitleTypography>\n                            {/* <Box sx={{ flexGrow: 1 }} /> */}\n                            <Button sx={{ flexShrink: 0, ml: 3 }}\n                                startIcon={<EditIcon color=\"info\" fontSize='small' />}\n                                onClick={() => { this.onExampleDialogDisplay(idx) }}\n                            >\n                                <ExampleEditTypography>Edit</ExampleEditTypography>\n                            </Button>\n                        </Box>\n                    </ExampleAccordionSummary>\n                    <AccordionDetails sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'stretch',\n                        justifyContent: 'flex-start',\n                        ml: 3,\n                        mr: 3,\n                        paddingTop: 0,\n                    }}>\n                        {example.commands.map(buildCommand)}\n                    </AccordionDetails>\n                </Accordion>\n            )\n        }\n\n        const buildCommandCard = () => {\n            const shortHelp = (command ?? previewCommand).help?.short;\n            const longHelp = (command ?? previewCommand).help?.lines?.join('\\n');\n            const lines: string[] = (command ?? previewCommand).help?.lines ?? [];\n            const stage = (command ?? previewCommand).stage;\n            const version = (command ?? previewCommand).version;\n\n            return (<Card\n                onDoubleClick={this.onCommandDialogDisplay}\n                elevation={3}\n                sx={{\n                    flexGrow: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    p: 2\n                }}>\n                <CardContent sx={{\n                    flex: '1 0 auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'stretch',\n                }}>\n                    <Box sx={{\n                        mb: 2,\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: \"center\"\n                    }}>\n                        <CardTitleTypography sx={{ flexShrink: 0 }}>\n                            [ COMMAND ]\n                        </CardTitleTypography>\n                        <Box sx={{ flexGrow: 1 }} />\n                        {stage === \"Stable\" && <StableTypography\n                            sx={{ flexShrink: 0 }}\n                        >\n                            {`v${version}`}\n                        </StableTypography>}\n                        {stage === \"Preview\" && <PreviewTypography\n                            sx={{ flexShrink: 0 }}\n                        >\n                            {`v${version}`}\n                        </PreviewTypography>}\n                        {stage === \"Experimental\" && <ExperimentalTypography\n                            sx={{ flexShrink: 0 }}\n                        >\n                            {`v${version}`}\n                        </ExperimentalTypography>}\n                    </Box>\n\n                    <NameTypography sx={{ mt: 1 }}>\n                        {name}\n                    </NameTypography>\n                    {shortHelp && <ShortHelpTypography sx={{ ml: 6, mt: 2 }}> {shortHelp} </ShortHelpTypography>}\n                    {!shortHelp && <ShortHelpPlaceHolderTypography sx={{ ml: 6, mt: 2 }}>Please add command short summary!</ShortHelpPlaceHolderTypography>}\n                    {longHelp && <Box sx={{ ml: 6, mt: 1, mb: 1 }}>\n                        {lines.map((line, idx) => (<LongHelpTypography key={idx}>{line}</LongHelpTypography>))}\n                    </Box>}\n                </CardContent>\n                <CardActions sx={{\n                    display: \"flex\",\n                    flexDirection: \"row-reverse\",\n                    alignContent: \"center\",\n                    justifyContent: \"flex-start\"\n                }}>\n                    {loading && <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>}\n                    {!loading && <Box sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignContent: \"center\",\n                        justifyContent: \"flex-start\"\n                    }}>\n\n                        <Button\n                            variant='contained' size=\"small\" color='info' disableElevation\n                            onClick={this.onCommandDialogDisplay}\n                            disabled={loading}\n                            sx={{ mr: 2 }}\n                        >\n                            <Typography variant='body2'>\n                                Edit\n                            </Typography>\n                        </Button>\n                        <Button\n                            variant='outlined' size=\"small\" color='info'\n                            onClick={this.onCommandDeleteDialogDisplay}\n                            disabled={loading}\n                            sx={{ mr: 2 }}\n                        >\n                            <Typography variant='body2'>\n                                Delete\n                            </Typography>\n                        </Button>\n                        <Button\n                            variant='outlined' size=\"small\" color='info'\n                            sx={{ mr: 2 }}\n                            disabled\n                        >\n                            <Typography variant='body2'>\n                                Try\n                            </Typography>\n                        </Button>\n                    </Box>}\n                </CardActions>\n            </Card>)\n        }\n\n        const buildArgumentsCard = () => {\n            return (<Card\n                elevation={3}\n                sx={{\n                    flexGrow: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    mt: 1,\n                    p: 2\n                }}>\n                <WSEditorCommandArgumentsContent commandUrl={commandUrl} args={command!.args!} clsArgDefineMap={command!.clsArgDefineMap!} onReloadArgs={this.loadCommand} onAddSubCommand={this.onAddSubcommandDialogDisplay} />\n            </Card>)\n        }\n\n        const buildExampleCard = () => {\n            const examples = command!.examples ?? []\n            return (<Card\n                elevation={3}\n                sx={{\n                    flexGrow: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    mt: 1,\n                    p: 2\n                }}>\n\n                <CardContent sx={{\n                    flex: '1 0 auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'stretch',\n                }}>\n                    <Box sx={{\n                        mb: 2,\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: \"center\"\n                    }}>\n                        <CardTitleTypography sx={{ flexShrink: 0 }}>\n                            [ EXAMPLE ]\n                        </CardTitleTypography>\n\n                    </Box>\n                    {examples.length > 0 && <Box>\n                        {examples.map(buildExampleView)}\n                    </Box>}\n                </CardContent>\n\n                <CardActions sx={{\n                    display: \"flex\",\n                    flexDirection: \"row-reverse\",\n                }}>\n                    <Button\n                        variant='contained' size=\"small\" color='info' disableElevation\n                        onClick={() => this.onExampleDialogDisplay(undefined)}\n                    >\n                        <Typography variant='body2'>\n                            Add\n                        </Typography>\n                    </Button>\n                </CardActions>\n            </Card>)\n        }\n\n        return (\n            <React.Fragment>\n                <Box sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'stretch',\n                }}>\n                    {buildCommandCard()}\n                    {command !== undefined && command.args !== undefined && buildArgumentsCard()}\n                    {command !== undefined && buildExampleCard()}\n                </Box>\n                {command !== undefined && displayCommandDialog && <CommandDialog open={displayCommandDialog} workspaceUrl={workspaceUrl} command={command!} onClose={this.handleCommandDialogClose} />}\n                {command !== undefined && displayExampleDialog && <ExampleDialog open={displayExampleDialog} workspaceUrl={workspaceUrl} command={command!} idx={exampleIdx} onClose={this.handleExampleDialogClose} />}\n                {command !== undefined && displayCommandDeleteDialog && <CommandDeleteDialog open={displayCommandDeleteDialog} workspaceUrl={workspaceUrl} command={command!} onClose={this.handleCommandDeleteDialogClose} />}\n                {command !== undefined && displayAddSubcommandDialog && <AddSubcommandDialog open={displayAddSubcommandDialog} workspaceUrl={workspaceUrl} command={command!} onClose={this.handleAddSubcommandDisplayClose} argVar={this.state.subcommandArgVar!} subArgOptions={this.state.subcommandSubArgOptions!} defaultGroupNames={this.state.subcommandDefaultGroupNames!} />}\n            </React.Fragment>\n        )\n    }\n}\n\n\nfunction CommandDeleteDialog(props: {\n    workspaceUrl: string,\n    open: boolean,\n    command: Command,\n    onClose: (deleted: boolean) => void\n}) {\n    const [updating, setUpdating] = React.useState<boolean>(false);\n    const [relatedCommands, setRelatedCommands] = React.useState<string[]>([]);\n\n    const getUrls = () => {\n        let urls: string[] = [];\n\n        props.command.resources.forEach(resource => {\n            const resourceId = btoa(resource.id)\n            const version = btoa(resource.version)\n            if (resource.subresource !== undefined) {\n                let subresource = btoa(resource.subresource)\n                // TODO: delete list command together with crud\n                // if (resource.subresource.endsWith('[]') || resource.subresource.endsWith('{}')) {\n                //     let subresource2 = btoa(resource.subresource.slice(0, -2))\n                //     urls.push(`${props.workspaceUrl}/Resources/${resourceId}/V/${version}/Subresources/${subresource2}`)\n                // } else {\n                //     let subresource2 = btoa(resource.subresource + '[]');\n                //     urls.push(`${props.workspaceUrl}/Resources/${resourceId}/V/${version}/Subresources/${subresource2}`)\n                //     subresource2 = btoa(resource.subresource + '{}');\n                //     urls.push(`${props.workspaceUrl}/Resources/${resourceId}/V/${version}/Subresources/${subresource2}`)\n                // }\n                urls.push(`${props.workspaceUrl}/Resources/${resourceId}/V/${version}/Subresources/${subresource}`)\n            } else {\n                urls.push(`${props.workspaceUrl}/Resources/${resourceId}/V/${version}`)\n            }\n        })\n        return urls;\n    }\n\n    React.useEffect(() => {\n        setRelatedCommands([]);\n        const urls = getUrls();\n        const promisesAll = urls.map(url => {\n            return axios.get(`${url}/Commands`)\n        })\n        Promise.all(promisesAll)\n            .then(responses => {\n                const commands = new Set<string>();\n                responses.forEach(response => {\n                    const responseCommands: ResponseCommand[] = response.data\n                    responseCommands\n                        .map(responseCommand => DecodeResponseCommand(responseCommand))\n                        .forEach(cmd => { commands.add(cmd.names.join(\" \")) });\n                });\n\n                const cmdNames: string[] = [];\n                commands.forEach(cmdName => cmdNames.push(cmdName));\n                cmdNames.sort((a, b) => a.localeCompare(b));\n                setRelatedCommands(cmdNames);\n            })\n            .catch(err => {\n                console.error(err.response)\n            })\n\n    }, [props.command]);\n\n    const handleClose = () => {\n        props.onClose(false);\n    }\n    const handleDelete = () => {\n        setUpdating(true);\n        const urls = getUrls();\n        const promisesAll = urls.map(url => {\n            return axios.delete(url)\n        })\n        Promise.all(promisesAll)\n            .then(res => {\n                setUpdating(false);\n                props.onClose(true);\n            })\n            .catch(err => {\n                setUpdating(false);\n                console.error(err.response)\n            })\n    }\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n        >\n            <DialogTitle>Delete Commands</DialogTitle>\n            <DialogContent dividers={true}>\n                {relatedCommands.map((command, idx) => (\n                    <Typography key={`command-${idx}`} variant=\"body2\">{`${commandPrefix}${command}`}</Typography>\n                ))}\n            </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && <React.Fragment>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleDelete}>Delete</Button>\n                </React.Fragment>}\n            </DialogActions>\n\n        </Dialog>\n    )\n}\n\ninterface CommandDialogProps {\n    workspaceUrl: string,\n    open: boolean\n    command: Command\n    onClose: (newCommand?: Command) => void\n}\n\ninterface CommandDialogState {\n    name: string,\n    stage: string,\n    shortHelp: string,\n    longHelp: string,\n    invalidText?: string,\n    confirmation: string,\n    updating: boolean\n}\n\n\nclass CommandDialog extends React.Component<CommandDialogProps, CommandDialogState> {\n\n    constructor(props: CommandDialogProps) {\n        super(props);\n        this.state = {\n            name: this.props.command.names.join(' '),\n            shortHelp: this.props.command.help?.short ?? \"\",\n            longHelp: this.props.command.help?.lines?.join('\\n') ?? \"\",\n            stage: this.props.command.stage,\n            confirmation: this.props.command.confirmation ?? \"\",\n            updating: false\n        }\n    }\n\n    handleModify = (event: any) => {\n        let { name, stage, shortHelp, longHelp, confirmation } = this.state\n        let { workspaceUrl, command } = this.props\n\n        name = name.trim();\n        shortHelp = shortHelp.trim();\n        longHelp = longHelp.trim();\n        confirmation = confirmation.trim();\n\n        const names = name.split(' ').filter(n => n.length > 0);\n\n        this.setState({\n            invalidText: undefined\n        })\n\n        if (names.length < 1) {\n            this.setState({\n                invalidText: `Field 'Name' is required.`\n            })\n            return\n        }\n\n        for (const idx in names) {\n            const piece = names[idx];\n            if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                this.setState({\n                    invalidText: `Invalid Name part: '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `\n                })\n                return\n            }\n        }\n\n        if (shortHelp.length < 1) {\n            this.setState({\n                invalidText: `Field 'Short Summary' is required.`\n            })\n            return\n        }\n\n        let lines: string[] | null = null;\n        if (longHelp.length > 1) {\n            lines = longHelp.split('\\n').filter(l => l.length > 0);\n        }\n\n        this.setState({\n            updating: true,\n        })\n\n        const leafUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + command.names.slice(0, -1).join('/') + '/Leaves/' + command.names[command.names.length - 1];\n\n        axios.patch(leafUrl, {\n            help: {\n                short: shortHelp,\n                lines: lines,\n            },\n            stage: stage,\n            confirmation: confirmation,\n        }).then(res => {\n            const name = names.join(' ');\n            if (name === command.names.join(' ')) {\n                const cmd = DecodeResponseCommand(res.data);\n                this.setState({\n                    updating: false,\n                })\n                this.props.onClose(cmd);\n            } else {\n                // Rename command\n                axios.post(`${leafUrl}/Rename`, {\n                    name: name\n                }).then(res => {\n                    const cmd = DecodeResponseCommand(res.data);\n                    this.setState({\n                        updating: false,\n                    })\n                    this.props.onClose(cmd);\n                })\n            }\n        }).catch(err => {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`,\n                })\n            }\n            this.setState({\n                updating: false,\n            })\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            invalidText: undefined\n        });\n        this.props.onClose();\n    }\n\n    render() {\n        const { name, shortHelp, longHelp, invalidText, updating, stage, confirmation } = this.state;\n        return (\n            <Dialog\n                disableEscapeKeyDown\n                open={this.props.open}\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n            >\n                <DialogTitle>Command</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <InputLabel required shrink sx={{ font: \"inherit\" }}>Stage</InputLabel>\n                    <RadioGroup\n                        row\n                        value={stage}\n                        name=\"stage\"\n                        onChange={(event: any) => {\n                            this.setState({\n                                stage: event.target.value,\n                            })\n                        }}\n                    >\n                        <FormControlLabel value=\"Stable\" control={<Radio />} label=\"Stable\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Preview\" control={<Radio />} label=\"Preview\" sx={{ ml: 4 }} />\n                        <FormControlLabel value=\"Experimental\" control={<Radio />} label=\"Experimental\" sx={{ ml: 4 }} />\n                    </RadioGroup>\n\n                    <TextField\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={name}\n                        onChange={(event: any) => {\n                            this.setState({\n                                name: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        id=\"shortSummary\"\n                        label=\"Short Summary\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={shortHelp}\n                        onChange={(event: any) => {\n                            this.setState({\n                                shortHelp: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        id=\"longSummary\"\n                        label=\"Long Summary\"\n                        helperText=\"Please add long summer in lines.\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        variant='standard'\n                        value={longHelp}\n                        onChange={(event: any) => {\n                            this.setState({\n                                longHelp: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"confirmation\"\n                        label=\"Command confirmation\"\n                        helperText=\"Modify or clear confirmation message as needed.\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        variant='standard'\n                        value={confirmation}\n                        onChange={(event: any) => {\n                            this.setState({\n                                confirmation: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    {updating &&\n                        <Box sx={{ width: '100%' }}>\n                            <LinearProgress color='info' />\n                        </Box>\n                    }\n                    {!updating && <React.Fragment>\n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        <Button onClick={this.handleModify}>Save</Button>\n                    </React.Fragment>}\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\n// function CommandDeleteDialog\n\ninterface ExampleDialogProps {\n    workspaceUrl: string\n    open: boolean\n    command: Command\n    idx?: number\n    onClose: (newCommand?: Command) => void\n}\n\ninterface ExampleDialogState {\n    name: string\n    exampleCommands: string[]\n    isAdd: boolean\n    invalidText?: string\n    updating: boolean\n}\n\nconst ExampleCommandTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Roboto Condensed', sans-serif\",\n    fontSize: 16,\n    fontWeight: 400,\n}))\n\nclass ExampleDialog extends React.Component<ExampleDialogProps, ExampleDialogState> {\n\n    constructor(props: ExampleDialogProps) {\n        super(props);\n        const examples: Example[] = this.props.command.examples ?? [];\n        if (this.props.idx === undefined) {\n            this.state = {\n                name: \"\",\n                exampleCommands: [\"\",],\n                isAdd: true,\n                invalidText: undefined,\n                updating: false,\n            }\n        } else {\n            const example = examples[this.props.idx];\n            this.state = {\n                name: example.name,\n                exampleCommands: example.commands,\n                isAdd: false,\n                invalidText: undefined,\n                updating: false,\n            }\n        }\n    }\n\n    onUpdateExamples = (examples: Example[]) => {\n        let { workspaceUrl, command } = this.props;\n\n        const leafUrl = `${workspaceUrl}/CommandTree/Nodes/aaz/` + command.names.slice(0, -1).join('/') + '/Leaves/' + command.names[command.names.length - 1];\n\n        this.setState({\n            updating: true,\n        })\n        axios.patch(leafUrl, {\n            examples: examples\n        }).then(res => {\n            const cmd = DecodeResponseCommand(res.data);\n            this.setState({\n                updating: false,\n            })\n            this.props.onClose(cmd);\n        }).catch(err => {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`,\n                })\n            }\n            this.setState({\n                updating: false,\n            })\n        });\n    }\n\n    handleDelete = () => {\n        let { command } = this.props;\n        let examples: Example[] = command.examples ?? [];\n        let idx = this.props.idx!;\n        examples = [...examples.slice(0, idx), ...examples.slice(idx + 1)];\n        this.onUpdateExamples(examples);\n    }\n\n    handleModify = () => {\n        let { command } = this.props;\n        let { name, exampleCommands } = this.state;\n        let examples: Example[] = command.examples ?? [];\n        let idx = this.props.idx!;\n\n        name = name.trim();\n        if (name.length < 1) {\n            this.setState({\n                invalidText: `Field 'Name' is required.`\n            })\n            return\n        }\n        exampleCommands = exampleCommands.map(cmd => {\n            return cmd.split('\\n')\n                .map(cmdLine => cmdLine.trim())\n                .filter(cmdLine => cmdLine.length > 0)\n                .join(' ')\n                .trim();\n        }).filter(cmd => cmd.length > 0);\n\n        if (exampleCommands.length < 1) {\n            this.setState({\n                invalidText: `Field 'Commands' is required.`\n            })\n            return\n        }\n\n        const newExample: Example = {\n            name: name,\n            commands: exampleCommands\n        }\n\n        examples = [...examples.slice(0, idx), newExample, ...examples.slice(idx + 1)];\n\n        this.onUpdateExamples(examples);\n    }\n\n    handleAdd = () => {\n        let { command } = this.props;\n        let { name, exampleCommands } = this.state;\n        let examples: Example[] = command.examples ?? [];\n\n        name = name.trim();\n        if (name.length < 1) {\n            this.setState({\n                invalidText: `Field 'Name' is required.`\n            })\n            return\n        }\n        exampleCommands = exampleCommands.map(cmd => {\n            return cmd.split('\\n')\n                .map(cmdLine => cmdLine.trim())\n                .filter(cmdLine => cmdLine.length > 0)\n                .join(' ')\n                .trim();\n        }).filter(cmd => cmd.length > 0);\n\n        if (exampleCommands.length < 1) {\n            this.setState({\n                invalidText: `Field 'Commands' is required.`\n            })\n            return\n        }\n\n        const newExample: Example = {\n            name: name,\n            commands: exampleCommands\n        }\n        examples.push(newExample);\n\n        this.onUpdateExamples(examples);\n    }\n\n    handleClose = () => {\n        this.setState({\n            invalidText: undefined\n        });\n        this.props.onClose()\n    }\n\n    onModifyExampleCommand = (cmd: string, idx: number) => {\n        this.setState(preState => {\n            return {\n                ...preState,\n                exampleCommands: [...preState.exampleCommands.slice(0, idx), cmd, ...preState.exampleCommands.slice(idx + 1)]\n            }\n        })\n    }\n\n    onRemoveExampleCommand = (idx: number) => {\n        this.setState(preState => {\n            let exampleCommands: string[] = [...preState.exampleCommands.slice(0, idx), ...preState.exampleCommands.slice(idx + 1)];\n            if (exampleCommands.length === 0) {\n                exampleCommands.push(\"\");\n            }\n            return {\n                ...preState,\n                exampleCommands: exampleCommands,\n            }\n        })\n    }\n\n    onAddExampleCommand = () => {\n        this.setState(preState => {\n            return {\n                ...preState,\n                exampleCommands: [...preState.exampleCommands, \"\"]\n            }\n        })\n    }\n\n    render() {\n        const { name, exampleCommands, isAdd, invalidText, updating } = this.state;\n\n        const buildExampleInput = (cmd: string, idx: number) => {\n            return (\n                <Box key={idx} sx={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    ml: 1,\n                }}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => this.onRemoveExampleCommand(idx)}\n                        aria-label=\"remove\"\n                    >\n                        <DoDisturbOnRoundedIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Input\n                        id={`command-${idx}`}\n                        multiline\n                        value={cmd}\n                        onChange={(event: any) => {\n                            this.onModifyExampleCommand(event.target.value, idx)\n                        }}\n                        sx={{ flexGrow: 1 }}\n                        placeholder=\"Input a command here.\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <ExampleCommandTypography>{commandPrefix}</ExampleCommandTypography>\n                            </InputAdornment>\n                        }\n                    />\n                </Box>\n            );\n        }\n\n        return (\n            <Dialog\n                disableEscapeKeyDown\n                open={this.props.open}\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n            >\n                <DialogTitle>{isAdd ? \"Add Example\" : \"Modify Example\"}</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <TextField\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={name}\n                        onChange={(event: any) => {\n                            this.setState({\n                                name: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\"\n                        required\n                    />\n                    <InputLabel required sx={{ font: \"inherit\", mt: 1 }}>Commands</InputLabel>\n                    {exampleCommands.map(buildExampleInput)}\n                    <Box sx={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        ml: 1,\n                    }}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={this.onAddExampleCommand}\n                            aria-label=\"remove\"\n                        >\n                            <AddCircleRoundedIcon fontSize=\"small\" />\n                        </IconButton>\n                        <ExampleCommandTypography sx={{ flexShrink: 0 }}> One more command</ExampleCommandTypography>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    {updating &&\n                        <Box sx={{ width: '100%' }}>\n                            <LinearProgress color='info' />\n                        </Box>\n                    }\n                    {!updating && <React.Fragment>\n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        {!isAdd && <React.Fragment>\n                            <Button onClick={this.handleDelete}>Delete</Button>\n                            <Button onClick={this.handleModify}>Save</Button>\n                        </React.Fragment>}\n                        {isAdd && <Button onClick={this.handleAdd}>Add</Button>}\n                    </React.Fragment>}\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nfunction AddSubcommandDialog(props: {\n    workspaceUrl: string,\n    command: Command,\n    argVar: string,\n    subArgOptions: { var: string, options: string }[],\n    defaultGroupNames: string[],\n    open: boolean,\n    onClose: (added: boolean) => void,\n}) {\n\n    const [updating, setUpdating] = useState<boolean>(false);\n    const [invalidText, setInvalidText] = useState<string | undefined>(undefined);\n    const [commandGroupName, setCommandGroupName] = useState<string>(\"\");\n    const [refArgsOptions, setRefArgsOptions] = useState<{ var: string, options: string }[]>([]);\n\n    useEffect(() => {\n        setCommandGroupName(props.defaultGroupNames.join(' '));\n        setRefArgsOptions(props.subArgOptions);\n    }, [props.argVar, props.defaultGroupNames]);\n\n    const handleClose = () => {\n        setInvalidText(undefined);\n        props.onClose(false);\n    }\n\n    const verifyAddSubresource = () => {\n        setInvalidText(undefined);\n        const argOptions: { [argVar: string]: string[] } = {}\n        let invalidText: string | undefined = undefined;\n        refArgsOptions.forEach((arg, idx) => {\n            const names = arg.options.split(' ').filter(n => n.length > 0);\n            if (names.length < 1) {\n                invalidText = `Prop ${idx + 1} option name is required.`\n                return undefined\n            }\n\n            for (const idx in names) {\n                const piece = names[idx];\n                if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(piece)) {\n                    invalidText = `Invalid 'Prop ${idx + 1} option name': '${piece}'. Supported regular expression is: [a-z0-9]+(-[a-z0-9]+)* `\n                    return undefined\n                }\n            }\n            argOptions[arg.var] = names;\n        });\n\n        const names = commandGroupName.split(' ').filter(n => n.length > 0);\n        if (names.length < 1) {\n            invalidText = 'Invalid Command group name';\n            return\n        }\n\n        if (invalidText !== undefined) {\n            setInvalidText(invalidText);\n            return undefined\n        }\n\n        return {\n            commandGroupName: names.join(' '),\n            refArgsOptions: argOptions,\n        }\n    }\n\n    const handleAddSubresource = async () => {\n        const urls = props.command.resources.map(resource => {\n            const resourceId = btoa(resource.id)\n            const version = btoa(resource.version)\n            return `${props.workspaceUrl}/Resources/${resourceId}/V/${version}/Subresources`\n        })\n\n        if (urls.length !== 1) {\n            setInvalidText(`Cannot create subcommands, command contains ${props.command.resources.length} resources`);\n            return;\n        }\n\n        const data = verifyAddSubresource();\n        if (data === undefined) {\n            return;\n        }\n\n        setUpdating(true);\n\n        try {\n            await  axios.post(urls[0], {\n                ...data,\n                arg: props.argVar,\n            })\n            props.onClose(true);\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                setInvalidText(`ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`);\n            }\n            setUpdating(false);\n        }\n    }\n\n    const buildRefArgText = (arg: { var: string, options: string }, idx: number) => {\n        return (<TextField\n            id={`subArg-${arg.var}`}\n            key={arg.var}\n            label={`${arg.var}`}\n            helperText={idx === 0 ? \"You can input multiple names separated by a space character\" : undefined}\n            type=\"text\"\n            fullWidth\n            variant='standard'\n            value={arg.options}\n            onChange={(event: any) => {\n                const options = refArgsOptions.map(value => {\n                    if (value.var === arg.var) {\n                        return {\n                            ...value,\n                            options: event.target.value,\n                        }\n                    } else {\n                        return value\n                    }\n                });\n                setRefArgsOptions(options)\n            }}\n            margin=\"normal\"\n            required\n        />)\n    }\n\n    return (<Dialog\n        disableEscapeKeyDown\n        open={props.open}\n        sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n    >\n        <DialogTitle>Add Subcommands</DialogTitle>\n        <DialogContent dividers={true}>\n            {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n            <FormLabel>Subcommand Group</FormLabel>\n            <TextField\n                id='subcommand-group-name'\n                label='name'\n                placeholder='Please input command group name for subcommands'\n                type=\"text\"\n                variant='standard'\n                value={commandGroupName}\n                fullWidth\n                margin=\"normal\"\n                required\n                onChange={(event: any) => {\n                    setCommandGroupName(event.target.value)\n                }}\n            />\n            {refArgsOptions.length > 0 && <>\n                <FormLabel>Argument Options</FormLabel>\n                {refArgsOptions.map(buildRefArgText)}\n            </>}\n        </DialogContent>\n        <DialogActions>\n            {updating &&\n                <Box sx={{ width: '100%' }}>\n                    <LinearProgress color='info' />\n                </Box>\n            }\n            {!updating && <>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleAddSubresource}>Add Subcommands</Button>\n            </>}\n        </DialogActions>\n    </Dialog>)\n}\n\nconst DecodeResponseCommand = (command: ResponseCommand): Command => {\n    let cmd: Command = {\n        id: 'command:' + command.names.join('/'),\n        names: command.names,\n        help: command.help,\n        stage: command.stage ?? \"Stable\",\n        examples: command.examples,\n        resources: command.resources,\n        version: command.version,\n    }\n\n    if (command.confirmation) {\n        cmd.confirmation = command.confirmation\n    }\n\n    if (command.argGroups) {\n        cmd = {\n            ...cmd,\n            ...DecodeArgs(command.argGroups!)\n        }\n    }\n\n    return cmd;\n}\nexport default WSEditorCommandContent;\n\nexport { DecodeResponseCommand };\nexport type { Command, Resource, ResponseCommand, ResponseCommands };\n\n","import * as React from 'react';\nimport { Box, Dialog, Slide, Drawer, Toolbar, DialogTitle, DialogContent, DialogActions, LinearProgress, Button, List, ListSubheader, Paper, ListItemButton, ListItemIcon, Checkbox, ListItemText, ListItem, TextField, Alert} from '@mui/material';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport { TransitionProps } from '@mui/material/transitions';\nimport WSEditorSwaggerPicker from './WSEditorSwaggerPicker';\nimport WSEditorToolBar from './WSEditorToolBar';\nimport WSEditorCommandTree, { CommandTreeLeaf, CommandTreeNode } from './WSEditorCommandTree';\nimport WSEditorCommandGroupContent, { CommandGroup, DecodeResponseCommandGroup, ResponseCommandGroup, ResponseCommandGroups } from './WSEditorCommandGroupContent';\nimport WSEditorCommandContent, { Command, Resource, DecodeResponseCommand, ResponseCommand } from './WSEditorCommandContent';\n\ninterface CommandGroupMap {\n    [id: string]: CommandGroup\n}\n\ninterface CommandMap {\n    [id: string]: Command\n}\n\ninterface WSEditorProps {\n    params: {\n        workspaceName: string\n    }\n}\n\ninterface WSEditorState {\n    name: string\n    workspaceUrl: string,\n    plane: string,\n\n    selected: Command | CommandGroup | null,\n    reloadTimestamp: number | null,\n    expanded: Set<string>,\n\n    commandMap: CommandMap,\n    commandGroupMap: CommandGroupMap,\n    commandTree: CommandTreeNode[],\n\n    showSwaggerResourcePicker: boolean,\n    showSwaggerReloadDialog: boolean,\n    showExportDialog: boolean,\n    showDeleteDialog: boolean,\n    showModifyDialog: boolean,\n}\n\nconst swaggerResourcePickerTransition = React.forwardRef(function swaggerResourcePickerTransition(\n    props: TransitionProps & { children: React.ReactElement },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction='up' ref={ref} {...props} />\n\n});\n\nconst drawerWidth = 300;\n\n\nclass WSEditor extends React.Component<WSEditorProps, WSEditorState> {\n\n    constructor(props: WSEditorProps) {\n        super(props);\n        this.state = {\n            name: this.props.params.workspaceName,\n            workspaceUrl: `/AAZ/Editor/Workspaces/${this.props.params.workspaceName}`,\n            plane: \"\",\n            selected: null,\n            reloadTimestamp: null,\n            expanded: new Set<string>(),\n            commandMap: {},\n            commandGroupMap: {},\n            commandTree: [],\n            showSwaggerResourcePicker: false,\n            showSwaggerReloadDialog: false,\n            showExportDialog: false,\n            showDeleteDialog: false,\n            showModifyDialog: false,\n        }\n    }\n\n    componentDidMount() {\n        this.loadWorkspace();\n    }\n\n    loadWorkspace = async (preSelectedId?: string | null) => {\n        const { workspaceUrl } = this.state\n        if (preSelectedId === undefined) {\n            preSelectedId = this.state.selected?.id;\n        }\n\n        try {\n            const res = await axios.get(workspaceUrl);\n            const reloadTimestamp = Date.now();\n            const commandMap: CommandMap = {};\n            const commandGroupMap: CommandGroupMap = {};\n\n            const buildCommand = (command_1: ResponseCommand): CommandTreeLeaf => {\n                const cmd: Command = DecodeResponseCommand(command_1);\n                commandMap[cmd.id] = cmd;\n                return {\n                    id: cmd.id,\n                    names: [...cmd.names],\n                };\n            };\n\n            const buildCommandGroup = (commandGroup_1: ResponseCommandGroup): CommandTreeNode => {\n                const group: CommandGroup = DecodeResponseCommandGroup(commandGroup_1);\n\n                commandGroupMap[group.id] = group;\n\n                const node: CommandTreeNode = {\n                    id: group.id,\n                    names: [...group.names],\n                    canDelete: group.canDelete,\n                };\n\n                if (typeof commandGroup_1.commands === 'object' && commandGroup_1.commands !== null) {\n                    node['leaves'] = [];\n\n                    for (const name in commandGroup_1.commands) {\n                        const subLeave = buildCommand(commandGroup_1.commands[name]);\n                        node['leaves'].push(subLeave);\n                    }\n                    node['leaves'].sort((a, b) => a.id.localeCompare(b.id));\n                    if (node['leaves'].length > 0) {\n                        node.canDelete = false;\n                    }\n                }\n\n                if (typeof commandGroup_1.commandGroups === 'object' && commandGroup_1.commandGroups !== null) {\n                    node['nodes'] = [];\n                    for (const name_1 in commandGroup_1.commandGroups) {\n                        const subNode = buildCommandGroup(commandGroup_1.commandGroups[name_1]);\n                        node['nodes'].push(subNode);\n                        if (!subNode.canDelete) {\n                            node.canDelete = false;\n                        }\n                    }\n                    node['nodes'].sort((a_1, b_1) => a_1.id.localeCompare(b_1.id));\n                }\n\n                if ((node['leaves']?.length ?? 0) > 1) {\n                    node.canDelete = false\n                }\n                group.canDelete = node.canDelete;\n                return node;\n            };\n\n            let commandTree: CommandTreeNode[] = [];\n\n            if (res.data.commandTree.commandGroups) {\n                const cmdGroups: ResponseCommandGroups = res.data.commandTree.commandGroups;\n                for (const key in cmdGroups) {\n                    commandTree.push(buildCommandGroup(cmdGroups[key]));\n                }\n                commandTree.sort((a_2, b_2) => a_2.id.localeCompare(b_2.id));\n            }\n\n            let selected: Command | CommandGroup | null = null;\n\n            if (preSelectedId != null) {\n                if (preSelectedId.startsWith('command:')) {\n                    let id: string = preSelectedId;\n                    if (id in commandMap) {\n                        selected = commandMap[id];\n                    } else {\n                        id = 'group:' + id.slice(8);\n                        let parts = id.split('/');\n                        while (parts.length > 1 && !(id in commandGroupMap)) {\n                            parts = parts.slice(0, -1);\n                            id = parts.join('/');\n                        }\n                        if (id in commandGroupMap) {\n                            selected = commandGroupMap[id];\n                        }\n                    }\n                } else if (preSelectedId.startsWith('group:')) {\n                    let id_1: string = preSelectedId;\n                    let parts_1 = id_1.split('/');\n                    while (parts_1.length > 1 && !(id_1 in commandGroupMap)) {\n                        parts_1 = parts_1.slice(0, -1);\n                        id_1 = parts_1.join('/');\n                    }\n                    if (id_1 in commandGroupMap) {\n                        selected = commandGroupMap[id_1];\n                    }\n                }\n            }\n\n            if (selected === null && commandTree.length > 0) {\n                selected = commandGroupMap[commandTree[0].id];\n            }\n\n            this.setState(preState => {\n                const newExpanded = new Set<string>();\n\n                // clean up removed group Id\n                preState.expanded.forEach((value) => {\n                    if (value in commandGroupMap) {\n                        newExpanded.add(value);\n                    }\n                })\n\n                // expand new groupId by default\n                for (const groupId in commandGroupMap) {\n                    if (!(groupId in preState.commandGroupMap)) {\n                        newExpanded.add(groupId);\n                    }\n                }\n\n                return {\n                    ...preState,\n                    plane: res.data.plane,\n                    commandTree: commandTree,\n                    selected: selected,\n                    reloadTimestamp: reloadTimestamp,\n                    commandMap: commandMap,\n                    commandGroupMap: commandGroupMap,\n                    expanded: newExpanded,\n                }\n            });\n\n            if (selected) {\n                let expandedId = selected.id;\n                if (expandedId.startsWith('command:')) {\n                    expandedId = expandedId.replace('command:', 'group:').split('/').slice(0, -1).join('/')\n                }\n                let expandedIdParts = expandedId.split('/');\n                this.setState(preState => {\n                    const newExpanded = new Set(preState.expanded);\n                    expandedIdParts.forEach((value, idx) => {\n                        newExpanded.add(expandedIdParts.slice(0, idx+1).join('/'));\n                    })\n                    return {\n                        ...preState,\n                        expanded: newExpanded,\n                    }\n                })\n            }\n\n            if (commandTree.length === 0) {\n                this.showSwaggerResourcePicker();\n            }\n        } catch (err) {\n            return console.error(err);\n        }\n    }\n\n    showSwaggerResourcePicker = () => {\n        this.setState({ showSwaggerResourcePicker: true })\n    }\n\n    showSwaggerReloadDialog = () => {\n        this.setState({ showSwaggerReloadDialog: true})\n    }\n\n    handleSwaggerReloadDialogClose = async (reloaded: boolean) => {\n        if (reloaded) {\n            await this.loadWorkspace()\n        }\n        this.setState({\n            showSwaggerReloadDialog: false\n        })\n    }\n\n    handleSwaggerResourcePickerClose = (updated: boolean) => {\n        if (updated) {\n            this.loadWorkspace();\n        }\n        this.setState({\n            showSwaggerResourcePicker: false\n        })\n    }\n\n    handleBackToHomepage = () => {\n        window.location.href = `/?#/workspace`\n    }\n\n    handleGenerate = () => {\n        this.setState({\n            showExportDialog: true\n        })\n    }\n\n    handleGenerationClose = (exported: boolean) => {\n        this.setState({\n            showExportDialog: false\n        })\n    }\n\n    handleDelete = () => {\n        this.setState({\n            showDeleteDialog: true\n        })\n    }\n\n    handleDeleteClose = (deleted: boolean) => {\n        this.setState({\n            showDeleteDialog: false\n        })\n        if(deleted) {\n            this.handleBackToHomepage();\n        }\n    }\n\n    handleModify = () => {\n        this.setState({\n            showModifyDialog: true\n        })\n    }\n\n    handleModifyClose = (newWSName: string | null) => {\n        this.setState({\n            showModifyDialog: false\n        })\n        if (!newWSName) {\n            return;\n        }\n        setTimeout(() => {\n            const target_url = `/?#/workspace/` + newWSName;\n            window.location.href = target_url;\n            window.location.reload();\n        })\n    }\n\n    handleCommandTreeSelect = (nodeId: string) => {\n        if (nodeId.startsWith('command:')) {\n            this.setState(preState => {\n                const selected = preState.commandMap[nodeId];\n                return {\n                    ...preState,\n                    selected: selected,\n                }\n            })\n        } else if (nodeId.startsWith('group:')) {\n            this.setState(preState => {\n                const selected = preState.commandGroupMap[nodeId];\n                return {\n                    ...preState,\n                    selected: selected,\n                }\n            })\n        }\n    }\n\n    handleCommandGroupUpdate = (commandGroup: CommandGroup | null) => {\n        this.loadWorkspace(commandGroup?.id);\n    }\n\n    handleCommandUpdate = (command: Command | null) => {\n        this.loadWorkspace(command?.id);\n    }\n\n    handleCommandTreeToggle = (nodeIds: string[]) => {\n        const newExpanded = new Set(nodeIds);\n        this.setState({\n            expanded: newExpanded,\n        });\n    }\n\n    render() {\n        const { showSwaggerResourcePicker, showSwaggerReloadDialog, showExportDialog, showDeleteDialog, showModifyDialog, plane, name, commandTree, selected, reloadTimestamp, workspaceUrl, expanded } = this.state;\n        const expandedIds: string[] = []\n        expanded.forEach((expandId) => {\n            expandedIds.push(expandId);\n        })\n        return (\n            <React.Fragment>\n                <WSEditorToolBar workspaceName={name} onHomePage={this.handleBackToHomepage} onGenerate={this.handleGenerate} onDelete={this.handleDelete} onModify={this.handleModify} >\n                </WSEditorToolBar>\n\n                <Box sx={{ display: 'flex' }}>\n                    <Drawer\n                        variant=\"permanent\"\n                        sx={{\n                            width: drawerWidth,\n                            flexShrink: 0,\n                            [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n                        }}\n                    >\n                        <Toolbar />\n                        {selected != null &&\n                            <WSEditorCommandTree\n                                commandTreeNodes={commandTree}\n                                onSelected={this.handleCommandTreeSelect}\n                                onToggle={this.handleCommandTreeToggle}\n                                onAdd={this.showSwaggerResourcePicker}\n                                onReload={this.showSwaggerReloadDialog}\n                                selected={selected!.id}\n                                expanded={expandedIds}\n                            />\n                        }\n                    </Drawer>\n\n                    <Box component='main' sx={{\n                        flexGrow: 1,\n                        p: 1,\n                    }}>\n                        <Toolbar sx={{ flexShrink: 0 }} />\n                        {selected != null && selected.id.startsWith('group:') &&\n                            <WSEditorCommandGroupContent\n                                workspaceUrl={workspaceUrl} commandGroup={(selected as CommandGroup)}\n                                reloadTimestamp={reloadTimestamp!}\n                                onUpdateCommandGroup={this.handleCommandGroupUpdate}\n                            />\n                        }\n                        {selected != null && selected.id.startsWith('command:') &&\n                            <WSEditorCommandContent\n                                workspaceUrl={workspaceUrl} previewCommand={(selected as Command)}\n                                reloadTimestamp={reloadTimestamp!}\n                                onUpdateCommand={this.handleCommandUpdate}\n                            />\n                        }\n                    </Box>\n                </Box>\n\n                <Dialog\n                    fullScreen\n                    open={showSwaggerResourcePicker}\n                    onClose={this.handleSwaggerResourcePickerClose}\n                    TransitionComponent={swaggerResourcePickerTransition}\n                >\n                    <WSEditorSwaggerPicker plane={plane} workspaceName={name} onClose={this.handleSwaggerResourcePickerClose} />\n                </Dialog>\n                {showModifyDialog && <WSRenameDialog workspaceUrl={workspaceUrl} workspaceName={name} open={showModifyDialog} onClose={this.handleModifyClose} />}\n                {showDeleteDialog && <WSEditorDeleteDialog workspaceName={name} open={showDeleteDialog} onClose={this.handleDeleteClose} />}\n                {showExportDialog && <WSEditorExportDialog workspaceUrl={workspaceUrl} open={showExportDialog} onClose={this.handleGenerationClose} />}\n                {showSwaggerReloadDialog && <WSEditorSwaggerReloadDialog workspaceUrl={workspaceUrl} open={showSwaggerReloadDialog} onClose={this.handleSwaggerReloadDialogClose} />}\n            </React.Fragment>\n        )\n    }\n}\n\nfunction WSEditorExportDialog(props: {\n    workspaceUrl: string,\n    open: boolean,\n    onClose: (exported: boolean) => void,\n}) {\n    const [updating, setUpdating] = React.useState<boolean>(false);\n    const [invalidText, setInvalidText] = React.useState<string | undefined>(undefined);\n\n    const handleClose = () => {\n        props.onClose(false);\n    }\n\n    const handleExport = () => {\n        const url = `${props.workspaceUrl}/Generate`;\n        setUpdating(true);\n\n        axios.post(url)\n            .then(res => {\n                setUpdating(false);\n                props.onClose(true);\n            }).catch(err => {\n                console.error(err.response)\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    setInvalidText(\n                        `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    );\n                }\n                setUpdating(false);\n            })\n    }\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n        >\n            <DialogTitle>Export workspace command models to AAZ Repo</DialogTitle>\n            <DialogContent>\n                {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n            </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && <React.Fragment>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleExport}>Confirm</Button>\n                </React.Fragment>}\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nfunction WSEditorDeleteDialog(props: {\n    workspaceName: string,\n    open: boolean,\n    onClose: (deleted: boolean) => void\n}) {\n    const [updating, setUpdating] = React.useState<boolean>(false);\n    const [invalidText, setInvalidText] = React.useState<string | undefined>(undefined);\n    const [confirmName, setConfirmName] = React.useState<string | undefined>(undefined);\n\n    const handleClose = () => {\n        props.onClose(false);\n    }\n\n    const handleDelete = () => {\n        setUpdating(true);\n        const nodeUrl = `/AAZ/Editor/Workspaces/` + props.workspaceName;\n        axios.delete(nodeUrl)\n            .then((res) => {\n                setUpdating(false);\n                props.onClose(true);\n            })            \n            .catch(err => {\n                console.error(err.response.data);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    setInvalidText(\n                        `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    );\n                }\n                setUpdating(false);\n        })\n\n    }\n\n    return (\n        <Dialog\n            disableEscapeKeyDown\n            open={props.open}\n        >\n            <DialogTitle>Delete '{props.workspaceName}' workspace?</DialogTitle>\n            <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <TextField\n                        id=\"name\"\n                        label=\"Workspace Name\"\n                        helperText=\"Please type workspace name to confirm.\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={confirmName}\n                        onChange={(event: any) => {\n                            setConfirmName(event.target.value)\n                        }}\n                        margin=\"normal\" required\n                    />\n                </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color='info' />\n                    </Box>\n                }\n                {!updating && <React.Fragment>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleDelete} disabled={props.workspaceName !== confirmName}>Confirm</Button>\n                </React.Fragment>}\n            </DialogActions>\n        </Dialog>\n    )\n}\n\ninterface WSEditorSwaggerReloadDialogProps {\n    workspaceUrl: string,\n    open: boolean,\n    onClose: (exported: boolean) => void,\n}\n\ninterface WSEditorSwaggerReloadDialogState {\n    updating: boolean,\n    invalidText?: string,\n    resourceOptions: Resource[],\n    selectedResources: Set<string>,\n}\n\nclass WSEditorSwaggerReloadDialog extends React.Component<WSEditorSwaggerReloadDialogProps, WSEditorSwaggerReloadDialogState> {\n\n    constructor(props: WSEditorSwaggerReloadDialogProps) {\n        super(props);\n        this.state = {\n            updating: false,\n            invalidText: undefined,\n            resourceOptions: [],\n            selectedResources: new Set(),\n        }\n    }\n    \n    componentDidMount() {\n        this.loadResourceOptions();\n    }\n\n    loadResourceOptions = async () => {\n        this.setState({\n            invalidText: undefined,\n            updating: true,\n        })\n        try {\n            const res = await axios.get(`${this.props.workspaceUrl}/CommandTree/Nodes/aaz/Resources`)\n            const resources: Resource[] = res.data;\n            this.setState({\n                updating: false,\n                resourceOptions: resources,\n                selectedResources: new Set(resources.map(resource => resource.id)),\n            })\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}`,\n                    updating: false,\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.onClose(false);\n    }\n\n    handleReload = async () => {\n        const {selectedResources, resourceOptions} = this.state;\n        const data = {\n            resources: resourceOptions\n            .filter(option => selectedResources.has(option.id))\n            .map(option => {\n                return {\n                    id: option.id,\n                    version: option.version,\n                }\n            })\n        }\n\n        const url = `${this.props.workspaceUrl}/Resources/ReloadSwagger`;\n        this.setState({\n            invalidText: undefined,\n            updating: true,\n        })\n        \n        try {\n            await axios.post(url, data);\n            this.setState({\n                updating: false,\n            })\n            this.props.onClose(true);\n        } catch (err: any) {\n            console.error(err.response);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}`,\n                    updating: false,\n                })\n            }\n        }\n    }\n\n    onSelectedAllClick = () => {\n        this.setState(preState => {\n            return {\n                ...preState,\n                selectedResources: preState.selectedResources.size > 0 ? new Set() : new Set(preState.resourceOptions.map(op => op.id))\n            }\n        })\n    }\n\n    onResourceItemClick = (resourceId: string) => {\n        return () => {\n            this.setState(preState => {\n                const selectedResources = new Set(preState.selectedResources);\n                if (selectedResources.has(resourceId)) {\n                    selectedResources.delete(resourceId);\n                } else {\n                    selectedResources.add(resourceId);\n                }\n                return {\n                    ...preState,\n                    selectedResources: selectedResources,\n                }\n            })\n        }\n    }\n\n    render() {\n        const {invalidText, selectedResources, updating, resourceOptions} = this.state;\n\n        return (\n            <Dialog\n                disableEscapeKeyDown\n                open={this.props.open}\n                fullWidth={true}\n                maxWidth=\"xl\"\n            >\n                <DialogTitle>Reload Swagger Resources</DialogTitle>\n                <DialogContent>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <List\n                            sx={{ flexGrow: 1 }}\n                            subheader={<ListSubheader>\n                                <Box sx={{\n                                    mt: 1,\n                                    mb: 1,\n                                    flexDirection: 'column',\n                                    display: 'flex',\n                                    alignItems: 'stretch',\n                                    justifyContent: 'flex-start',\n                                }} color='inherit'>\n                                    {/* <Typography component='h6'>Resource Url</Typography> */}\n    \n                                    <Paper sx={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center',\n                                        mt: 1,\n                                    }} variant=\"outlined\" square>\n    \n                                        <ListItemButton dense onClick={this.onSelectedAllClick} disabled={resourceOptions.length === 0}>\n                                            <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    checked={selectedResources.size > 0 && selectedResources.size === resourceOptions.length}\n                                                    indeterminate={selectedResources.size > 0 && selectedResources.size < resourceOptions.length}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': 'SelectAll' }}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText id=\"SelectAll\"\n                                                primary={`All (${resourceOptions.length})`}\n                                                primaryTypographyProps={{\n                                                    variant: \"h6\",\n                                                }}\n                                            />\n                                        </ListItemButton>\n                                    </Paper>\n                                </Box>\n                            </ListSubheader>}\n                        >\n    \n                            {resourceOptions.length > 0 && <Paper sx={{ ml: 2, mr: 2 }} variant=\"outlined\" square>\n                                {resourceOptions.map((option) => {\n                                    const labelId = `resource-${option.id}`;\n                                    const selected = selectedResources.has(option.id);\n                                    return <ListItem\n                                        key={option.id}\n                                        sx={{\n                                            display: 'flex',\n                                            flexDirection: 'row',\n                                            alignItems: 'center',\n                                        }}\n                                        disablePadding\n                                    >\n                                        <ListItemButton dense onClick={this.onResourceItemClick(option.id)}>\n                                            <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    checked={selected}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText id={labelId}\n                                                primary={`${option.version} ${option.id}`}\n                                                primaryTypographyProps={{\n                                                    variant: \"h6\",\n                                                }}\n                                            />\n                                        </ListItemButton>\n                                    </ListItem>\n                                })}\n                            </Paper>}\n                        </List>\n                </DialogContent>\n                <DialogActions>\n                    {updating &&\n                        <Box sx={{ width: '100%' }}>\n                            <LinearProgress color='info' />\n                        </Box>\n                    }\n                    {!updating && <React.Fragment>\n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        <Button onClick={this.handleReload}>Reload</Button>\n                    </React.Fragment>}\n                </DialogActions>\n            </Dialog>\n        ) \n    }\n\n}\n\ninterface WSRenameDialogProps {\n    workspaceUrl: string,\n    workspaceName: string,\n    open: boolean,\n    onClose: (newWSName: string | null) => void\n}\n\ninterface WSRenameDialogState {\n    newWSName: string,\n    invalidText?: string,\n    updating: boolean\n}\n\nclass WSRenameDialog extends React.Component<WSRenameDialogProps, WSRenameDialogState> {\n\n    constructor(props: WSRenameDialogProps) {\n        super(props);\n        this.state = {\n            newWSName: this.props.workspaceName,\n            updating: false\n        }\n    }\n\n    handleModify = (event: any) => {\n        let { newWSName } = this.state;\n        let { workspaceUrl, workspaceName } = this.props;\n\n        let nName = newWSName.trim();\n        if (nName.length < 1){\n            this.setState({\n                invalidText: `Field 'Name' is required.`\n            })\n            return;\n        }\n\n        this.setState({\n            invalidText: undefined\n        });\n        this.setState({\n            updating: true,\n        })\n\n        if (workspaceName === nName) {\n            this.setState({\n                updating: false,\n            })\n            this.props.onClose(null);\n        } else {\n            axios.post(`${workspaceUrl}/Rename`, {\n                name: nName\n            }).then(res => {\n                this.setState({\n                    updating: false,\n                })\n                this.props.onClose(res.data.name);\n            }).catch(err => {\n                this.setState({\n                    updating: false,\n                })\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    this.setState({\n                        invalidText: `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    })\n                }\n                \n            })\n        }\n        \n    }\n\n    handleClose = () => {\n        this.setState({\n            invalidText: undefined\n        });\n        this.props.onClose(null);\n    }\n\n    render() {\n        const { invalidText, updating } = this.state;\n        return (\n            <Dialog\n                disableEscapeKeyDown\n                open={this.props.open}\n                sx={{ '& .MuiDialog-paper': { width: '80%' } }}\n            >\n                <DialogTitle>Rename Workspace</DialogTitle>\n                <DialogContent dividers={true}>\n                    {invalidText && <Alert variant=\"filled\" severity='error'> {invalidText} </Alert>}\n                    <TextField\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant='standard'\n                        value={this.state.newWSName}\n                        onChange={(event: any) => {\n                            this.setState({\n                                newWSName: event.target.value,\n                            })\n                        }}\n                        margin=\"normal\" required\n                    />\n                </DialogContent>\n                <DialogActions>\n                    {updating &&\n                        <Box sx={{ width: '100%' }}>\n                            <LinearProgress color='info' />\n                        </Box>\n                    }\n                    {!updating && <React.Fragment>\n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        <Button onClick={this.handleModify}>Save</Button>\n                    </React.Fragment>}\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nconst WSEditorWrapper = (props: any) => {\n    const params = useParams()\n\n    return <WSEditor params={params} {...props} />\n}\n\nexport { WSEditorWrapper as WSEditor };\n","import * as React from 'react';\nimport withRoot from '../../withRoot';\nimport { AppAppBar } from '../../components/AppAppBar';\n\nclass CommandsPage extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AppAppBar pageName={'Commands'} />\n                {/* <Typography variant='h1' gutterBottom>\n                    Commands Page\n                </Typography> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRoot(CommandsPage);\n","import * as React from 'react';\nimport withRoot from '../../withRoot';\nimport { Outlet } from 'react-router';\n\nclass CLIPage extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Outlet />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRoot(CLIPage);\n","import { Autocomplete, createFilterOptions, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport axios from 'axios';\nimport * as React from 'react';\n\n\ninterface CLIModule {\n    name: string\n    folder: string | null\n    url: string | null\n}\n\ninterface CLIModuleSelectorProps {\n    repo: string\n    name: string\n}\n\ninterface CLIModuleSelectorState {\n    options: any[],\n    value: CLIModule | null,\n    openDialog: boolean,\n    createDialogValue: CLIModule\n}\n\ninterface InputType {\n    inputValue: string,\n    title: string,\n}\n\nconst filter = createFilterOptions<CLIModule | InputType>();\n\n\nclass CLIModuleSelector extends React.Component<CLIModuleSelectorProps, CLIModuleSelectorState> {\n\n    constructor(props: CLIModuleSelectorProps) {\n        super(props);\n        this.state = {\n            options: [],\n            value: null,\n            openDialog: false,\n            createDialogValue: {\n                name: \"\",\n                folder: null,\n                url: null\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        this.loadModules();\n    }\n\n    loadModules = () => {\n        axios.get(\"/CLI/Az/\" + this.props.repo + \"/Modules\")\n            .then((res) => {\n                let options = res.data.map((option: any) => {\n                    return {\n                        name: option.name,\n                        folder: option.folder,\n                        url: option.url,\n                    }\n                })\n                this.setState({\n                    options: options\n                })\n            })\n            .catch((err) => console.error(err.response));\n    }\n\n    handleDialogSubmit = (event: any) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            const moduleName = this.state.createDialogValue.name;\n\n            axios.post(\"/CLI/Az/\" + this.props.repo + \"/Modules\", {\n                name: moduleName,\n            })\n                .then((res) => {\n                    let module = res.data;\n                    let value = {\n                        name: module.name,\n                        folder: module.folder,\n                        url: module.url,\n                    }\n                    setTimeout(() => {\n                        this.onValueUpdated(value);\n                    })\n                    this.handleDialogClose();\n                })\n                .catch(error => {\n                    console.error(error.response);\n                })\n        }\n    }\n\n    handleDialogClose = () => {\n        this.setState({\n            createDialogValue: {\n                name: \"\",\n                folder: null,\n                url: null,\n            },\n            openDialog: false,\n        })\n    }\n\n    onValueUpdated = (value: any) => {\n        this.setState({\n            value: value\n        });\n        if (value.url) {\n            window.location.href = `/?#/CLI/${this.props.repo}/${value.name}`\n        }\n    }\n\n    render() {\n        const { options, value, openDialog, createDialogValue } = this.state\n\n        const { repo, name } = this.props\n\n        return (\n            <React.Fragment>\n                <Autocomplete\n                    id={repo + \"-module-select\"}\n                    value={value}\n                    sx={{ width: 280 }}\n                    options={options}\n                    autoHighlight\n                    onChange={(event, newValue: any) => {\n                        if (typeof newValue === 'string') {\n                            setTimeout(() => {\n                                this.setState({\n                                    openDialog: true,\n                                    createDialogValue: {\n                                        name: newValue,\n                                        url: null,\n                                        folder: null,\n                                    }\n                                })\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            this.setState({\n                                openDialog: true,\n                                createDialogValue: {\n                                    name: newValue.inputValue,\n                                    url: null,\n                                    folder: null,\n                                }\n                            })\n                        } else {\n                            this.onValueUpdated(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params: any) => {\n                        const filtered = filter(options, params);\n                        if (params.inputValue !== '' && -1 === options.findIndex((e) => e.name === params.inputValue)) {\n                            filtered.push({\n                                inputValue: params.inputValue,\n                                title: `Create \"${params.inputValue}\"`,\n                            });\n                        }\n                        return filtered;\n                    }}\n                    getOptionLabel={(option) => {\n                        if (typeof option === \"string\") {\n                            return option;\n                        }\n                        if (option.title) {\n                            return option.title;\n                        }\n                        return option.name;\n                    }}\n                    renderOption={(props, option) => {\n                        let labelName = (option && option.title) ? option.title : option.name;\n                        return (\n                            <Box component='li'\n                                {...props}\n                            >\n                                {labelName}\n                            </Box>\n                        )\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label={name}\n                            inputProps={{\n                                ...params.inputProps,\n                                autoComplete: 'new-password', // disable autocomplete and autofill\n                            }}\n                        />\n                    )}\n                />\n                <Dialog open={openDialog} onClose={this.handleDialogClose}>\n                    <Box component='form' onSubmit={this.handleDialogSubmit}>\n                        <DialogTitle>\n                            {'Create module in Azure CLI' + repo === 'Extension' ? ' Extension' : ''}\n                        </DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"normal\"\n                                id=\"name\"\n                                required\n                                value={createDialogValue.name}\n                                onChange={(event: any) => {\n                                    this.setState({\n                                        createDialogValue: {\n                                            ...createDialogValue,\n                                            name: event.target.value,\n                                        }\n                                    })\n                                }}\n                                label=\"Module Name\"\n                                type=\"text\"\n                                variant='standard'\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleDialogClose}>Cancel</Button>\n                            <Button type=\"submit\" color=\"success\">Create</Button>\n                        </DialogActions>\n                    </Box>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CLIModuleSelector\n","import * as React from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CLIModuleSelector from './CLIModuleSelector';\nimport { AppAppBar } from '../../components/AppAppBar';\nimport PageLayout from '../../components/PageLayout';\n\n\nconst MiddlePadding = styled(Box)(({ theme }) => ({\n    height: '6vh'\n}));\n\nconst SpacePadding = styled(Box)(({ theme }) => ({\n    width: '3vh'\n}));\n\nclass CLIInstruction extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <AppAppBar pageName={'CLI'} />\n                <PageLayout>\n                    <Box sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                    }}>\n                        <Box sx={{ flexGrow: 3 }} />\n                        <Box sx={{\n                            flexGrow: 3,\n                            flexShrink: 0,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column'\n                        }}>\n                            <Typography variant='h3' gutterBottom>\n                                Please select a CLI Module\n                            </Typography>\n                            <MiddlePadding />\n                            <Box sx={{\n                                display: \"flex\",\n                                flexDirection: 'row',\n                                alignItems: \"center\"\n                            }}>\n                                <CLIModuleSelector repo='Main' name='Azure CLI Module' />\n                                <SpacePadding />\n                                <Typography variant='h6' gutterBottom>\n                                    Or\n                                </Typography>\n                                <SpacePadding />\n                                <CLIModuleSelector repo='Extension' name='Azure CLI Extension Module' />\n                            </Box>\n                        </Box>\n                        <Box sx={{ flexGrow: 5 }} />\n                    </Box>\n                </PageLayout>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CLIInstruction;\n","import * as React from 'react';\nimport withRoot from '../../withRoot';\nimport { Outlet } from 'react-router';\nimport { AppAppBar } from '../../components/AppAppBar';\n\n\nclass DocumentsPage extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AppAppBar pageName={'Documents'} />\n                <Outlet />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRoot(DocumentsPage);\n","import * as React from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\n\ninterface DocumentTreeNode {\n    id: string\n    title: string\n    file?: string\n    nodes?: DocumentTreeNode[]\n}\n\ninterface ResponseDocumentTreeNode {\n    id: string\n    title: string\n    file?: string\n    pages?: ResponseDocumentTreeNode[]\n}\n\ninterface DocumentsTreeProps {\n    nodes: DocumentTreeNode[]\n    expanded: string[]\n    selected: string\n    onSelected: (docId: string) => void\n}\n\nclass DocumentsTree extends React.Component<DocumentsTreeProps> {\n    onNodeSelected = (event: React.SyntheticEvent, nodeIds: string[] | string) => {\n        if (typeof nodeIds === 'string') {\n            this.props.onSelected(nodeIds);\n        }\n    }\n\n    render() {\n\n        const renderNode = (node: DocumentTreeNode) => {\n            const title = node.title;\n            return (\n                <TreeItem key={node.id} nodeId={node.id} label={title} color='inherit'>\n                    {Array.isArray(node.nodes) ? node.nodes.map((subNode) => renderNode(subNode)) : null}\n                </TreeItem>\n            )\n        }\n\n        return (<TreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            onNodeSelect={this.onNodeSelected}\n            selected={this.props.selected}\n            expanded={this.props.expanded}\n            sx={{\n                flexGrow: 1,\n                overflowY: 'auto',\n                p: 3\n            }}\n        >\n            {this.props.nodes.map((node) => renderNode(node))}\n        </TreeView>\n        )\n    }\n}\n\nconst DecodeResponseDocumentTreeNode = (node: ResponseDocumentTreeNode): DocumentTreeNode => {\n    return {\n        id: node.id,\n        title: node.title,\n        file: node.file,\n        nodes: node.pages?.map(e => DecodeResponseDocumentTreeNode(e)),\n    }\n}\n\nexport default DocumentsTree;\n\nexport type {DocumentTreeNode, ResponseDocumentTreeNode};\n\nexport {DecodeResponseDocumentTreeNode};\n","import * as React from 'react';\nimport { Box, Drawer, Toolbar, Container, Card, Typography, TypographyProps, styled, TableRow, TableCell, Table, TableContainer, TableHead, Link } from '@mui/material';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown'\n\nimport { useParams } from 'react-router';\nimport DocumentsTree, { DecodeResponseDocumentTreeNode, DocumentTreeNode, ResponseDocumentTreeNode } from './DocumentsTree';\nimport { CodeProps, HeadingProps, UnorderedListProps } from 'react-markdown/lib/ast-to-react';\nimport { Prism } from 'react-syntax-highlighter'\nimport { okaidia as prismStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport remarkGfm from 'remark-gfm';\n\nconst drawerWidth = 300;\n\nfunction DocumentsDisplay(props: {\n    params: {\n        docId?: string\n    }\n}) {\n    const [selected, setSelected] = React.useState<string | undefined>(undefined);\n    const [documentTree, setDocumentTree] = React.useState<DocumentTreeNode[]>([]);\n    const [markDownContent, setMarkDownContent] = React.useState<string | undefined>(undefined);\n    const [expanded, setExpanded] = React.useState<string[]>([]);\n\n    const loadDocument = (nodeId: string) => {\n        axios.get(`/Docs/Index/${nodeId}`)\n            .then(res => {\n                if (res.status === 204) {\n                    return\n                }\n                const content = res.data;\n                setMarkDownContent(content);\n            }).catch(err => console.error(err.response));\n    }\n\n    const handleTreeSelect = (nodeId: string) => {\n        setSelected(nodeId);\n        loadDocument(nodeId);\n    }\n\n    React.useEffect(() => {\n        if (props.params.docId) {\n            handleTreeSelect(props.params.docId);\n        }\n    }, [props.params.docId])   // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    const loadDocumentIndex = async () => {\n        try {\n            const res = await axios.get('/Docs/Index');\n            const pages: ResponseDocumentTreeNode[] = res.data;\n            const dt: DocumentTreeNode[] = pages.map(e => DecodeResponseDocumentTreeNode(e));\n            return dt\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    React.useEffect(() => {\n        loadDocumentIndex().then((dt) => {\n            if (dt) {\n                const expandedIds: string[] = [];\n                const iterNode = (node: DocumentTreeNode) => {\n                    if (node.nodes) {\n                        expandedIds.push(node.id);\n                        node.nodes.forEach(subNode => iterNode(subNode));\n                    }\n                }\n                dt.forEach(subNode => iterNode(subNode));\n                setDocumentTree(dt);\n                setExpanded(expandedIds);\n                if (!props.params.docId && dt.length > 0) {\n                    handleTreeSelect(dt[0].id);\n                }\n            }\n        })\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <React.Fragment>\n            <Box sx={{ display: 'flex' }}>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        width: drawerWidth,\n                        flexShrink: 0,\n                        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n                        zIndex: (theme) => theme.zIndex.appBar - 1\n                    }}\n                >\n                    <Toolbar />\n                    {selected && documentTree.length > 0 && <DocumentsTree\n                        nodes={documentTree}\n                        selected={selected}\n                        onSelected={handleTreeSelect}\n                        expanded={expanded}\n                    />}\n                </Drawer>\n\n                <Container sx={{\n                    flexGrow: 1,\n                }}>\n                    <Toolbar sx={{ flexShrink: 0 }} />\n                    <Box sx={{ pt: 4, pb: 20 }}>\n                        {markDownContent && <ReactMarkdown\n                            children={markDownContent}\n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                                p: (props) => {\n                                    return (<Box sx={{ mt: 2 }}>\n                                        <PComponent>{props.children}</PComponent>\n                                    </Box>)\n                                },\n                                h1: (props: React.PropsWithChildren<HeadingProps>) => {\n                                    return (<Box sx={{\n                                        display: \"flex\", alignItems: \"center\", justifyContent: \"center\",\n                                        mt: 2,\n                                        mb: 2,\n                                    }}>\n                                        <H1Component>{props.children}</H1Component>\n                                    </Box>)\n                                },\n                                h2: (props: React.PropsWithChildren<HeadingProps>) => {\n                                    return (<Box sx={{ mt: 6, mb: 2 }}><H2Component>{props.children}</H2Component></Box>)\n                                },\n                                h3: (props: React.PropsWithChildren<HeadingProps>) => {\n                                    return (<Box sx={{ mt: 4, mb: 4 }}><H3Component>{props.children}</H3Component></Box>)\n                                },\n                                ul: (props: React.PropsWithChildren<UnorderedListProps>) => {\n                                    return (<Box sx={{ listStyleType: props.depth < 1 ? \"disc\" : \"circle\", p: 1, ml: 4 }}>{props.children}</Box>)\n                                },\n                                li: (props) => {\n                                    return (<Typography component=\"li\"\n                                        fontSize={15}\n                                        fontWeight={600}\n                                    >{props.children}</Typography>)\n                                },\n                                code: (props: React.PropsWithChildren<CodeProps>) => {\n                                    const match = /language-(\\w+)/.exec(props.className || '')\n                                    if (!props.inline && match) {\n                                        return (\n                                            <Card variant=\"outlined\" sx={{ mt: 3, ml: 2, mr: 2, paddingLeft: 1, paddingRight: 1 }}>\n                                                <Prism\n                                                    style={prismStyle}\n                                                    language={match[1]}\n                                                    PreTag=\"div\"\n                                                    children={props.children}\n                                                />\n                                            </Card>\n                                        )\n                                    } else {\n                                        return (<code className={props.className} {...props} />)\n                                    }\n                                },\n                                img: (props) => {\n                                    return (\n                                        <Box component='span' sx={{\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            mt: 2, mb: 2, ml: 2, p: 2,\n                                        }}>\n                                            <img alt={props.alt} src={props.src} title={props.title} style={{ maxWidth: \"95%\" }} />\n                                        </Box>\n                                    )\n                                },\n                                table: (props) => {\n                                    return (\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", p: 2 }}>\n                                            <TableContainer component={Card} variant='outlined'>\n                                                <Table sx={{ minWidth: 400 }}>{props.children}</Table>\n                                            </TableContainer>\n                                        </Box>\n                                    )\n                                },\n                                thead: (props) => {\n                                    return (<TableHead>\n                                        {props.children}\n                                    </TableHead>)\n                                },\n                                tr: (props) => {\n                                    return (<TableRow sx={{ '&:last-child td': { border: 0 } }}>{props.children}</TableRow>)\n                                },\n                                th: (props) => {\n                                    return (<TableCell>{props.children}</TableCell>)\n                                },\n                                td: (props) => {\n                                    return (<TableCell>{props.children}</TableCell>)\n                                },\n                                a: (props) => {\n                                    return (<Link href={props.href}>{props.children}</Link>)\n                                }\n                            }}\n                        />}\n                    </Box>\n                </Container>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nconst H1Component = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 36,\n    fontWeight: 600,\n}))\n\nconst H2Component = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 20,\n    fontWeight: 600,\n    marginTop: 16,\n}))\n\nconst H3Component = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 18,\n    fontWeight: 600,\n}))\n\nconst PComponent = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 16,\n    fontWeight: 400,\n}))\n\n\n\nconst DocumentsDisplayWrapper = (props: any) => {\n    const params = useParams()\n    return <DocumentsDisplay params={params} {...props} />\n}\n\nexport { DocumentsDisplayWrapper as DocumentsDisplay };\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Toolbar,\n  Typography,\n  Tooltip,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport HomeIcon from \"@mui/icons-material/Home\";\n\ninterface CLIModGeneratorToolBarProps {\n  moduleName: string;\n  onHomePage: () => void;\n  onGenerate: () => void;\n}\n\nclass CLIModGeneratorToolBar extends React.Component<CLIModGeneratorToolBarProps> {\n  render() {\n    const { moduleName, onHomePage, onGenerate } = this.props;\n    return (\n      <React.Fragment>\n        <AppBar\n          sx={{ position: \"fixed\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              height: 64,\n            }}\n          >\n            <IconButton\n              color=\"inherit\"\n              onClick={onHomePage}\n              aria-label=\"home\"\n              sx={{ mr: 2, flexShrink: 0 }}\n            >\n              <HomeIcon sx={{ mr: 2 }} />\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                color=\"inherit\"\n                sx={{ mr: 2 }}\n              >\n                GENERATION\n              </Typography>\n            </IconButton>\n\n            <Typography variant=\"h5\" component=\"div\" color=\"inherit\">\n              {moduleName}\n            </Typography>\n\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ flexShrink: 0 }}>\n              <Tooltip title=\"Generate CLI Commands\">\n                <Button variant=\"outlined\" color=\"inherit\" onClick={onGenerate}>\n                  Generate\n                </Button>\n              </Tooltip>\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CLIModGeneratorToolBar;\n","import * as React from \"react\";\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\n\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Box, Checkbox, FormControl, Typography, Select, MenuItem, styled, TypographyProps, FormHelperText, InputLabel } from \"@mui/material\";\nimport { CLIModViewCommand, CLIModViewCommandGroup, CLIModViewCommandGroups, CLIModViewCommands, CLIModViewProfile } from \"./CLIModuleCommon\";\n\n\ninterface CLIModGeneratorProfileCommandTreeProps {\n    profileCommandTree: ProfileCommandTree,\n    onChange: (newProfileCommandTree: ProfileCommandTree) => void,\n}\n\ninterface CLIModGeneratorProfileCommandTreeSate {\n    defaultExpanded: string[],\n}\n\nconst CommandGroupTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 17,\n    fontWeight: 600,\n}))\n\nconst CommandTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.primary.main,\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 20,\n    fontWeight: 400,\n}))\n\nconst SelectionTypography = styled(Typography)<TypographyProps>(({ theme }) => ({\n    color: theme.palette.grey[700],\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 15,\n    fontWeight: 400,\n}))\n\nconst RegisteredTypography = styled(SelectionTypography)<TypographyProps>(({ theme }) => ({\n}))\n\nconst UnregisteredTypography = styled(SelectionTypography)<TypographyProps>(({ theme }) => ({\n    color: '#d9c136',\n}))\n\n\nclass CLIModGeneratorProfileCommandTree extends React.Component<CLIModGeneratorProfileCommandTreeProps, CLIModGeneratorProfileCommandTreeSate> {\n\n    constructor(props: CLIModGeneratorProfileCommandTreeProps) {\n        super(props);\n        this.state = {\n            defaultExpanded: GetDefaultExpanded(this.props.profileCommandTree)\n        }\n    }\n\n    onSelectCommandGroup = (commandGroupId: string, selected: boolean) => {\n        let newTree = updateProfileCommandTree(this.props.profileCommandTree, commandGroupId, selected);\n        this.props.onChange(newTree);\n    }\n\n    onSelectCommand = (commandId: string, selected: boolean) => {\n        let newTree = updateProfileCommandTree(this.props.profileCommandTree, commandId, selected);\n        this.props.onChange(newTree);\n    }\n\n    onSelectCommandVersion = (commandId: string, version: string) => {\n        let newTree = updateProfileCommandTree(this.props.profileCommandTree, commandId, true, version);\n        this.props.onChange(newTree);\n    }\n\n    onSelectCommandRegistered = (commandId: string, registered: boolean) => {\n        let newTree = updateProfileCommandTree(this.props.profileCommandTree, commandId, true, undefined, registered);\n        this.props.onChange(newTree);\n    }\n\n    render() {\n        const { defaultExpanded } = this.state\n        const renderCommand = (command: ProfileCTCommand) => {\n            const leafName = command.names[command.names.length - 1];\n            const selected = command.selectedVersion !== undefined;\n            return (\n                <TreeItem sx={{ marginLeft: 2 }} key={command.id} nodeId={command.id} color='inherit' label={<Box sx={{\n                    marginTop: 1,\n                    marginBottom: 1,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                }}>\n                    <Checkbox\n                        disableRipple\n                        checked={selected}\n                        onClick={(event) => {\n                            this.onSelectCommand(command.id, !selected);\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }}\n                    />\n                    {/* <DescriptionIcon /> */}\n                    <Box sx={{\n                        marginLeft: 1,\n                        minWidth: 100,\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                    }}>\n                        <CommandTypography>{leafName}</CommandTypography>\n                        <Box sx={{\n                            marginLeft: 1,\n                            width: 20,\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}>\n                            {command.modified && <EditIcon fontSize=\"small\" color=\"info\" />}\n                        </Box>\n                    </Box>\n                    {command.selectedVersion !== undefined && <Box sx={{\n                        marginLeft: 1,\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\"\n                    }}>\n\n                        <FormControl sx={{\n                            minWidth: 150,\n                            marginLeft: 1,\n                        }} size=\"small\" variant=\"standard\">\n                            <InputLabel>Version</InputLabel>\n                            <Select\n                                id={`${command.id}-version-select`}\n                                value={command.selectedVersion}\n                                onChange={(event) => {\n                                    this.onSelectCommandVersion(command.id, event.target.value);\n                                }}\n                                size=\"small\"\n                            >\n                                {command.versions.map((version) => {\n                                    return (<MenuItem value={version.name} key={`${command.id}-version-select-${version.name}`}>\n                                        <SelectionTypography>{version.name}</SelectionTypography>\n                                    </MenuItem>);\n                                })}\n                            </Select>\n                        </FormControl>\n                        <FormControl sx={{\n                            minWidth: 150,\n                            marginLeft: 1,\n                        }} size=\"small\" variant=\"standard\">\n                            <InputLabel>Command table</InputLabel>\n                            <Select\n                                id={`${command.id}-register-select`}\n                                value={command.registered ? 1 : 0}\n                                onChange={(event) => {\n                                    this.onSelectCommandRegistered(command.id, event.target.value === 1);\n                                }}\n                                size=\"small\"\n                            >\n                                <MenuItem value={1} key={`${command.id}-register-select-registered`}>\n                                    <RegisteredTypography>Registered</RegisteredTypography>\n                                </MenuItem>\n                                <MenuItem value={0} key={`${command.id}-register-select-unregistered`}>\n                                    <UnregisteredTypography>Unregistered</UnregisteredTypography>\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Box>}\n\n                </Box>}\n                    onClick={(event) => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }}\n                />\n            )\n        }\n\n        const renderCommandGroup = (commandGroup: ProfileCTCommandGroup) => {\n            const nodeName = commandGroup.names[commandGroup.names.length - 1];\n            const selected = commandGroup.selectedCommands > 0 && commandGroup.totalCommands === commandGroup.selectedCommands;\n            return (\n                <TreeItem sx={{ marginLeft: 2, marginTop: 0.5 }} key={commandGroup.id} nodeId={commandGroup.id} color='inherit' label={<Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                }}>\n                    <Checkbox\n                        disableRipple\n                        checked={selected}\n                        indeterminate={!selected && commandGroup.selectedCommands > 0}\n                        onClick={(event) => {\n                            this.onSelectCommandGroup(commandGroup.id, !selected);\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }}\n                    />\n                    <FolderIcon />\n                    <CommandGroupTypography sx={{ marginLeft: 1 }}>{nodeName}</CommandGroupTypography>\n                </Box>}\n                    onClick={(event) => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }}\n                >\n                    {commandGroup.commands !== undefined && commandGroup.commands.map((command) => renderCommand(command))}\n                    {commandGroup.commandGroups !== undefined && commandGroup.commandGroups.map((group) => renderCommandGroup(group))}\n                </TreeItem>\n            )\n        }\n\n        return (<React.Fragment>\n            <TreeView\n                disableSelection={true}\n                defaultExpanded={defaultExpanded}\n                defaultCollapseIcon={<ArrowDropDownIcon />}\n                defaultExpandIcon={<ArrowRightIcon />}>\n                {this.props.profileCommandTree.commandGroups.map((commandGroup) => renderCommandGroup(commandGroup))}\n            </TreeView>\n        </React.Fragment>)\n    }\n}\n\ninterface ProfileCommandTree {\n    name: string;\n    commandGroups: ProfileCTCommandGroup[];\n};\n\ninterface ProfileCTCommandGroup {\n    id: string;\n    names: string[];\n    help: string;\n\n    commandGroups?: ProfileCTCommandGroup[];\n    commands?: ProfileCTCommand[];\n    waitCommand?: CLIModViewCommand;\n\n    totalCommands: number;\n    selectedCommands: number;\n};\n\ninterface ProfileCTCommand {\n    id: string;\n    names: string[];\n    help: string;\n\n    versions: ProfileCTCommandVersion[];\n\n    selectedVersion?: string;\n    registered?: boolean;\n    modified: boolean;\n};\n\ninterface ProfileCTCommandVersion {\n    name: string;\n    stage: string;\n};\n\nfunction decodeProfileCTCommandVersion(response: any): ProfileCTCommandVersion {\n    return {\n        name: response.name,\n        stage: response.stage,\n    }\n}\n\n\nfunction decodeProfileCTCommand(response: any): ProfileCTCommand {\n    let versions = response.versions.map((value: any) => decodeProfileCTCommandVersion(value));\n    return {\n        id: response.names.join('/'),\n        names: [...response.names],\n        help: response.help.short,\n        versions: versions,\n        modified: false,\n    }\n}\n\nfunction decodeProfileCTCommandGroup(response: any): ProfileCTCommandGroup {\n    let commands = response.commands !== undefined ? Object.keys(response.commands).map((name: string) => decodeProfileCTCommand(response.commands[name])) : undefined;\n    let commandGroups = response.commandGroups !== undefined ? Object.keys(response.commandGroups).map((name: string) => decodeProfileCTCommandGroup(response.commandGroups[name])) : undefined;\n    let totalCommands = commands?.length ?? 0;\n    totalCommands = commandGroups?.reduce((previousValue, value) => previousValue + value.totalCommands, totalCommands) ?? totalCommands;\n    return {\n        id: response.names.join('/'),\n        names: [...response.names],\n        help: response.help.short,\n        commandGroups: commandGroups,\n        commands: commands,\n        totalCommands: totalCommands,\n        selectedCommands: 0,\n    }\n}\n\nfunction BuildProfileCommandTree(profileName: string, response: any): ProfileCommandTree {\n    let commandGroups: ProfileCTCommandGroup[] = response.commandGroups !== undefined ? Object.keys(response.commandGroups).map((name: string) => decodeProfileCTCommandGroup(response.commandGroups[name])) : [];\n    return {\n        name: profileName,\n        commandGroups: commandGroups,\n    }\n}\n\nfunction getDefaultExpandedOfCommandGroup(commandGroup: ProfileCTCommandGroup): string[] {\n    let expandedIds = commandGroup.commandGroups?.flatMap(value => [value.id, ...getDefaultExpandedOfCommandGroup(value)]) ?? [];\n    return expandedIds;\n}\n\n\nfunction GetDefaultExpanded(tree: ProfileCommandTree): string[] {\n    return tree.commandGroups.flatMap(value => {\n        let ids = getDefaultExpandedOfCommandGroup(value);\n        if (value.selectedCommands > 0) {\n            ids.push(value.id);\n        }\n        return ids;\n    });\n}\n\nfunction updateCommand(command: ProfileCTCommand, commandId: string, selected: boolean, version: string | undefined, registered: boolean | undefined): ProfileCTCommand {\n    if (command.id !== commandId) {\n        return command;\n    }\n\n    if (selected) {\n        let selectedVersion = version ?? command.selectedVersion ?? command.versions[0].name;\n        let registerCommand = registered ?? command.registered ?? true;\n        return {\n            ...command,\n            selectedVersion: selectedVersion,\n            registered: registerCommand,\n            modified: true,\n        }\n\n    } else {\n        return {\n            ...command,\n            selectedVersion: undefined,\n            registered: undefined,\n            modified: true,\n        }\n    }\n}\n\nfunction updateCommandGroup(commandGroup: ProfileCTCommandGroup, id: string, selected: boolean, version: string | undefined, registered: boolean | undefined): ProfileCTCommandGroup {\n    if (commandGroup.id !== id && !id.startsWith(`${commandGroup.id}/`)) {\n        return commandGroup;\n    }\n    let commands: ProfileCTCommand[] | undefined = undefined;\n    let commandGroups: ProfileCTCommandGroup[] | undefined = undefined;\n\n    if (commandGroup.id === id) {\n        commands = commandGroup.commands?.map((value) => updateCommand(value, value.id, selected, version, registered));\n        commandGroups = commandGroup.commandGroups?.map((value) => updateCommandGroup(value, value.id, selected, version, registered));\n    } else {\n        commands = commandGroup.commands?.map((value) => updateCommand(value, id, selected, version, registered));\n        commandGroups = commandGroup.commandGroups?.map((value) => updateCommandGroup(value, id, selected, version, registered));\n    }\n\n    let selectedCommands = commands?.reduce((pre, value) => { return value.selectedVersion !== undefined ? pre + 1 : pre }, 0) ?? 0;\n    selectedCommands += commandGroups?.reduce((pre, value) => { return pre + value.selectedCommands }, 0) ?? 0;\n\n    return {\n        ...commandGroup,\n        commands: commands,\n        commandGroups: commandGroups,\n        selectedCommands: selectedCommands,\n    }\n}\n\nfunction updateProfileCommandTree(tree: ProfileCommandTree, id: string, selected: boolean, version: string | undefined = undefined, registered: boolean | undefined = undefined): ProfileCommandTree {\n    let commandGroups = tree.commandGroups.map((value) => updateCommandGroup(value, id, selected, version, registered));\n    return {\n        ...tree,\n        commandGroups: commandGroups\n    }\n}\n\nfunction updateCommandByModView(command: ProfileCTCommand, view: CLIModViewCommand): ProfileCTCommand {\n    if (command.id !== view.names.join('/')) {\n        throw new Error(\"Invalid command names: \" + view.names.join(' '))\n    }\n    return {\n        ...command,\n        selectedVersion: view.version,\n        registered: view.registered,\n    }\n}\n\nfunction updateCommandGroupByModView(commandGroup: ProfileCTCommandGroup, view: CLIModViewCommandGroup): ProfileCTCommandGroup {\n    if (commandGroup.id !== view.names.join('/')) {\n        throw new Error(\"Invalid command group names: \" + view.names.join(' '))\n    }\n    let commands = commandGroup.commands;\n    if (view.commands !== undefined) {\n        let keys = new Set(Object.keys(view.commands!));\n        commands = commandGroup.commands?.map((value) => {\n            if (keys.has(value.names[value.names.length - 1])) {\n                keys.delete(value.names[value.names.length - 1])\n                return updateCommandByModView(value, view.commands![value.names[value.names.length - 1]])\n            } else {\n                return value;\n            }\n        })\n        if (keys.size > 0) {\n            let commandNames: string[] = [];\n            keys.forEach(key => {\n                commandNames.push('`az ' + view.commands![key].names.join(\" \") + '`')\n            })\n            throw new Error(\"Miss commands in aaz: \" + commandNames.join(', '))\n        }\n    }\n\n    let commandGroups = commandGroup.commandGroups;\n    if (view.commandGroups !== undefined) {\n        let keys = new Set(Object.keys(view.commandGroups!));\n        commandGroups = commandGroup.commandGroups?.map((value) => {\n            if (keys.has(value.names[value.names.length - 1])) {\n                keys.delete(value.names[value.names.length - 1])\n                return updateCommandGroupByModView(value, view.commandGroups![value.names[value.names.length - 1]])\n            } else {\n                return value;\n            }\n        })\n        if (keys.size > 0) {\n            let commandGroupNames: string[] = [];\n            keys.forEach(key => {\n                commandGroupNames.push('`az ' + view.commandGroups![key].names.join(\" \") + '`')\n            })\n            throw new Error(\"Miss command groups in aaz: \" + commandGroupNames.join(', '))\n        }\n    }\n\n    let selectedCommands = commands?.reduce((pre, value) => { return value.selectedVersion !== undefined ? pre + 1 : pre }, 0) ?? 0;\n    selectedCommands += commandGroups?.reduce((pre, value) => { return pre + value.selectedCommands }, 0) ?? 0;\n    return {\n        ...commandGroup,\n        commands: commands,\n        commandGroups: commandGroups,\n        selectedCommands: selectedCommands,\n        waitCommand: view.waitCommand,\n    }\n}\n\nfunction UpdateProfileCommandTreeByModView(tree: ProfileCommandTree, view: CLIModViewProfile): ProfileCommandTree {\n    let commandGroups = tree.commandGroups;\n    if (view.commandGroups !== undefined) {\n        let keys = new Set(Object.keys(view.commandGroups));\n        commandGroups = tree.commandGroups.map((value) => {\n            if (keys.has(value.names[value.names.length - 1])) {\n                keys.delete(value.names[value.names.length - 1])\n                return updateCommandGroupByModView(value, view.commandGroups![value.names[value.names.length - 1]])\n            } else {\n                return value;\n            }\n        })\n        if (keys.size > 0) {\n            let commandGroupNames: string[] = [];\n            keys.forEach(key => {\n                commandGroupNames.push('`az ' + view.commandGroups![key].names.join(\" \") + '`')\n            })\n            throw new Error(\"Miss command groups in aaz: \" + commandGroupNames.join(', '))\n        }\n    }\n\n    return {\n        ...tree,\n        commandGroups: commandGroups\n    }\n}\n\nfunction ExportModViewCommand(command: ProfileCTCommand): CLIModViewCommand | undefined {\n    if (command.selectedVersion === undefined) {\n        return undefined\n    }\n\n    return {\n        names: command.names,\n        registered: command.registered!,\n        version: command.selectedVersion!,\n        modified: command.modified,\n    }\n}\n\nfunction ExportModViewCommandGroup(commandGroup: ProfileCTCommandGroup): CLIModViewCommandGroup | undefined {\n    if (commandGroup.selectedCommands === 0) {\n        return undefined\n    }\n\n    let commands: CLIModViewCommands | undefined = undefined;\n    if (commandGroup.commands !== undefined) {\n        commands = {}\n\n        commandGroup.commands!.forEach(value => {\n            let view = ExportModViewCommand(value);\n            if (view !== undefined) {\n                commands![value.names[value.names.length - 1]] = view;\n            }\n        })\n    }\n\n    let commandGroups: CLIModViewCommandGroups | undefined = undefined;\n    if (commandGroup.commandGroups !== undefined) {\n        commandGroups = {}\n\n        commandGroup.commandGroups!.forEach(value => {\n            let view = ExportModViewCommandGroup(value);\n            if (view !== undefined) {\n                commandGroups![value.names[value.names.length - 1]] = view;\n            }\n        })\n    }\n    return {\n        names: commandGroup.names,\n        commandGroups: commandGroups,\n        commands: commands,\n        waitCommand: commandGroup.waitCommand,\n    }\n}\n\n\nfunction ExportModViewProfile(tree: ProfileCommandTree): CLIModViewProfile {\n    let commandGroups: CLIModViewCommandGroups = {};\n\n    tree.commandGroups.forEach(value => {\n        let view = ExportModViewCommandGroup(value);\n        if (view !== undefined) {\n            commandGroups[value.names[value.names.length - 1]] = view;\n        }\n    })\n\n    return {\n        name: tree.name,\n        commandGroups: commandGroups\n    }\n}\n\nexport default CLIModGeneratorProfileCommandTree;\n\nexport type { ProfileCommandTree, }\n\nexport { BuildProfileCommandTree, UpdateProfileCommandTreeByModView, ExportModViewProfile }","import * as React from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\ninterface CLIModGeneratorProfileTabsProps {\n    value: number;\n    profiles: string[];\n    onChange: (newValue: number) => void;\n}\n\n\nclass CLIModGeneratorProfileTabs extends React.Component<CLIModGeneratorProfileTabsProps> {\n    render() {\n        const { value, profiles, onChange } = this.props;\n        return (\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={(event, newValue) => {\n                    onChange(newValue)\n                }}\n                aria-label=\"Vertical tabs example\"\n                sx={{ borderRight: 1, borderColor: \"divider\" }}\n            >\n                {profiles.map((profile, idx) => {\n                    return <Tab key={idx} label={profile} id={`vertical-tab-${idx}`}\n                        aria-controls={`vertical-tabpanel-${idx}`} />;\n                })}\n            </Tabs>\n        );\n    }\n}\n\nexport default CLIModGeneratorProfileTabs;\n","import * as React from \"react\";\nimport {\n    Backdrop,\n    Box,\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Drawer,\n    LinearProgress,\n    Toolbar,\n    Alert,\n} from \"@mui/material\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport CLIModGeneratorToolBar from \"./CLIModGeneratorToolBar\";\nimport CLIModGeneratorProfileCommandTree, { BuildProfileCommandTree, ExportModViewProfile, ProfileCommandTree, UpdateProfileCommandTreeByModView } from \"./CLIModGeneratorProfileCommandTree\";\nimport CLIModGeneratorProfileTabs from \"./CLIModGeneratorProfileTabs\";\nimport { CLIModView, CLIModViewProfiles } from \"./CLIModuleCommon\";\n\n\n\ninterface CLIModuleGeneratorProps {\n    params: {\n        repoName: string;\n        moduleName: string;\n    };\n}\n\ninterface CLIModuleGeneratorState {\n    loading: boolean;\n    invalidText?: string,\n    profiles: string[];\n    commandTrees: ProfileCommandTree[];\n    selectedProfileIdx?: number;\n    selectedCommandTree?: ProfileCommandTree;\n    showGenerateDialog: boolean;\n}\n\n\nclass CLIModuleGenerator extends React.Component<CLIModuleGeneratorProps, CLIModuleGeneratorState> {\n\n    constructor(props: CLIModuleGeneratorProps) {\n        super(props);\n        this.state = {\n            loading: false,\n            invalidText: undefined,\n            profiles: [],\n            commandTrees: [],\n            selectedProfileIdx: undefined,\n            selectedCommandTree: undefined,\n            showGenerateDialog: false,\n        }\n    }\n\n    componentDidMount() {\n        this.loadModule();\n    }\n\n    loadModule = async () => {\n        try {\n            this.setState({\n                loading: true,\n            });\n            let res = await axios.get(`/CLI/Az/Profiles`);\n            let profiles: string[] = res.data;\n\n            res = await axios.get(`/AAZ/Specs/CommandTree/Nodes/aaz`);\n            let commandTrees: ProfileCommandTree[] = profiles.map((profileName) => BuildProfileCommandTree(profileName, res.data));\n\n            res = await axios.get(`/CLI/Az/${this.props.params.repoName}/Modules/${this.props.params.moduleName}`);\n            let modView: CLIModView = res.data\n\n            Object.keys(modView.profiles).forEach((profile) => {\n                let idx = profiles.findIndex(v => v === profile);\n                if (idx === -1) {\n                    throw new Error(`Invalid profile ${profile}`);\n                }\n                commandTrees[idx] = UpdateProfileCommandTreeByModView(commandTrees[idx], modView.profiles[profile]);\n            })            \n\n            let selectedProfileIdx = profiles.length > 0 ? 0 : undefined;\n            let selectedCommandTree = selectedProfileIdx !== undefined ? commandTrees[selectedProfileIdx] : undefined;\n            this.setState({\n                loading: false,\n                profiles: profiles,\n                commandTrees: commandTrees,\n                selectedProfileIdx: selectedProfileIdx,\n                selectedCommandTree: selectedCommandTree\n            })\n        } catch (err: any) {\n            console.error(err);\n            if (err.response?.data?.message) {\n                const data = err.response!.data!;\n                this.setState({\n                    invalidText: `ResponseError: ${data.message!}`,\n                })\n            } else {\n                this.setState({\n                    invalidText: `Error: ${err}`,\n                })\n            }\n        }\n    }\n\n    handleBackToHomepage = () => {\n        window.location.href = `/?#/cli`\n    }\n\n    handleGenerate = () => {\n        this.setState({\n            showGenerateDialog: true\n        })\n    }\n\n    handleGenerationClose = (generated: boolean) => {\n        this.setState({\n            showGenerateDialog: false\n        })\n    }\n\n    onProfileChange = (selectedIdx: number) => {\n        this.setState(preState => {\n            return {\n                ...preState,\n                selectedProfileIdx: selectedIdx,\n                selectedCommandTree: preState.commandTrees[selectedIdx],\n            }\n        })\n    }\n\n    onSelectedProfileTreeUpdate = (newTree: ProfileCommandTree) => {\n        this.setState(preState => {\n            return {\n                ...preState,\n                selectedCommandTree: newTree,\n                commandTrees: preState.commandTrees.map((value, idx) => {return idx === preState.selectedProfileIdx ? newTree : value}),\n            }\n        })\n    }\n\n    render() {\n        const { showGenerateDialog, selectedProfileIdx, selectedCommandTree, profiles, commandTrees } = this.state;\n        return (\n            <React.Fragment>\n                <CLIModGeneratorToolBar\n                    moduleName={this.props.params.moduleName}\n                    onHomePage={this.handleBackToHomepage}\n                    onGenerate={this.handleGenerate}\n                />\n                <Box sx={{ display: \"flex\" }}>\n                    <Drawer\n                        variant=\"permanent\"\n                        sx={{\n                            width: 300,\n                            flexShrink: 0,\n                            [`& .MuiDrawer-paper`]: { width: 300, boxSizing: \"border-box\" },\n                        }}\n                    >\n                        <Toolbar />\n                        {selectedProfileIdx !== undefined && <CLIModGeneratorProfileTabs\n                            value={selectedProfileIdx} profiles={profiles} onChange={this.onProfileChange} />}\n                    </Drawer>\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            flexGrow: 1,\n                            p: 2,\n                        }}\n                    >\n                        <Toolbar sx={{ flexShrink: 0 }} />\n                        {selectedCommandTree !== undefined && <CLIModGeneratorProfileCommandTree\n                            profileCommandTree={selectedCommandTree} onChange={this.onSelectedProfileTreeUpdate}/>}\n                    </Box>\n                </Box>\n                {showGenerateDialog && <GenerateDialog\n                    repoName={this.props.params.repoName}\n                    moduleName={this.props.params.moduleName}\n                    profileCommandTrees={commandTrees}\n                    open={showGenerateDialog}\n                    onClose={this.handleGenerationClose}\n                />}\n                <Backdrop\n                    sx={{ color: '#fff', zIndex: (theme: any) => theme.zIndex.drawer + 1 }}\n                    open={this.state.loading}\n                >\n                    {this.state.invalidText !== undefined &&\n                        <Alert sx={{\n                            maxWidth: \"80%\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"stretch\",\n                            justifyContent: \"flex-start\",\n                        }}\n                            variant=\"filled\"\n                            severity='error'\n                            onClose={() => {\n                                this.setState({\n                                    invalidText: undefined,\n                                    loading: false,\n                                })\n                            }}\n                        >\n                            {this.state.invalidText}\n                        </Alert>\n                    }\n                    {this.state.invalidText === undefined && <CircularProgress color='inherit' />}\n                </Backdrop>\n            </React.Fragment>\n        );\n    }\n\n}\n\nfunction GenerateDialog(props: {\n    repoName: string;\n    moduleName: string;\n    profileCommandTrees: ProfileCommandTree[];\n    open: boolean;\n    onClose: (generated: boolean) => void;\n}) {\n    const [updating, setUpdating] = React.useState<boolean>(false);\n    const [invalidText, setInvalidText] = React.useState<string | undefined>(\n        undefined\n    );\n\n    const handleClose = () => {\n        props.onClose(false);\n    };\n\n    const handleGenerateAll = () => {\n        const profiles: CLIModViewProfiles = {};\n        props.profileCommandTrees.forEach(tree => {\n            profiles[tree.name] = ExportModViewProfile(tree);\n        })\n        const data = {\n            name: props.moduleName,\n            profiles: profiles,\n        }\n\n        setUpdating(true);\n        axios\n            .put(\n                `/CLI/Az/${props.repoName}/Modules/${props.moduleName}`,\n                data\n            )\n            .then(() => {\n                setUpdating(false);\n                props.onClose(true);\n            })\n            .catch((err) => {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    setInvalidText(\n                        `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    );\n                }\n                setUpdating(false);\n            });\n    };\n\n    const handleGenerateModified = () => {\n        const profiles: CLIModViewProfiles = {};\n        props.profileCommandTrees.forEach(tree => {\n            profiles[tree.name] = ExportModViewProfile(tree);\n        })\n        const data = {\n            name: props.moduleName,\n            profiles: profiles,\n        }\n\n        setUpdating(true);\n        axios\n            .patch(\n                `/CLI/Az/${props.repoName}/Modules/${props.moduleName}`,\n                data\n            )\n            .then(() => {\n                setUpdating(false);\n                props.onClose(true);\n            })\n            .catch((err) => {\n                console.error(err.response);\n                if (err.response?.data?.message) {\n                    const data = err.response!.data!;\n                    setInvalidText(\n                        `ResponseError: ${data.message!}: ${JSON.stringify(data.details)}`\n                    );\n                }\n                setUpdating(false);\n            });\n    }\n\n\n    return (\n        <Dialog disableEscapeKeyDown open={props.open}>\n            <DialogTitle>Generate CLI commands to {props.moduleName}</DialogTitle>\n            <DialogContent>\n                {invalidText && <Alert variant=\"filled\" severity=\"error\"> {invalidText} </Alert>}\n            </DialogContent>\n            <DialogActions>\n                {updating &&\n                    <Box sx={{ width: \"100%\" }}>\n                        <LinearProgress color=\"info\" />\n                    </Box>\n                }\n                {!updating && <React.Fragment>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleGenerateAll}>Generate All</Button>\n                    <Button onClick={handleGenerateModified}>Generate Edited Only</Button>\n                </React.Fragment>}\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nconst CLIModuleGeneratorWrapper = (props: any) => {\n    const params = useParams();\n    return <CLIModuleGenerator params={params} {...props} />\n}\n\nexport { CLIModuleGeneratorWrapper as CLIModuleGenerator };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport HomePage from './views/home/HomePage';\nimport WorkspacePage from './views/workspace/WorkspacePage';\nimport WorkspaceInstruction from './views/workspace/WorkspaceInstruction';\nimport { WSEditor } from './views/workspace/WSEditor';\nimport CommandsPage from './views/commands/CommandsPage';\nimport CLIPage from './views/cli/CLIPage';\nimport CLIInstruction from './views/cli/CLIInstruction';\nimport DocumentsPage from './views/documentation/DocumentsPage';\nimport { DocumentsDisplay } from './views/documentation/DocumentsDisplay';\nimport { CLIModuleGenerator } from './views/cli/CLIModuleGenerator';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"HomePage\" element={<HomePage />} />\n          <Route path=\"Workspace\" element={<WorkspacePage />}>\n            <Route index element={<WorkspaceInstruction />} />\n            <Route path=\"Instruction\" element={<WorkspaceInstruction />} />\n            <Route path=\":workspaceName\" element={<WSEditor />} />\n          </Route>\n          <Route path=\"Commands\" element={<CommandsPage />}>\n          </Route>\n          <Route path=\"CLI\" element={<CLIPage />}>\n            <Route index element={<CLIInstruction />} />\n            <Route path=\"Instruction\" element={<CLIInstruction />} >\n            </Route>\n            <Route path=\":repoName/:moduleName\" element={<CLIModuleGenerator />} />\n          </Route>\n          <Route path=\"Documents\" element={<DocumentsPage />}>\n            <Route index element={<DocumentsDisplay/>} />\n            <Route path=\":docId\" element={<DocumentsDisplay/>} />\n          </Route>\n        </Route>\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}